/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2023-06-16 05:11:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Company_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"row clearfix\">\r\n");
      out.write("    <div class=\"col-md-12\">\r\n");
      out.write("        <div class=\"card border-0 mb-4 no-bg\">\r\n");
      out.write("            <div class=\"card-header py-3 px-0 d-flex align-items-center  justify-content-between border-bottom\">\r\n");
      out.write("                <h3 class=\" fw-bold flex-fill mb-0\">회사목록</h3>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div><!-- Row End -->\r\n");
      out.write("\r\n");
      out.write("<div id=\"companyList\" class=\"row g-3 row-cols-1 row-cols-sm-1 row-cols-md-1 row-cols-lg-2 row-cols-xl-2 row-cols-xxl-2 row-deck py-1 pb-4\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("const add = (a,b) => a + b;\r\n");
      out.write("\r\n");
      out.write("let companyList = document.querySelector(\"#companyList\");\r\n");
      out.write("\r\n");
      out.write("fetch(\"/ourmine/company/companyList\",{\r\n");
      out.write("      method : \"GET\",\r\n");
      out.write("      headers: {\r\n");
      out.write("         'accept': 'application/json',\r\n");
      out.write("      },\r\n");
      out.write("}).then(resp => resp.json())\r\n");
      out.write("   .then(data => {\r\n");
      out.write("      console.log(\"회사데이타\",data);\r\n");
      out.write("      data.map(item=>{\r\n");
      out.write("          companyList.innerHTML+=\r\n");
      out.write("              `\r\n");
      out.write("           <div class=\"col\">\r\n");
      out.write("\t\t       <div class=\"card teacher-card\">\r\n");
      out.write("\t\t           <div class=\"card-body  d-flex\">\r\n");
      out.write("\t\t               <div class=\"profile-av pe-xl-4 pe-md-2 pe-sm-4 pe-4 text-center w220\">\r\n");
      out.write("\t\t                   <img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/lg/마스코트_투명.png\" alt=\"\" class=\"avatar xl rounded-circle img-thumbnail shadow-sm\">\r\n");
      out.write("\t\t                   <div class=\"about-info d-flex align-items-center mt-1 justify-content-center flex-column\">\r\n");
      out.write("\t\t                      <h6 class=\"mb-0 fw-bold d-block fs-6 mt-2\">${item.companyName}</h6>\r\n");
      out.write("\t\t                   </div>\r\n");
      out.write("\t\t               </div>\r\n");
      out.write("\t\t               <div class=\"teacher-info border-start ps-xl-4 ps-md-3 ps-sm-4 ps-4 w-100\">\r\n");
      out.write("\t\t                   <h6  class=\"mb-0 mt-2  fw-bold d-block fs-6\">${item.companyCeo}</h6>\r\n");
      out.write("\t\t                   <span class=\"py-1 fw-bold small-11 mb-0 mt-1 text-muted\">매니저</span>\r\n");
      out.write("\t\t                   <div class=\"video-setting-icon mt-3 pt-3 border-top\">\r\n");
      out.write("\t\t                       <p>주소: ${item.companyAddr}</p>\r\n");
      out.write("\t\t                   </div>\r\n");
      out.write("\t\t                   <div class=\"d-flex flex-wrap align-items-center ct-btn-set\">\r\n");
      out.write("\t\t                       <a href=\"#\" class=\"btn btn-dark btn-sm mt-1 me-1\"><i class=\"icofont-ui-text-chat me-2 fs-6\"></i>${item.subscribeEndDate}</a>\r\n");
      out.write("\t\t                       <a href=\"#\" class=\"btn btn-dark btn-sm mt-1\"><i class=\"icofont-invisible me-2 fs-6\"></i>D-${item.subDay}</a>\r\n");
      out.write("\t\t                   </div>\r\n");
      out.write("\t\t               </div>\r\n");
      out.write("\t\t           </div>\r\n");
      out.write("\t\t       </div>\r\n");
      out.write("\t\t   </div>\r\n");
      out.write("           `\r\n");
      out.write("      })\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("   })\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
