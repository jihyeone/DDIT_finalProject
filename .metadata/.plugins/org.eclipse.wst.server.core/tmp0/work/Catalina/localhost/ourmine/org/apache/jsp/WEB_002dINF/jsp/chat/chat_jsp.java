/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2023-06-10 03:30:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.chat;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class chat_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/E:/A_TeachingMaterial/05_JSP_Spring/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/ourmine/WEB-INF/lib/spring-security-taglibs-5.7.8.jar!/META-INF/security.tld", Long.valueOf(1681713972000L));
    _jspx_dependants.put("/WEB-INF/lib/spring-security-taglibs-5.7.8.jar", Long.valueOf(1683020361417L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fvar_005fproperty_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fvar_005fproperty_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fvar_005fproperty_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- <h4> 웹소켓 샘플 </h4> -->\r\n");
      out.write("<!-- <button class=\"wsControl\" data-role=\"connect\">연결수립</button> -->\r\n");
      out.write("<!-- <button class=\"wsControl\" data-role=\"disconnect\" disabled=\"disabled\">연결종료</button> -->\r\n");
      out.write("<br />\r\n");
      out.write("<!-- <input type=\"text\" class=\"wsControl\" id=\"msgInput\"  disabled=\"disabled\"/> -->\r\n");
      out.write("<!-- <button class=\"wsControl\" data-role=\"send\"  disabled=\"disabled\">전송</button> -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\n");
      out.write("\t#chatNewBedge{\r\n");
      out.write("\t\tdisplay:none;\r\n");
      out.write("\t}\r\n");
      out.write("\t.w420{\r\n");
      out.write("\t    min-width: 420px;\r\n");
      out.write("\t    max-width: 420px;\r\n");
      out.write("\t    \r\n");
      out.write("\t}\n");
      out.write("</style>\r\n");
      out.write("<div id=\"mytask-layout\" class=\"theme-indigo\">\r\n");
      out.write("    <!-- main body area -->\r\n");
      out.write("    <div class=\"main\">\r\n");
      out.write("        <!-- Body: Body -->\r\n");
      out.write("        <div class=\"body d-flex ms-4\">\r\n");
      out.write("            <div class=\"m-4\">\r\n");
      out.write("                <div class=\"row g-0\">\r\n");
      out.write("                    <div class=\"col-10 d-flex ms-4\">\r\n");
      out.write("                       <!-- Card: -->\r\n");
      out.write("                        <div class=\"card card-chat border-right border-top-0 border-bottom-0  w420\" id=\"searchCard\">\r\n");
      out.write("                        <button type=\"button\" class=\"btn btn-dark btn-set-task w-sm-100\" data-bs-toggle=\"modal\" data-bs-target=\"#createtask\"><i class=\"icofont-plus-circle me-2 fs-6\"></i>채팅방 만들기</button>\r\n");
      out.write("                            <div class=\"px-4 py-3 py-md-4\">\r\n");
      out.write("                                <div class=\"input-group mb-3\">\r\n");
      out.write("                                    <input type=\"text\" class=\"form-control mb-1\" placeholder=\"검색...\" id=\"searchChatting\" >\r\n");
      out.write("                                </div>\r\n");
      out.write("\r\n");
      out.write("                                <div class=\"nav nav-pills justify-content-between text-center\" role=\"tablist\" id=\"reloadList\">\r\n");
      out.write("                                    <a class=\"flex-fill rounded border-0 nav-link active\" data-bs-toggle=\"tab\" href=\"#chat-recent\" role=\"tab\" aria-selected=\"true\">Chat</a>\r\n");
      out.write("                                    <a class=\"flex-fill rounded border-0 nav-link\" data-bs-toggle=\"tab\" href=\"#chat-groups\" role=\"tab\" aria-selected=\"false\">Members Groups</a>\r\n");
      out.write("                                    <a class=\"flex-fill rounded border-0 nav-link\" data-bs-toggle=\"tab\" href=\"#chat-contact\" role=\"tab\" aria-selected=\"false\">Contact</a>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("\t\t\t\t\t\t\t<!-- 개인채팅목록 -->\r\n");
      out.write("                            <div class=\"tab-content border-top\">\r\n");
      out.write("                                <div class=\"tab-pane fade show active\" id=\"chat-recent\" role=\"tabpanel\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                                </div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<!-- 그룹채팅목록 -->\r\n");
      out.write("                                <div class=\"tab-pane fade\" id=\"chat-groups\" role=\"tabpanel\">\r\n");
      out.write("\r\n");
      out.write("                                </div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<!-- 친구목록 -->\r\n");
      out.write("                                <div class=\"tab-pane fade\" id=\"chat-contact\" role=\"tabpanel\">\r\n");
      out.write("\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <!-- Card: -->\r\n");
      out.write("                        <div class=\"card card-chat-body border-0  w-100 px-4 px-md-5 py-3 py-md-4\">\r\n");
      out.write("\r\n");
      out.write("                            <!-- Chat: Header -->\r\n");
      out.write("                            <div class=\"chat-header d-flex justify-content-between align-items-center border-bottom pb-3\">\r\n");
      out.write("                                <div class=\"d-flex align-items-center\">\r\n");
      out.write("                                    <a href=\"/ourmine/company/1/project/4/dashBoard\" title=\"Home\"><i class=\"fa fa-home fs-5\"></i></a>\r\n");
      out.write("                                    <div class=\"ms-3\" id=\"chattingNameArea\">\r\n");
      out.write("\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"d-flex\">\r\n");
      out.write("                                \t<div id=\"chattingOutBtn\">\r\n");
      out.write("                                \t</div>\r\n");
      out.write("                                \t<div class=\"dropdown\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    <a class=\"nav-link py-2 px-3 text-muted d-none d-lg-block dropdown-toggle\" href=\"javascript:void(0);\" type=\"button\" id=\"dropdownMenuButton5\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t        <i class=\"fa fa-info-circle\"></i>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    </a>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    <div class=\"dropdown-menu p-4 text-muted border-0 shadow\" style=\"max-width: 200px;\" id=\"chattingInfoArea\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    </div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("\r\n");
      out.write("                            <!-- 채팅 : body -->\r\n");
      out.write("                            <ul class=\"chat-history list-unstyled mb-0 py-lg-5 py-md-4 py-3 flex-grow-1\" id=\"chatSender\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("                            </ul>\r\n");
      out.write("\r\n");
      out.write("                            <!-- 채팅 : Footer -->\r\n");
      out.write("                            <div class=\"chat-message\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"modal-footer\">\r\n");
      out.write("\t                            <textarea class=\"form-control wsControl\" id=\"msgInput\"  rows=\"4\" cols=\"40\" placeholder=\"메세지 작성...\"  ></textarea><br>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<button class=\"btn btn-primary wsControl\" data-role=\"send\" onclick=\"msgCommit()\" >전송</button>\r\n");
      out.write("                           \t\t</div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div> \r\n");
      out.write("                <!-- row end -->\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("<!-- 채팅방 생성 모달 -->\r\n");
      out.write("<div class=\"modal fade\" id=\"createtask\" tabindex=\"-1\"  aria-hidden=\"true\">\r\n");
      out.write("            <div class=\"modal-dialog modal-dialog-centered modal-md modal-dialog-scrollable\">\r\n");
      out.write("            <div class=\"modal-content\">\r\n");
      out.write("                <div class=\"modal-header\">\r\n");
      out.write("                    <h5 class=\"modal-title  fw-bold\" id=\"createprojectlLabel\"> 채팅방 생성 </h5>\r\n");
      out.write("                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"modal-body\">\r\n");
      out.write("                    <div class=\"mb-3\">\r\n");
      out.write("                        <label  class=\"form-label\">채팅방 이름</label>\r\n");
      out.write("                        <input class=\"form-control\" id=\"groupChatName\" placeholder=\"채팅방 이름..\"/>\r\n");
      out.write("                        <div id=\"jiError\" style=\"display:none;color:red\" >채팅방 이름을 써주세요!</div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"mb-3\">\r\n");
      out.write("                        <label  class=\"form-label\">상위부서</label>\r\n");
      out.write("                        <select class=\"form-select\" id=\"selDeptArea\" onchange=\"fselChange(this)\" aria-label=\"Default select Project Category\">\r\n");
      out.write("                            <option selected>부서</option>\r\n");
      out.write("                            \r\n");
      out.write("\r\n");
      out.write("                        </select>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"mb-3\">\r\n");
      out.write("                        <label  class=\"form-label\">하위부서</label>\r\n");
      out.write("                        <select class=\"form-select\" id=\"selTeamArea\" onchange=\"fselChange2(this)\" aria-label=\"Default select Project Category\">\r\n");
      out.write("                            <option selected>팀</option>\r\n");
      out.write("                            <option value=\"1\">Website Design</option>\r\n");
      out.write("\r\n");
      out.write("                        </select>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    \r\n");
      out.write("                    <div class=\"row g-3 mb-3\">\r\n");
      out.write("                        <div class=\"col-sm\">\r\n");
      out.write("                            <label  class=\"form-label\">이름</label>\r\n");
      out.write("                            <select class=\"form-select\" id=\"selMemArea\" multiple aria-label=\"Default select Priority\">\r\n");
      out.write("\r\n");
      out.write("                            </select>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"modal-footer\">\r\n");
      out.write("                    <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">닫기</button>\r\n");
      out.write("                    <button type=\"button\" class=\"btn btn-primary\" onclick=\"createGroupChat()\">생성</button>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      if (_jspx_meth_security_005fauthentication_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("<input id=\"chatId\" type=\"hidden\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${principal.realUser.memberEmail }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("<input id=\"memId\" type=\"hidden\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${principal.realUser.memberId }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("<input id=\"memName\" type=\"hidden\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${principal.realUser.memberName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\theaders['accept'] = 'application/json';\r\n");
      out.write("\tconst loginfoId = $(\"#chatId\").val();\r\n");
      out.write("\tconst memId = $(\"#memId\").val();\r\n");
      out.write("\tconst memName = $(\"#memName\").val();\r\n");
      out.write("\tconst messageArea = $(\"#chatSender\");\r\n");
      out.write("\tconst chatListArea = $(\"#chat-recent\");\r\n");
      out.write("\tconst chatGroupListArea = $(\"#chat-groups\");\r\n");
      out.write("\tconst coMemListArea = $(\"#chat-contact\");\r\n");
      out.write("\tconst msgInput = $(\"#msgInput\");\r\n");
      out.write("\tconst selMemArea = $(\"#selMemArea\");\r\n");
      out.write("\tconst selDeptArea = $(\"#selDeptArea\");\r\n");
      out.write("\tconst selTeamArea = $(\"#selTeamArea\");\r\n");
      out.write("\tconst chattingNameArea = $(\"#chattingNameArea\");\r\n");
      out.write("\tconst chattingInfoArea = $(\"#chattingInfoArea\");\r\n");
      out.write("\tconst chattingOutBtn = $(\"#chattingOutBtn\");\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\tconst reloadList = $(\"#reloadList\").on(\"click\",function(){\r\n");
      out.write("\t\tchatListArea.empty();\r\n");
      out.write("\t\tchatGroupListArea.empty();\r\n");
      out.write("\t\tselectChatList();\r\n");
      out.write("\t\tselectGroupChatList();\r\n");
      out.write("\t\t\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\tconst createModalClose =()=>{\r\n");
      out.write("\t\t$('#createtask').modal('hide'); \r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tconst messageAreaScroll = document.querySelector(\"#chatSender\").offsetHeight;\r\n");
      out.write("\r\n");
      out.write("\tvar today = new Date();\r\n");
      out.write("\r\n");
      out.write("\tvar year = today.getFullYear();\r\n");
      out.write("\tvar month = ('0' + (today.getMonth() + 1)).slice(-2);\r\n");
      out.write("\tvar day = ('0' + today.getDate()).slice(-2);\r\n");
      out.write("\r\n");
      out.write("\tvar dateString = year + '-' + month  + '-' + day;\r\n");
      out.write("\t\r\n");
      out.write("\tvar hours = ('0' + today.getHours()).slice(-2); \r\n");
      out.write("\tvar minutes = ('0' + today.getMinutes()).slice(-2);\r\n");
      out.write("\tvar seconds = ('0' + today.getSeconds()).slice(-2); \r\n");
      out.write("\r\n");
      out.write("\tvar timeString = hours + ':' + minutes  + ':' + seconds;\r\n");
      out.write("\t\r\n");
      out.write("\tlet ws = null;\r\n");
      out.write("\tlet room = 0;\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t// ===================검색 기능===================\r\n");
      out.write("\t\t\r\n");
      out.write("\tconst inputId = $(\"#searchChatting\")\r\n");
      out.write("\t\t\r\n");
      out.write("            inputId.on(\"keyup\", function () {\r\n");
      out.write("               let inputValue = inputId.val().toUpperCase();\r\n");
      out.write("               let searchChatList = $(\".searchChatList\");\r\n");
      out.write("               \r\n");
      out.write("               $.each(searchChatList, function (i, v) {\r\n");
      out.write("                  let dataValue = $(this).find(\".searchChatTarget\").html();\r\n");
      out.write("                  if (dataValue.toUpperCase().indexOf(inputValue) > -1) {\r\n");
      out.write("                     $(this).show();\r\n");
      out.write("                     return;\r\n");
      out.write("                  } else {\r\n");
      out.write("                     $(this).hide();\r\n");
      out.write("                  }\r\n");
      out.write("               })\r\n");
      out.write("            });\r\n");
      out.write("\t\r\n");
      out.write("\t// ================ 채팅방 나가기 =========================\r\n");
      out.write("\tconst roomOut = (room)=>{\r\n");
      out.write("\t\tconsole.log(\"room\",room);\r\n");
      out.write("\t\t Swal.fire({\r\n");
      out.write("\t\t\t\ticon: 'warning',\r\n");
      out.write("\t\t\t\ttitle: '채팅방은 되돌릴수 없습니다. 채팅방을 나가시겠습니까?',\r\n");
      out.write("\t\t\t\tshowCancelButton: true,\r\n");
      out.write("\t\t\t\tconfirmButtonText: '확인',\r\n");
      out.write("\t\t\t\tcancelButtonText: '취소'\r\n");
      out.write("\t\t\t}).then(function (result){\r\n");
      out.write("\t\t\t\tif(result.isConfirmed){\r\n");
      out.write("\t\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t          type:\"get\",\r\n");
      out.write("\t\t\t\t          url:\"/ourmine/company/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${companyId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/chat/roomOut\",\r\n");
      out.write("\t\t\t\t          data : \"room=\"+room,\r\n");
      out.write("\t\t\t\t          dataType:\"json\",\r\n");
      out.write("\t\t\t\t          success:function(resp){\r\n");
      out.write("\t\t\t\t              console.log(\"roomOut:{}\",resp);\r\n");
      out.write("\t\t\t\t              location.reload();\r\n");
      out.write("\t\t\t\t          },\r\n");
      out.write("\t\t\t\t          error: function (request, status, error) {\r\n");
      out.write("\t\t\t\t              console.log(\"code: \" + request.status)\r\n");
      out.write("\t\t\t\t              console.log(\"message: \" + request.responseText)\r\n");
      out.write("\t\t\t\t              console.log(\"error: \" + error);\r\n");
      out.write("\t\t\t\t          }\r\n");
      out.write("\t\t\t\t         \r\n");
      out.write("\t\t\t\t     });\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t})\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t// ==============채팅방 대화 리스트(챗룸에서 호출됨)===================\r\n");
      out.write("\t// ============== 채팅방 참여자 리스트, 채팅방 이름 ===================\r\n");
      out.write("\tconst getChattingList =(room,roomName,contenttime)=>{\r\n");
      out.write("\t\tconsole.log(\"roomName:{}\",roomName)\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t          type:\"get\",\r\n");
      out.write("\t          url:\"/ourmine/company/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${companyId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/chat/getThisChattingMemberList\",\r\n");
      out.write("\t          data : \"room=\"+room,\r\n");
      out.write("\t          dataType:\"json\",\r\n");
      out.write("\t          success:function(resp){\r\n");
      out.write("\t              console.log(\"getThisChattingMemberList:{}\",resp);\r\n");
      out.write("\r\n");
      out.write("\t              chattingOutBtn.empty();\r\n");
      out.write("\t              chattingInfoArea.empty();\r\n");
      out.write("// \t              chattingOutBtn.html('');\r\n");
      out.write("// \t              chattingInfoArea.html('');\r\n");
      out.write("\r\n");
      out.write("\t              let uniqueResp = Array.from(new Set(resp));\r\n");
      out.write("\r\n");
      out.write("\t\t              for (let i = 0; i < uniqueResp.length; i++) {\r\n");
      out.write("\t\t                chattingInfoArea.append(\r\n");
      out.write("\t\t                  `<p class=\"mb-0\">${uniqueResp[i]}</p>`\r\n");
      out.write("\t\t                );\r\n");
      out.write("\t\t              }\r\n");
      out.write("\t\t              \r\n");
      out.write("\t\t            chattingOutBtn.append(\r\n");
      out.write("\t\t            \t  ` <a class=\"nav-link py-2 px-3 text-muted d-none d-lg-block chattingOutBtn\" href=\"javascript:void(0);\" onclick=\"roomOut(room)\" title=\"out\" data-roomnum=\"${room}\"><i class=\"icofont-logout\">채팅 나가기</i></a>`\r\n");
      out.write("\t\t            );\r\n");
      out.write("\t          },\r\n");
      out.write("\t          error: function (request, status, error) {\r\n");
      out.write("\t              console.log(\"code: \" + request.status)\r\n");
      out.write("\t              console.log(\"message: \" + request.responseText)\r\n");
      out.write("\t              console.log(\"error: \" + error);\r\n");
      out.write("\t          }\r\n");
      out.write("\t         \r\n");
      out.write("\t     });\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t          type:\"get\",\r\n");
      out.write("\t          url:\"/ourmine/company/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${companyId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/chat/getChatContList\",\r\n");
      out.write("\t          data : {chattingId:room},\r\n");
      out.write("\t          dataType:\"json\",\r\n");
      out.write("\t          success:function(resp){\r\n");
      out.write("\t              console.log(\"getChattingList:{}\",resp);\r\n");
      out.write("\t              messageArea.html('');\r\n");
      out.write("\t              chattingNameArea.html('');\r\n");
      out.write("\t              //chattingInfoArea.html('');\r\n");
      out.write("   \t\t\t\t  chattingNameArea.append(\r\n");
      out.write("\t      \t\t\t\t` \r\n");
      out.write("\t      \t\t\t\t  <h6 class=\"mb-0\">${roomName}</h6>\r\n");
      out.write("                             <small class=\"text-muted\"> 마지막 채팅 : ${contenttime}</small>\r\n");
      out.write("\t      \t\t\t\t`\r\n");
      out.write("\t      \t\t\t\t);\r\n");
      out.write("\t\t      \t\tfor(let i=0; i<resp.length; i++){\r\n");
      out.write("\t\t      \t\t\tif(resp[i].memberId==memId){\r\n");
      out.write("\r\n");
      out.write("\t\t      \t\t\t\tmessageArea.append(\r\n");
      out.write("\t\t      \t\t\t\t\t\t`\r\n");
      out.write("\t\t      \t\t\t\t\t\t<li class=\"mb-3 d-flex flex-row-reverse align-items-end\">\r\n");
      out.write("\t\t      \t                    <div class=\"max-width-70 text-right\">\r\n");
      out.write("\t\t      \t                        <div class=\"user-info mb-1\">\r\n");
      out.write("\t\t      \t                            <span class=\"text-muted small\">나</span>\r\n");
      out.write("\t\t      \t                        </div>\r\n");
      out.write("\t\t      \t                        <div class=\"card border-0 p-3 bg-primary text-light\">\r\n");
      out.write("\t\t      \t                            <div class=\"message\">${resp[i].chattingContent}</div>\r\n");
      out.write("\t\t      \t                        </div>\r\n");
      out.write("\t\t      \t                        <div class=\"user-info mb-1\">\r\n");
      out.write("\t\t      \t                            <span class=\"text-muted small\">${resp[i].chattingContentTime}</span>\r\n");
      out.write("\t\t      \t                        </div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t </div>\r\n");
      out.write("\t\t      \t                     </li>\r\n");
      out.write("\t\t      \t                `\r\n");
      out.write("\t\t      \t\t\t\t);\r\n");
      out.write("\t\t      \t\t\t\t}else{\r\n");
      out.write("\t\t      \t\t\t\t\tmessageArea.append(\r\n");
      out.write("\t\t      \t\t\t\t\t\t\t`\r\n");
      out.write("\t\t      \t                        <li class=\"mb-3 d-flex flex-row align-items-end\">\r\n");
      out.write("\t\t      \t                        <div class=\"max-width-70\">\r\n");
      out.write("\t\t      \t                            <div class=\"user-info mb-1\">\r\n");
      out.write("\t\t      \t                                <span class=\"text-muted small\">${resp[i].memberName}</span>\r\n");
      out.write("\t\t      \t                            </div>\r\n");
      out.write("\t\t      \t                            <div class=\"card border-0 p-3\">\r\n");
      out.write("\t\t      \t                                <div class=\"message\">${resp[i].chattingContent}</div>\r\n");
      out.write("\t\t      \t                            </div>\r\n");
      out.write("\t\t      \t                          \t<div class=\"user-info mb-1\">\r\n");
      out.write("\t\t      \t                          <span class=\"text-muted small\">${resp[i].chattingContentTime}</span>\r\n");
      out.write("\t\t      \t                          \t</div>\r\n");
      out.write("\t\t      \t                        </div>\r\n");
      out.write("\t\t      \t                    </li>\r\n");
      out.write("\t\t      \t                    `\r\n");
      out.write("\t\t      \t\t\t\t\t);\r\n");
      out.write("\t\t      \t\t\t\t}\r\n");
      out.write("\t\t      \t\t\t}\r\n");
      out.write("\t          },\r\n");
      out.write("\t          error: function (request, status, error) {\r\n");
      out.write("\t              console.log(\"code: \" + request.status)\r\n");
      out.write("\t              console.log(\"message: \" + request.responseText)\r\n");
      out.write("\t              console.log(\"error: \" + error);\r\n");
      out.write("\t          }\r\n");
      out.write("\t         \r\n");
      out.write("\t     });\r\n");
      out.write("\t}\r\n");
      out.write("\t// =============================채팅방===============================\r\n");
      out.write("\tconst chatRoom = $(\"#chat-recent\").on(\"click\", \".wsControl\" ,function(event){\r\n");
      out.write("\t\tconsole.log(this);\r\n");
      out.write("\t\t$(this).find(\"#chatNewBedge\").css(\"display\", \"none\");\r\n");
      out.write("\t\tswitch (this.dataset.role) {\r\n");
      out.write("\t\tcase \"connect\":\r\n");
      out.write("// \t\t\tconsole.log(\"connect\",connect)\r\n");
      out.write("\t\t\troom = $(this).data(\"room\");\r\n");
      out.write("\t\t\troomName = $(this).data(\"roomname\");\r\n");
      out.write("\t\t\tcontenttime = $(this).data(\"contenttime\");\r\n");
      out.write("\t\t\tconsole.log(\"room =\", room);\r\n");
      out.write("\t\t\tconsole.log(\"roomName =\", roomName);\r\n");
      out.write("\t\t\tconsole.log(\"contenttime =\", contenttime);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(ws != null){\r\n");
      out.write("\t\t\t\tws.close(1000);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tws = connectWS();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// 웹소켓이 연결이 되고 0.5초 후에 체팅방 번호를 전송..\r\n");
      out.write("\t\t\tsetTimeout(() => {\r\n");
      out.write("\t\t\t\tvar sendMsg2 = {\r\n");
      out.write("\t\t\t\t\t\t\"roomConnect\"\t: \"roomConnect\",\r\n");
      out.write("\t\t\t\t\t\t\"room\"\t\t\t: room,\r\n");
      out.write("\t\t\t\t\t\t\"userId\"\t\t: \"loginfoId\",\r\n");
      out.write("\t\t\t\t};\r\n");
      out.write("\t\t\t\tws.send(JSON.stringify(sendMsg2));\t\r\n");
      out.write("\t\t\t}, 500);\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tgetChattingList(room, roomName, contenttime);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tbreak;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\tconst iconClickChatting = (resp,createSingleChatThis) =>{\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tconsole.log(\"iconClickChatting:{}\",\"iconClickChatting\");\r\n");
      out.write("\t\tconsole.log(\"iconClickChatting:{}\",resp);\r\n");
      out.write("\t\tconsole.log(\"createSingleChatThis:{}\",createSingleChatThis);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tswitch (createSingleChatThis.dataset.role) {\r\n");
      out.write("\t\tcase \"connect\":\r\n");
      out.write("// \t\t\tconsole.log(\"connect\",connect)\r\n");
      out.write("\t\t\t\troom = resp.chattingId;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tlet roomName = '';\r\n");
      out.write("\t\t\tif(resp.chattingMemName==memName){\r\n");
      out.write("\t\t\t\troomName = resp.chattingName;\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\troomName = resp.chattingMemName;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tconsole.log(\"room =\", room);\r\n");
      out.write("\t\t\tconsole.log(\"roomName =\", roomName);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tgetChattingList(room,roomName);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(ws != null){\r\n");
      out.write("\t\t\t\tws.close(1000);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tws = connectWS();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// 웹소켓이 연결이 되고 0.5초 후에 채팅방 번호를 전송..\r\n");
      out.write("\t\t\tsetTimeout(() => {\r\n");
      out.write("\t\t\t\tvar sendMsg2 = {\r\n");
      out.write("\t\t\t\t\t\t\"roomConnect\"\t: \"roomConnect\",\r\n");
      out.write("\t\t\t\t\t\t\"room\"\t\t\t: room,\r\n");
      out.write("\t\t\t\t\t\t\"userId\"\t\t: \"loginfoId\",\r\n");
      out.write("\t\t\t\t};\r\n");
      out.write("\t\t\t\tws.send(JSON.stringify(sendMsg2));\t\r\n");
      out.write("\t\t\t}, 500);\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tbreak;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t// ========================단체 채팅방 ==========================\r\n");
      out.write("\tconst chatGroupRoom = $(\"#chat-groups\").on(\"click\", \".wsControl\" ,function(event){\r\n");
      out.write("\t\tconsole.log(this);\r\n");
      out.write("\t\t$(this).find(\"#chatNewBedge\").css(\"display\", \"none\");\r\n");
      out.write("\t\tswitch (this.dataset.role) {\r\n");
      out.write("\t\tcase \"connect\":\r\n");
      out.write("// \t\t\tconsole.log(\"connect\",connect)\r\n");
      out.write("\t\t\troom = $(this).data(\"room\");\r\n");
      out.write("\t\t\troomName = $(this).data(\"roomname\");\r\n");
      out.write("\t\t\tcontenttime = $(this).data(\"contenttime\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tconsole.log(\"room =\", room);\r\n");
      out.write("\t\t\tconsole.log(\"roomName =\", roomName);\r\n");
      out.write("\t\t\tconsole.log(\"contenttime =\", contenttime);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tgetChattingList(room,roomName,contenttime);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(ws != null){\r\n");
      out.write("\t\t\t\tws.close(1000);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tws = connectWS();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// 웹소켓이 연결이 되고 0.5초 후에 체팅방 번호를 전송..\r\n");
      out.write("\t\t\tsetTimeout(() => {\r\n");
      out.write("\t\t\t\tvar sendMsg2 = {\r\n");
      out.write("\t\t\t\t\t\t\"roomConnect\"\t: \"roomConnect\",\r\n");
      out.write("\t\t\t\t\t\t\"room\"\t\t\t: room,\r\n");
      out.write("\t\t\t\t\t\t\"userId\"\t\t: \"loginfoId\",\r\n");
      out.write("\t\t\t\t};\r\n");
      out.write("\t\t\t\tws.send(JSON.stringify(sendMsg2));\t\r\n");
      out.write("\t\t\t}, 500);\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tbreak;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t// ======================= wsControl =====================\r\n");
      out.write("\tconst wsControl = $(\".wsControl\").on(\"click\",function(event){\r\n");
      out.write("\t\tconsole.log(this);\r\n");
      out.write("\t\tswitch (this.dataset.role) {\r\n");
      out.write("\t\tcase \"disconnect\":\r\n");
      out.write("\t\t\tws.close(1000);\r\n");
      out.write("\t\t\tbreak;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\tcase \"send\":\r\n");
      out.write("\t\t\tlet message = msgInput.val();\r\n");
      out.write("\t\t\t// 서버에 전송할 메시지 전문.\r\n");
      out.write("\t\t\tlet sendMsg = {\r\n");
      out.write("\t\t\t\t\t\"msg\"\t\t: msgInput.val(),\r\n");
      out.write("\t\t\t\t\t\"room\"\t\t: room,\r\n");
      out.write("\t\t\t\t\t\"userId\"\t: loginfoId,\r\n");
      out.write("\t\t\t};\r\n");
      out.write("\t\t\t// 메시지를 서버에 보내는 이벤트 (acltion)\r\n");
      out.write("\t\t\tws.send(JSON.stringify(sendMsg));\r\n");
      out.write("\t\t\t// 입력창 데이터 기화.\r\n");
      out.write("\t\t\tmsgInput.val(\"\");\r\n");
      out.write("\t\t\tbreak;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t// ================= 채팅방 메세지 DB저장 =================\r\n");
      out.write("\tconst msgCommit =()=>{\r\n");
      out.write("\t\tlet sendMsg = $(\"#msgInput\").val();\r\n");
      out.write("\t\tconsole.log(\"sendMsg:{}\",sendMsg);\r\n");
      out.write(" \t\tlet data = {\r\n");
      out.write(" \t\t\t\tchattingContent:sendMsg,\r\n");
      out.write(" \t\t\t\tchattingId:room\r\n");
      out.write(" \t\t}\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t          type:\"post\",\r\n");
      out.write("\t          url:\"/ourmine/company/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${companyId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/chat/msgCommit\",\r\n");
      out.write("\t          data : JSON.stringify(data),\r\n");
      out.write("\t          async:false,\r\n");
      out.write("\t          dataType:\"json\",\r\n");
      out.write("\t          headers : headers,\r\n");
      out.write("\t          success:function(resp){\r\n");
      out.write("\t              console.log(\"결과확인:{}\",resp);  // 요기 코드가 길어지면  별도 함수로 처리/ 그래야 가독성이 유지됨\r\n");
      out.write("\r\n");
      out.write("\t          },\r\n");
      out.write("\t          error: function (request, status, error) {\r\n");
      out.write("\t              console.log(\"code: \" + request.status)\r\n");
      out.write("\t              console.log(\"message: \" + request.responseText)\r\n");
      out.write("\t              console.log(\"error: \" + error);\r\n");
      out.write("\t          }\r\n");
      out.write("\t         \r\n");
      out.write("\t     });\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t// ======================팀리스트 출력문(중복제거)======================\r\n");
      out.write("\tconst printTeamList = function(resp){\r\n");
      out.write("\t\tselTeamArea.html('');\r\n");
      out.write("\t\tlet uniqueOptions = new Set();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfor(let i = 0; i < resp.length; i++) {\r\n");
      out.write("\t\t  let optionKey = `${resp[i].orgchartId}-${resp[i].departmentName}`;\r\n");
      out.write("\t\t  uniqueOptions.add(optionKey);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfor(const optionKey of uniqueOptions) {\r\n");
      out.write("\t\t  let [orgchartId, departmentName] = optionKey.split('-');\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t  let jOption = document.createElement(\"option\");\r\n");
      out.write("\t\t  jOption.value = `${orgchartId}`;\r\n");
      out.write("\t\t  jOption.innerHTML = `${departmentName}`;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t  selTeamArea.append(jOption);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t// =======================팀리스트===========================\r\n");
      out.write("\tfunction fselChange(p_this){\r\n");
      out.write("\t\torgchartId = p_this.value;\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t          type:\"get\",\r\n");
      out.write("\t          url:\"/ourmine/company/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${companyId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/chat/getTeamList\",\r\n");
      out.write("\t          data : {orgchartId:orgchartId},\r\n");
      out.write("\t          dataType:\"json\",\r\n");
      out.write("\t          success:function(resp){\r\n");
      out.write("\t              console.log(\"결과확인:{}\",resp);  \r\n");
      out.write("\t              printTeamList(resp);\r\n");
      out.write("\t              printMemList(resp);\r\n");
      out.write("\t          },\r\n");
      out.write("\t          error: function (request, status, error) {\r\n");
      out.write("\t              console.log(\"code: \" + request.status)\r\n");
      out.write("\t              console.log(\"message: \" + request.responseText)\r\n");
      out.write("\t              console.log(\"error: \" + error);\r\n");
      out.write("\t          }\r\n");
      out.write("\t         \r\n");
      out.write("\t     });\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction fselChange2(p_this){\r\n");
      out.write("\t\torgchartId = p_this.value;\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t          type:\"get\",\r\n");
      out.write("\t          url:\"/ourmine/company/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${companyId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/chat/getTeamList\",\r\n");
      out.write("\t          data : {orgchartId:orgchartId},\r\n");
      out.write("\t          dataType:\"json\",\r\n");
      out.write("\t          success:function(resp){\r\n");
      out.write("\t              console.log(\"결과확인:{}\",resp);  \r\n");
      out.write("\t              printMemList(resp);\r\n");
      out.write("\t          },\r\n");
      out.write("\t          error: function (request, status, error) {\r\n");
      out.write("\t              console.log(\"code: \" + request.status)\r\n");
      out.write("\t              console.log(\"message: \" + request.responseText)\r\n");
      out.write("\t              console.log(\"error: \" + error);\r\n");
      out.write("\t          }\r\n");
      out.write("\t         \r\n");
      out.write("\t     });\r\n");
      out.write("\t}\r\n");
      out.write("\t// ==========================부서리스트 출력문========================\r\n");
      out.write("\tconst printDeptList = function(resp){\r\n");
      out.write("\t\tselDeptArea.html('');;\r\n");
      out.write("\t\tfor(let i=0; i<resp.length; i++){\r\n");
      out.write("\t\t\tlet jOption = document.createElement(\"option\");\r\n");
      out.write("\t\t\tjOption.value = `${resp[i].orgchartId}`;\r\n");
      out.write("\t\t\tjOption.innerHTML = `${resp[i].departmentName}`; \r\n");
      out.write("\t\t\tselDeptArea.append(jOption);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// ==============================부서리스트====================\r\n");
      out.write("\tconst getDepartment = () =>{\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t          type:\"get\",\r\n");
      out.write("\t          url:\"/ourmine/company/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${companyId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/chat/deptList\",\r\n");
      out.write("\t          dataType:\"json\",\r\n");
      out.write("\t          success:function(resp){\r\n");
      out.write("\t              console.log(\"결과확인:{}\",resp); \r\n");
      out.write("\t              printDeptList(resp);\r\n");
      out.write("\t          },\r\n");
      out.write("\t          error: function (request, status, error) {\r\n");
      out.write("\t              console.log(\"code: \" + request.status)\r\n");
      out.write("\t              console.log(\"message: \" + request.responseText)\r\n");
      out.write("\t              console.log(\"error: \" + error);\r\n");
      out.write("\t          }\r\n");
      out.write("\t         \r\n");
      out.write("\t     });\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// ==========================직원리스트 출력문===============\r\n");
      out.write("\tconst printMemList = function(resp){\r\n");
      out.write("\t\tselMemArea.html('');\r\n");
      out.write("\t\tfor(let i=0; i<resp.length; i++){\r\n");
      out.write("\t\t\tlet jOption = document.createElement(\"option\");\r\n");
      out.write("\t\t\tjOption.value = `${resp[i].memberId}`;\r\n");
      out.write("\t\t\tjOption.innerHTML = `${resp[i].memberName}`; \r\n");
      out.write("\t\t\tselMemArea.append(jOption);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t// ===========================직원리스트====================\r\n");
      out.write("\tconst getSelectMemberList = () =>{\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t          type:\"get\",\r\n");
      out.write("\t          url:\"/ourmine/company/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${companyId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/chat/coMemList\",\r\n");
      out.write("\t          dataType:\"json\",\r\n");
      out.write("\t          success:function(resp){\r\n");
      out.write("\t              console.log(\"결과확인:{}\",resp); \r\n");
      out.write("\t              printMemList(resp);\r\n");
      out.write("\t          },\r\n");
      out.write("\t          error: function (request, status, error) {\r\n");
      out.write("\t              console.log(\"code: \" + request.status)\r\n");
      out.write("\t              console.log(\"message: \" + request.responseText)\r\n");
      out.write("\t              console.log(\"error: \" + error);\r\n");
      out.write("\t          }\r\n");
      out.write("\t         \r\n");
      out.write("\t     });\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// =========== 그룹 채팅방 이름 공란에러메세지 ==============\r\n");
      out.write("\t$(\"#groupChatName\").on(\"keyup\",function(){\r\n");
      out.write("\t\tif(this.value.trim().length){\r\n");
      out.write("\t\t\t$(\"#jiError\").css(\"display\",\"none\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t})\r\n");
      out.write("\t// ================ 그룹 채팅방 생성 ====================\r\n");
      out.write("\tconst createGroupChat = () => {\r\n");
      out.write("\t\tlet selMem = $(\"#selMemArea\").val();\r\n");
      out.write("\t\tconsole.log(\"selMem:{}\",selMem);\r\n");
      out.write("\t\tlet gName = $(\"#groupChatName\").val();\r\n");
      out.write("\t\tconsole.log(\"gName:{}\",gName);\r\n");
      out.write("\t\tif(!gName.trim()){\r\n");
      out.write("\t\t\t$(\"#jiError\").css(\"display\",\"block\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write(" \t\tlet data = {\r\n");
      out.write(" \t\t\t\tmemberList:[],\r\n");
      out.write("\t\t\t\tchattingName:gName\r\n");
      out.write(" \t\t}\r\n");
      out.write(" \t\tfor (let i = 0; i < selMem.length; i++) {\r\n");
      out.write(" \t\t\t  data.memberList[i] = selMem[i];\r\n");
      out.write(" \t\t}\r\n");
      out.write(" \t\t\r\n");
      out.write(" \t\t$.ajax({\r\n");
      out.write("\t          type:\"post\",\r\n");
      out.write("\t          url:\"/ourmine/company/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${companyId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/chat/makeRoom\",\r\n");
      out.write("\t          data : JSON.stringify(data),\r\n");
      out.write("\t          contentType : \"application/json;charset=utf-8\",\r\n");
      out.write("\t          dataType:\"json\",\r\n");
      out.write("\t          headers : headers,\r\n");
      out.write("\t          success:function(resp){\r\n");
      out.write("\t              console.log(\"결과확인:{}\",resp);  // 요기 코드가 길어지면  별도 함수로 처리/ 그래야 가독성이 유지됨\r\n");
      out.write("\t              createModalClose();\r\n");
      out.write("\t              chatGroupListArea.html('');\r\n");
      out.write("\t              selectGroupChatList();\r\n");
      out.write("\t          },\r\n");
      out.write("\t          error: function (request, status, error) {\r\n");
      out.write("\t              console.log(\"code: \" + request.status)\r\n");
      out.write("\t              console.log(\"message: \" + request.responseText)\r\n");
      out.write("\t              console.log(\"error: \" + error);\r\n");
      out.write("\t          }\r\n");
      out.write("\t         \r\n");
      out.write("\t        });\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// ================ 1:1 채팅방 생성 ====================\r\n");
      out.write("\tlet createSingleChatThis='';\r\n");
      out.write("\tconst createSingleChat = \r\n");
      out.write("\t\t$(\"#chat-contact\").on(\"click\",\"#createSingleChat\",function(){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t \t\tconsole.log(\"체킁\");\r\n");
      out.write("\t \t\tconsole.log(this);\r\n");
      out.write("\t \t\tcreateSingleChatThis = this;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t \t\tlet mId = $(this).attr('mid');\r\n");
      out.write("\t \t\tlet cName = $(this).attr('mname');\r\n");
      out.write("\t \t\tconsole.log(\"mId:{}\",mId);\r\n");
      out.write("\t \t\tconsole.log(\"cName:{}\",cName);\r\n");
      out.write("\t \t\t\r\n");
      out.write("\t \t\tlet data = {\r\n");
      out.write("\t \t\t\t\tcompareMemId:mId,\r\n");
      out.write("\t\t\t\t\tchattingName:cName\r\n");
      out.write("\t \t\t}\r\n");
      out.write("\t \t\t\r\n");
      out.write("\t \t\t\r\n");
      out.write("\t \t\tconsole.log(\"data:{}\",data);\r\n");
      out.write("\t \t\t$.ajax({\r\n");
      out.write("\t\t          type:\"post\",\r\n");
      out.write("\t\t          url:\"/ourmine/company/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${companyId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/chat/makeSingleRoom\",\r\n");
      out.write("\t\t          data : JSON.stringify(data),\r\n");
      out.write("\t\t          contentType : \"application/json;charset=utf-8\",\r\n");
      out.write("\t\t          dataType:\"json\",\r\n");
      out.write("\t\t          headers : headers,\r\n");
      out.write("\t\t          success:function(resp){\r\n");
      out.write("\t\t              console.log(\"makeSingleRoom결과확인:{}\",resp);  \r\n");
      out.write("\t\t              iconClickChatting(resp,createSingleChatThis);\r\n");
      out.write("\t\t          },\r\n");
      out.write("\t\t          error: function (request, status, error) {\r\n");
      out.write("\t\t              console.log(\"code: \" + request.status)\r\n");
      out.write("\t\t              console.log(\"message: \" + request.responseText)\r\n");
      out.write("\t\t              console.log(\"error: \" + error);\r\n");
      out.write("\t\t          }\r\n");
      out.write("\t\t         \r\n");
      out.write("\t\t        });\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\r\n");
      out.write("\t// ================ 회사 맴버 목록 ====================\r\n");
      out.write("\tconst selectCoMemList = () =>{\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t          type:\"get\",\r\n");
      out.write("\t          url:\"/ourmine/company/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${companyId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/chat/coMemList\",\r\n");
      out.write("\t          dataType:\"json\",\r\n");
      out.write("\t          success:function(resp){\r\n");
      out.write("\t              console.log(\"selectCoMemList:{}\",resp);  \r\n");
      out.write("\t              for(let i=0; i<resp.length; i++){\r\n");
      out.write("\t            \t  coMemListArea.append($(\"<p>\").append(\r\n");
      out.write("\t\t\t\t\t\t`<ul class=\"list-unstyled list-group list-group-custom list-group-flush mb-0 searchChatList\">\r\n");
      out.write("                             <li class=\"list-group-item px-md-4 py-3 py-md-4\">\r\n");
      out.write("                                 <a href=\"javascript:void(0);\" class=\"d-flex\">\r\n");
      out.write("                                 <img class=\"avatar rounded-circle\" src=\"${resp[i].imageContents !== null ? resp[i].imageContents : '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/lg/마스코트_투명.png'}\" alt=\"\">\r\n");
      out.write("                                     <div class=\"flex-fill ms-3 text-truncate\">\r\n");
      out.write("                                         <div class=\"d-flex justify-content-between mb-0 wsControl\" id=\"createSingleChat\" \r\n");
      out.write("                                         \t\tmname=\"${resp[i].memberName}\" mid=\"${resp[i].memberId}\" data-role=\"connect\">\r\n");
      out.write("                                             <h6 class=\"mb-0 searchChatTarget\">${resp[i].memberName}</h6>\r\n");
      out.write("                                             <div class=\"text-muted\">\r\n");
      out.write("                                                 <i class=\"icofont-chat pl-2 text-danger\"></i>\r\n");
      out.write("                                             </div>\r\n");
      out.write("                                         </div>\r\n");
      out.write("                                         <span class=\"text-muted\">${resp[i].memberEmail}</span>\r\n");
      out.write("                                     </div>\r\n");
      out.write("                                 </a>\r\n");
      out.write("                             </li>\r\n");
      out.write("                         </ul> `\r\n");
      out.write("\t\t\t\t\t));\r\n");
      out.write("\t          \t}\r\n");
      out.write("\t          },\r\n");
      out.write("\t          error: function (request, status, error) {\r\n");
      out.write("\t              console.log(\"code: \" + request.status)\r\n");
      out.write("\t              console.log(\"message: \" + request.responseText)\r\n");
      out.write("\t              console.log(\"error: \" + error);\r\n");
      out.write("\t          }\r\n");
      out.write("\t         \r\n");
      out.write("\t        });\r\n");
      out.write("\t}\r\n");
      out.write("\t// ================ 마지막 채팅 목록 =====================\r\n");
      out.write("\t// ================ 개설된 채팅방 목록 ====================\t\r\n");
      out.write("\tconst selectChatList = () =>{\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t          type:\"get\",\r\n");
      out.write("\t          url:\"/ourmine/company/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${companyId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/chat/chatJson\",\r\n");
      out.write("\t          dataType:\"json\",\r\n");
      out.write("\t          success:function(resp){\r\n");
      out.write("\t              console.log(\"selectChatList:{}\",resp);  \r\n");
      out.write("\t              console.log(\"memId:{}\",memId); \r\n");
      out.write("\t              for(let i=0; i<resp.length; i++){\r\n");
      out.write("\t\t              if(resp[i].chattingMemName==memName){\r\n");
      out.write("\t              \t\tconsole.log(\"resp[0].memberId:{}\",resp[0].memberId);  \r\n");
      out.write("\t\t              chatListArea.append(\r\n");
      out.write("\t\t\t\t\t\t`<ul class=\"list-unstyled list-group list-group-custom list-group-flush mb-0 searchChatList\">\r\n");
      out.write("\t\t                  <li class=\"list-group-item px-md-4 py-3 py-md-4 wsControl useMemberRoom\" data-room=\"${resp[i].chattingId}\" data-roomname=\"${resp[i].chattingName}\" data-contenttime=\"${resp[i].chattingContentTime}\" data-role=\"connect\">\r\n");
      out.write("\t\t                      <a href=\"javascript:void(0);\" class=\"d-flex\">\r\n");
      out.write("\t\t                          <img class=\"avatar rounded-circle\" src=\"${resp[i].imageContents !== null ? resp[i].imageContents : '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/xs/avatar6.jpg'}\" alt=\"\">\r\n");
      out.write("\t\t                          <div class=\"flex-fill ms-3 text-truncate\">\r\n");
      out.write("\t\t                              <h6 class=\"d-flex justify-content-between mb-0\">\r\n");
      out.write("\t\t\t                              <span class=\"searchChatTarget\">${resp[i].chattingName}</span>\r\n");
      out.write("\t\t                               <small class=\"msg-time\">${resp[i].chattingContentTime}</small></h6>\r\n");
      out.write("\t\t                               <div class=\"d-flex justify-content-between mb-0\" style=\"width:100%\">\r\n");
      out.write("\t\t\t                           \t\t<span class=\"text-muted\">${resp[i].chattingContent}</span>\r\n");
      out.write("\t\t\t                           \t\t<div class=\"float-right badge bg-secondary\" id=\"chatNewBedge\">New</div>\r\n");
      out.write("\t\t\t                           </div>\r\n");
      out.write("\t\t                          </div>\r\n");
      out.write("\t\t                      </a>\r\n");
      out.write("\t\t                  </li>\r\n");
      out.write("\t\t                </ul>`\r\n");
      out.write("\t\t                );\r\n");
      out.write("\t\t              }else{\r\n");
      out.write("\t\t            \tchatListArea.append(\r\n");
      out.write("\t\t\t\t\t\t`<ul class=\"list-unstyled list-group list-group-custom list-group-flush mb-0 searchChatList\">\r\n");
      out.write("\t\t                  <li class=\"list-group-item px-md-4 py-3 py-md-4 wsControl useMemberRoom\" data-room=\"${resp[i].chattingId}\" data-roomname=\"${resp[i].chattingMemName}\" data-contenttime=\"${resp[i].chattingContentTime}\" data-role=\"connect\">\r\n");
      out.write("\t\t                      <a href=\"javascript:void(0);\" class=\"d-flex\">\r\n");
      out.write("\t\t                      <img class=\"avatar rounded-circle\" src=\"${resp[i].imageContents !== null ? resp[i].imageContents : '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/xs/avatar7.jpg'}\" alt=\"\">\r\n");
      out.write("\t\t                          <div class=\"flex-fill ms-3 text-truncate\">\r\n");
      out.write("\t\t                              <h6 class=\"d-flex justify-content-between mb-0\">\r\n");
      out.write("\t\t                            \t  <span class=\"searchChatTarget\">${resp[i].chattingMemName}</span>\r\n");
      out.write("\t\t                              <small class=\"msg-time\">${resp[i].chattingContentTime}</small></h6>\r\n");
      out.write("\t\t                              <div class=\"d-flex justify-content-between mb-0\" style=\"width:100%\">\r\n");
      out.write("\t\t                           \t\t<span class=\"text-muted\">${resp[i].chattingContent}</span>\r\n");
      out.write("\t\t                           \t\t<div class=\"float-right badge bg-secondary\" id=\"chatNewBedge\">New</div>\r\n");
      out.write("\t\t                           \t  </div>\r\n");
      out.write("\t\t                          </div>\r\n");
      out.write("\t\t                      </a>\r\n");
      out.write("\t\t                  </li>\r\n");
      out.write("\t\t              </ul>`\r\n");
      out.write("\t\t           \t  );\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t          \t}\r\n");
      out.write("\t          },\r\n");
      out.write("\t          error: function (request, status, error) {\r\n");
      out.write("\t              console.log(\"code: \" + request.status)\r\n");
      out.write("\t              console.log(\"message: \" + request.responseText)\r\n");
      out.write("\t              console.log(\"error: \" + error);\r\n");
      out.write("\t          }\r\n");
      out.write("\t         \r\n");
      out.write("\t        });\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// ================ 그룹 채팅방 목록 ====================\r\n");
      out.write("\tconst selectGroupChatList = () =>{\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t          type:\"get\",\r\n");
      out.write("\t          url:\"/ourmine/company/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${companyId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/chat/getGroupChatList\",\r\n");
      out.write("\t          dataType:\"json\",\r\n");
      out.write("\t          success:function(resp){\r\n");
      out.write("\t              console.log(\"selectGroupChatList:{}\",resp);  // 요기 코드가 길어지면  별도 함수로 처리/ 그래야 가독성이 유지됨\r\n");
      out.write("\t              for(let i=0; i<resp.length; i++){\r\n");
      out.write("\t            \t  chatGroupListArea.append(\r\n");
      out.write("\t\t\t\t\t\t`\r\n");
      out.write("\t\t\t\t\t\t<ul class=\"list-unstyled list-group list-group-custom list-group-flush mb-0 searchChatList\">\r\n");
      out.write("\t\t                  <li class=\"list-group-item px-md-4 py-3 py-md-4 wsControl\" data-room=\"${resp[i].chattingId}\" data-roomname=\"${resp[i].chattingName}\" data-contenttime=\"${resp[i].chattingContentTime}\" data-role=\"connect\">\r\n");
      out.write("\t\t                      <a href=\"javascript:void(0);\" class=\"d-flex\">\r\n");
      out.write("\t\t                          <img class=\"avatar rounded-circle\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/sm/마스코트_투명.png\" alt=\"\">\r\n");
      out.write("\t\t                          <div class=\"flex-fill ms-3 mt-2 text-truncate\">\r\n");
      out.write("\t\t                              <h6 class=\"d-flex justify-content-between mb-0 searchChatTarget\"><span>${resp[i].chattingName}</span> \r\n");
      out.write("\t\t                              \r\n");
      out.write("\t\t                              ${resp[i].chattingContent == null ? `<small class=\"msg-time\">${resp[i].chattingConnectTime}</small>` : `<small class=\"msg-time\">${resp[i].chattingContentTime}</small>`}\r\n");
      out.write("\t\t                              \r\n");
      out.write("\t\t                              </h6>\r\n");
      out.write("\t\t                          </div>\r\n");
      out.write("\t\t                      </a>\r\n");
      out.write("                              <div class=\"d-flex justify-content-between mb-0\" style=\"width:100%\">\r\n");
      out.write("                       \t\t\r\n");
      out.write("                               ${resp[i].chattingContent == null ? `<span class=\"text-muted\"></span>` : `<span class=\"text-muted\">${resp[i].chattingContent}</span>`}\r\n");
      out.write("                        \t\t\r\n");
      out.write("                        \t\t<div class=\"float-right badge bg-secondary\" id=\"chatNewBedge\">New</div>\r\n");
      out.write("                         \t  </div>\r\n");
      out.write("\t\t                  </li>\r\n");
      out.write("\t\t              </ul>\r\n");
      out.write("\t\t              `\r\n");
      out.write("\t\t\t\t\t);\r\n");
      out.write("\t          \t}\r\n");
      out.write("\t          },\r\n");
      out.write("\t          error: function (request, status, error) {\r\n");
      out.write("\t              console.log(\"code: \" + request.status)\r\n");
      out.write("\t              console.log(\"message: \" + request.responseText)\r\n");
      out.write("\t              console.log(\"error: \" + error);\r\n");
      out.write("\t          }\r\n");
      out.write("\t         \r\n");
      out.write("\t        });\r\n");
      out.write("\t}\r\n");
      out.write("\tlet senderName = '';\r\n");
      out.write("\r\n");
      out.write("\t// ================ connectWS ====================\r\n");
      out.write("\t// ================ 실시간 채팅 + 스크롤 =============\r\n");
      out.write("\tfunction connectWS(){\r\n");
      out.write("\t\t\r\n");
      out.write("//\t\tlet ws = new WebSocket(\"ws://192.168.36.2");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/ws/echo\");\r\n");
      out.write("\t\tlet ws = new WebSocket(\"ws://localhost");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/ws/echo\");\r\n");
      out.write("\t\tws.onopen=function(event){\r\n");
      out.write("\t\t\tconsole.log(event);\r\n");
      out.write("// \t\t\tmessageArea.append($(\"<p>\").html(\"Connect!\"));\r\n");
      out.write("\t\t\tchatRoom.prop(\"disabled\", (i,v)=>!v);\r\n");
      out.write("\t\t\tchatGroupRoom.prop(\"disabled\", (i,v)=>!v);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tws.onclose=function(event){\r\n");
      out.write("\t\t\tconsole.log(event);\r\n");
      out.write("// \t\t\tmessageArea.append($(\"<p>\").html(\"DisConnect!\"));\r\n");
      out.write("\t\t\tchatRoom.prop(\"disabled\", (i,v)=>!v);\r\n");
      out.write("\t\t\tchatGroupRoom.prop(\"disabled\", (i,v)=>!v);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tws.onmessage=function(event){\r\n");
      out.write("\t\t\tconsole.log(event);\r\n");
      out.write("\t\t\tlet messageVO = JSON.parse(event.data);\r\n");
      out.write("\t\t\tlet msg = JSON.parse(messageVO.message);\r\n");
      out.write("\t\t\tconsole.log(\"messageVO : {}\", msg.msg);\r\n");
      out.write("\t\t\tconsole.log(\"messageVO.sender : {}\", messageVO.sender);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tconsole.log(\"loginfoId:{}\",loginfoId);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(messageVO.sender==loginfoId){\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\tmessageArea.append(\r\n");
      out.write("\t\t\t\t\t`\r\n");
      out.write("\t\t\t\t\t<li class=\"mb-3 d-flex flex-row-reverse align-items-end\">\r\n");
      out.write("                    <div class=\"max-width-70 text-right\">\r\n");
      out.write("                        <div class=\"user-info mb-1\">\r\n");
      out.write("                            <span class=\"text-muted small\">나</span>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"card border-0 p-3 bg-primary text-light\">\r\n");
      out.write("                            <div class=\"message\">${msg.msg}</div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"user-info mb-1\">\r\n");
      out.write("                            <span class=\"text-muted small\">${dateString} ${timeString}</span>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
      out.write("                `\r\n");
      out.write("\t\t\t);\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\tmessageArea.append(\r\n");
      out.write("\t\t\t\t\t\t`\r\n");
      out.write("                        <li class=\"mb-3 d-flex flex-row align-items-end\">\r\n");
      out.write("                        <div class=\"max-width-70\">\r\n");
      out.write("                            <div class=\"user-info mb-1\">\r\n");
      out.write("                                <span class=\"text-muted small\">${messageVO.senderNicName}</span>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"card border-0 p-3\">\r\n");
      out.write("                                <div class=\"message\">${msg.msg}</div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"user-info mb-1\">\r\n");
      out.write("                            \t<span class=\"text-muted small\">${dateString} ${timeString}</span>\r\n");
      out.write("                        \t</div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </li>\r\n");
      out.write("                    `\r\n");
      out.write("\t\t\t\t);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tconsole.log(\"scroll\",messageAreaScroll)\r\n");
      out.write("\t\t\t//let mvHeight = messageArea[0].children.length * 105; \r\n");
      out.write("\t\t \tmessageArea[0].scrollTo(0, messageArea[0].scrollHeight);\r\n");
      out.write("\t\t \t\r\n");
      out.write("\t\t\tchatListArea.html('');\r\n");
      out.write("\t\t\tchatGroupListArea.html('');\r\n");
      out.write("\t\t\t//debugger;\r\n");
      out.write("\t\t\tselectChatList();\r\n");
      out.write("\t\t\tselectGroupChatList();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\treturn ws;\r\n");
      out.write("\t}\r\n");
      out.write("\tselectChatList();\r\n");
      out.write("\tselectCoMemList();\r\n");
      out.write("\tgetSelectMemberList();\r\n");
      out.write("\tgetDepartment();\r\n");
      out.write("\tselectGroupChatList();\r\n");
      out.write("\t\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_security_005fauthentication_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  security:authentication
    org.springframework.security.taglibs.authz.AuthenticationTag _jspx_th_security_005fauthentication_005f0 = (org.springframework.security.taglibs.authz.AuthenticationTag) _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fvar_005fproperty_005fnobody.get(org.springframework.security.taglibs.authz.AuthenticationTag.class);
    boolean _jspx_th_security_005fauthentication_005f0_reused = false;
    try {
      _jspx_th_security_005fauthentication_005f0.setPageContext(_jspx_page_context);
      _jspx_th_security_005fauthentication_005f0.setParent(null);
      // /WEB-INF/jsp/chat/chat.jsp(151,0) name = property type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_security_005fauthentication_005f0.setProperty("principal");
      // /WEB-INF/jsp/chat/chat.jsp(151,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_security_005fauthentication_005f0.setVar("principal");
      int _jspx_eval_security_005fauthentication_005f0 = _jspx_th_security_005fauthentication_005f0.doStartTag();
      if (_jspx_th_security_005fauthentication_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fvar_005fproperty_005fnobody.reuse(_jspx_th_security_005fauthentication_005f0);
      _jspx_th_security_005fauthentication_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_security_005fauthentication_005f0, _jsp_getInstanceManager(), _jspx_th_security_005fauthentication_005f0_reused);
    }
    return false;
  }
}
