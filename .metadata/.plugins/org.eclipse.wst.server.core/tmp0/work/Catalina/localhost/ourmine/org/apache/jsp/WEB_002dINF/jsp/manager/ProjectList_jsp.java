/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2023-06-16 05:19:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.manager;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class ProjectList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("jar:file:/E:/A_TeachingMaterial/05_JSP_Spring/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/ourmine/WEB-INF/lib/spring-security-taglibs-5.7.8.jar!/META-INF/security.tld", Long.valueOf(1681713972000L));
    _jspx_dependants.put("/WEB-INF/lib/spring-security-taglibs-5.7.8.jar", Long.valueOf(1683020361417L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1679567181629L));
    _jspx_dependants.put("jar:file:/E:/A_TeachingMaterial/05_JSP_Spring/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/ourmine/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsecurity_005fauthorize_0026_005faccess;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsecurity_005fauthorize_0026_005furl;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fvar_005fproperty_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fsecurity_005fauthorize_0026_005faccess = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fsecurity_005fauthorize_0026_005furl = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fvar_005fproperty_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fsecurity_005fauthorize_0026_005faccess.release();
    _005fjspx_005ftagPool_005fsecurity_005fauthorize_0026_005furl.release();
    _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fvar_005fproperty_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"row align-items-center\">\r\n");
      out.write("    <div class=\"border-0 mb-4\">\r\n");
      out.write("        <div class=\"card-header p-0 no-bg bg-transparent d-flex align-items-center px-0 justify-content-between border-bottom flex-wrap\">\r\n");
      out.write("            <h3 class=\"fw-bold py-3 mb-0\">프로젝트</h3>\r\n");
      out.write("            <div class=\"d-flex py-2 project-tab flex-wrap w-sm-100\">\r\n");
      out.write("            \t ");
      if (_jspx_meth_security_005fauthorize_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("            \t\r\n");
      out.write("                <ul class=\"nav nav-tabs tab-body-header rounded ms-3 prtab-set w-sm-100\" role=\"tablist\">\r\n");
      out.write("                    <li class=\"nav-item\"><a id=\"allList\" class=\"nav-link active\" data-bs-toggle=\"tab\" href=\"#All-list\"\r\n");
      out.write("                                            role=\"tab\">전체</a></li>\r\n");
      out.write("                    <li class=\"nav-item\"><a id=\"startedList\" class=\"nav-link\" data-bs-toggle=\"tab\" href=\"#Started-list\"\r\n");
      out.write("                                            role=\"tab\">진행중</a></li>\r\n");
      out.write("                    <li class=\"nav-item\"><a id=\"completedList\" class=\"nav-link\" data-bs-toggle=\"tab\"\r\n");
      out.write("                                            href=\"#Completed-list\" role=\"tab\">완료</a></li>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("<!---============================================================================================================================ -->\r\n");
      out.write("<div class=\"row align-items-center\">\r\n");
      out.write("\t<div class=\"col-lg-12 col-md-12 flex-column\">\r\n");
      out.write("\t\t<div class=\"tab-content mt-4\">\r\n");
      out.write("\t\t\t<div  id=\"All-list\" >\r\n");
      out.write("\t\t\t\t\t<div id=\"proList\" >\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\t\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("<!---============================================================================================================================ -->\r\n");
      out.write("<!-- 수정 모달-->\r\n");
      out.write(" ");
      if (_jspx_meth_security_005fauthorize_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("<!---============================================================================================================================ -->\r\n");
      out.write("<!-- 삭제 모달 -->\r\n");
      out.write(" ");
      if (_jspx_meth_security_005fauthorize_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("<!---============================================================================================================================ -->\r\n");
      out.write("<!--멤버 추가 모달 -->\r\n");
      if (_jspx_meth_security_005fauthorize_005f3(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("<!---==========================프로젝트생성모달================================================================================================== -->\r\n");
      out.write("<form class=\"insertProjectForm\" method=\"post\">\r\n");
      out.write("    <div class=\"modal fade\" id=\"createproject\" tabindex=\"-1\" aria-hidden=\"true\">\r\n");
      out.write("        <div class=\"modal-dialog modal-dialog-centered modal-md modal-dialog-scrollable\">\r\n");
      out.write("            <div class=\"modal-content\">\r\n");
      out.write("                <div class=\"modal-header\">\r\n");
      out.write("                    <h5 class=\"modal-title  fw-bold\" id=\"createprojectlLabel\"> 프로젝트 생성</h5>\r\n");
      out.write("                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <div class=\"modal-body\">\r\n");
      out.write("                    <div class=\"mb-3\">\r\n");
      out.write("                        <label for=\"exampleFormControlInput77\" class=\"form-label\">프로젝트 이름</label>\r\n");
      out.write("                        <input type=\"text\" class=\"form-control\" id=\"exampleFormControlInput77\" placeholder=\"프로젝트 이름\">\r\n");
      out.write("                               \r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("                    <div class=\"deadline-form\">\r\n");
      out.write("\r\n");
      out.write("                        <div class=\"row g-3 mb-3\">\r\n");
      out.write("                            <div class=\"col\">\r\n");
      out.write("                                <label for=\"datepickerded\" class=\"form-label\">프로젝트 시작날짜</label>\r\n");
      out.write("                                <input type=\"date\" class=\"form-control\" id=\"datepickerded\">\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"col\">\r\n");
      out.write("                                <label for=\"datepickerdedone\" class=\"form-label\">프로젝트 종료날짜</label>\r\n");
      out.write("                                <input type=\"date\" class=\"form-control\" id=\"datepickerdedone\">\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("\r\n");
      out.write("                        <div class=\"deadline-form\">\r\n");
      out.write("                            <div class=\"row g-3 mb-3\">\r\n");
      out.write("                                <div class=\"col\">\r\n");
      out.write("                                    <label class=\"form-label\">PM 지정</label>\r\n");
      out.write("                                    <select id= \"getPmId\" class=\"form-select getmemberlist\" multiple aria-label=\"Default select Priority\">\r\n");
      out.write("\r\n");
      out.write("                                    </select>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"col\">\r\n");
      out.write("                                    <label class=\"form-label\">PL 지정</label>\r\n");
      out.write("                                    <select id=\"getPlId\" class=\"form-select getmemberlist\" multiple aria-label=\"Default select Priority\">\r\n");
      out.write("\r\n");
      out.write("                                    </select>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("\r\n");
      out.write("                        <div class=\"row g-3 mb-3\">\r\n");
      out.write("                            ");
      out.write("\r\n");
      out.write("                            ");
      out.write("\r\n");
      out.write("                            ");
      out.write("\r\n");
      out.write("                            ");
      out.write("\r\n");
      out.write("                            ");
      out.write("\r\n");
      out.write("                            ");
      out.write("\r\n");
      out.write("                            ");
      out.write("\r\n");
      out.write("                            ");
      out.write("\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"mb-3\">\r\n");
      out.write("                        <label for=\"exampleFormControlTextarea78\" class=\"form-label\">프로젝트 내용</label>\r\n");
      out.write("                        <textarea class=\"form-control\" id=\"exampleFormControlTextarea78\"\r\n");
      out.write("                                  rows=\"3\" placeholder=\"\"></textarea>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"modal-footer\">\r\n");
      out.write("                    <button type=\"button\" id=\"autoBtn\" class=\"btn\" style=\"color:gray;\">자동완성</button>\r\n");
      out.write("                    <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Done</button>\r\n");
      out.write("                    <button type=\"submit\" class=\"btn btn-primary\">Create</button>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</form>\r\n");
      out.write("<!---============================================================================================================================ -->\r\n");
      out.write("\r\n");
      if (_jspx_meth_security_005fauthentication_005f0(_jspx_page_context))
        return;
      out.write('\r');
      out.write('\n');
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("    const company = {\r\n");
      out.write("        companyId: '',\r\n");
      out.write("        projectId: '',\r\n");
      out.write("        memberId: '',\r\n");
      out.write("        projectRoleId: ''\r\n");
      out.write("    }\r\n");
      out.write("    const project = {\r\n");
      out.write("        projectId: ''\r\n");
      out.write("    }\r\n");
      out.write("    const projectOBj = {\r\n");
      out.write("        projectId: '',\r\n");
      out.write("        projectName: '',\r\n");
      out.write("        projectContent: '',\r\n");
      out.write("        projectStartDate: '',\r\n");
      out.write("        projectEndDate: '',\r\n");
      out.write("    }\r\n");
      out.write("    let editProject = {\r\n");
      out.write("        projectId: '',\r\n");
      out.write("        projectName: '',\r\n");
      out.write("        projectContent: '',\r\n");
      out.write("        projectStartDate: '',\r\n");
      out.write("        projectEndDate: '',\r\n");
      out.write("    }\r\n");
      out.write("    let delData = {\r\n");
      out.write("        memberId: '',\r\n");
      out.write("        companyId: '',\r\n");
      out.write("        projectId: '',\r\n");
      out.write("        projectRoleId: '',\r\n");
      out.write("        projectAttendAk: ''\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    let insertdata = {\r\n");
      out.write("        projectName: '',\r\n");
      out.write("        projectContent: '',\r\n");
      out.write("        projectStartDate: '',\r\n");
      out.write("        projectEndDate: '',\r\n");
      out.write("        projectMembers:[{\r\n");
      out.write("        \t projectRoleId : '',\r\n");
      out.write("             memberId: ''\r\n");
      out.write("        }, {\r\n");
      out.write("        \t projectRoleId : '',\r\n");
      out.write("             memberId: ''\r\n");
      out.write("        }],\r\n");
      out.write("        projectAlarms:[{\r\n");
      out.write("            alarmContent : '',\r\n");
      out.write("            senderId: '',\r\n");
      out.write("            receiverId:'',\r\n");
      out.write("            alarmReceiver:''\r\n");
      out.write("        }, {\r\n");
      out.write("            alarmContent : '',\r\n");
      out.write("            senderId: '',\r\n");
      out.write("            receiverId:'',\r\n");
      out.write("            alarmReceiver:''\r\n");
      out.write("        }]\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    const companyId100 = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${companyId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\r\n");
      out.write("    console.log(\"companyId100\", companyId100)\r\n");
      out.write("\r\n");
      out.write("    projectList();\r\n");
      out.write("    selectpllist();\r\n");
      out.write("    insertProject();\r\n");
      out.write("    const add = (a, b) => a + b;\r\n");
      out.write("\r\n");
      out.write("    const selectElement = document.getElementById('plList');\r\n");
      out.write("\r\n");
      out.write("    // 프로젝트 참가 인원 리스트\r\n");
      out.write("\r\n");
      out.write("// PL 지정\r\n");
      out.write("    function selectpllist() {\r\n");
      out.write("    let plList = document.querySelectorAll(\".getmemberlist\");\r\n");
      out.write("        console.log(\"plList\",plList);\r\n");
      out.write("        console.log(\"pl리스트오냐\")\r\n");
      out.write("    headers['Content-Type'] = 'application/json'\r\n");
      out.write("    headers['accept'] = 'application/json'\r\n");
      out.write("        fetch(`/ourmine/company/${companyId100}/project/projectMemberJson`, {\r\n");
      out.write("            method: \"GET\",\r\n");
      out.write("            headers: headers,\r\n");
      out.write("        }).then(resp => resp.json())\r\n");
      out.write("            .then((data,i) => {\r\n");
      out.write("                console.log(\"프로젝트리스트\", data);\r\n");
      out.write("                plList.forEach(list =>{\r\n");
      out.write("                    list.innerHTML += data.map(item =>\r\n");
      out.write("                        ` <option data-optionid=${item.memberId} data-optionname=${item.memberName} value=\"${item.memberId}\">${item.memberName}</option> `\r\n");
      out.write("                    )\r\n");
      out.write("                })\r\n");
      out.write("            })\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    let proList = document.querySelector(\"#proList\");\r\n");
      out.write("    headers['Content-Type'] = 'application/json'\r\n");
      out.write("    headers['accept'] = 'application/json'\r\n");
      out.write("\r\n");
      out.write("    function projectList() {\r\n");
      out.write("//     \tvar principal = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${principal}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\r\n");
      out.write("//     \tconsole.log(\"principal\",principal);\r\n");
      out.write("        fetch(`/ourmine/company/${companyId100}/project/projectListJson`, {\r\n");
      out.write("            method: \"GET\",\r\n");
      out.write("            headers: headers,\r\n");
      out.write("        }).then(resp => resp.json())\r\n");
      out.write("            .then(data => {\r\n");
      out.write("                console.log(\"프로젝트리스트\", data);\r\n");
      out.write("\r\n");
      out.write("                proList.innerHTML += data.map(item => `\r\n");
      out.write("     <div class=\"cardList col-xxl-4 col-xl-4 col-lg-4 col-md-6 col-sm-6\" data-ccc =${item.companyId} data-proId = ${item.projectId} data-proname =\"${item.projectName}\" data-procontent =\"${item.projectContent}\" data-prostartday =${item.projectStartDate} data-proendday=${item.projectEndDate}  style=\"width:400px;float:left;margin-right: 5px;margin-top:5px;\">\r\n");
      out.write("\t     <div class=\"card\">\r\n");
      out.write("\t\t     <div class=\"card-body cardContent\">\r\n");
      out.write("\t     <div class=\"d-flex align-items-center justify-content-between mt-3\">\r\n");
      out.write("\t                \t\t<input type=\"hidden\" value=\"${item.projectContent}\" class=\"projectContentHidden\">\r\n");
      out.write("\t                \t\t<input type=\"hidden\" value=\"${item.projectName}\" class=\"projectNameHidden\">\r\n");
      out.write("\t         <div class=\"lesson_name\">\r\n");
      out.write("\t         <h2 class=\"mb-0 fw-bold fs-6 mb-2 movedash\">\r\n");
      out.write("\t         \t<a href=\"/ourmine/company/${item.companyId}/project/${item.projectId}/dashBoard\" data-proName=${item.projectName}> ${item.projectName}  </a>\r\n");
      out.write("\t         </h2>\r\n");
      out.write("\t             <h6 class=\"mb-0 fw-bold  fs-6  mb-2\" data-proContent=${item.projectContent}>${item.projectContent}</h6>\r\n");
      out.write("\t         </div>\r\n");
      out.write("\t         <div class=\"btn-group\" role=\"group\" aria-label=\"Basic outlined example\">\r\n");
      out.write("\t         \r\n");
      out.write("\t         \t    <button type=\"button\" class=\"btn btn-outline-secondary\" data-bs-toggle=\"modal\" data-bs-target=\"#editproject2\" onclick=\"editPname(${item})\"><i class=\"icofont-edit text-success\"></i></button>\r\n");
      out.write("\t         \t   \r\n");
      out.write("\t\t             <button type=\"button\" class=\"btn btn-outline-secondary\" data-bs-toggle=\"modal\" data-bs-target=\"#deleteproject2\"><i class=\"icofont-ui-delete text-danger\"></i></button>\r\n");
      out.write("\t         </div>\r\n");
      out.write("\t     </div>\r\n");
      out.write("\t     <div class=\"d-flex align-items-center\">\r\n");
      out.write("\t         <div class=\"avatar-list avatar-list-stacked pt-2\">\r\n");
      out.write("\t         ${Array.from({ length: item.projectAttendMemberCount},()=>'<img class=\"avatar rounded-circle sm\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/mytask/documentation/assets/images/xs/avatar7.jpg\" alt=\"\">').join('')}\r\n");
      out.write("\t             <span data-bs-compId=${item.companyId}  class=\"addUserBtn avatar rounded-circle text-center pointer sm\" data-bs-toggle=\"modal\" data-bs-target=\"#addUser\"><i class=\"icofont-ui-add\"></i></span>\r\n");
      out.write("\t         </div>\r\n");
      out.write("\t     </div>\r\n");
      out.write("\t     <div class=\"row g-2 pt-4\">\r\n");
      out.write("\t         <div class=\"col-6\">\r\n");
      out.write("\t             <div class=\"d-flex align-items-center\">\r\n");
      out.write("\t                 <i class=\"icofont-paper-clip\"></i>\r\n");
      out.write("\t                 <span class=\"ms-2\">${item.projectTodoCount} Works</span>\r\n");
      out.write("\t             </div>\r\n");
      out.write("\t         </div>\r\n");
      out.write("\t         <div class=\"col-6\">\r\n");
      out.write("\t             <div class=\"d-flex align-items-center\">\r\n");
      out.write("\t                 <i class=\"icofont-sand-clock\"></i>\r\n");
      out.write("\t                 <span class=\"ms-2\">${item.projectStartDate} </span>\r\n");
      out.write("\t             </div>\r\n");
      out.write("\t         </div>\r\n");
      out.write("\t         <div class=\"col-6\">\r\n");
      out.write("\t             <div class=\"d-flex align-items-center\">\r\n");
      out.write("\t                 <i class=\"icofont-group-students \"></i>\r\n");
      out.write("\t                 <span class=\"ms-2\">${item.projectAttendMemberCount} Members</span>\r\n");
      out.write("\t             </div>\r\n");
      out.write("\t         </div>\r\n");
      out.write("\t         <div class=\"col-6\">\r\n");
      out.write("\t             <div class=\"d-flex align-items-center\">\r\n");
      out.write("\t                      <i class=\"icofont-sand-clock\"></i>\r\n");
      out.write("\t                 <span class=\"ms-2\">${item.projectEndDate}</span>\r\n");
      out.write("\t\r\n");
      out.write("\t             </div>\r\n");
      out.write("\t         </div>\r\n");
      out.write("\t     </div>\r\n");
      out.write("\t     <div class=\"dividers-block\"></div>\r\n");
      out.write("\t     <div class=\"d-flex align-items-center justify-content-between mb-2\">\r\n");
      out.write("\t         <h4 class=\"small fw-bold mb-0\">Progress(${item.progress}%)</h4>\r\n");
      out.write("\t<!--          ${item.leftDays <= 14 && item.progress!=100 ? `<button type=\"button\" class=\"btn btn-outline-danger\">확인</button>` : ''} -->\r\n");
      out.write("\t           <span id='days${item.projectId}'   class=\" days small light-danger-bg  p-1 rounded\"><i class=\"icofont-ui-clock\">\r\n");
      out.write("\t           </i> ${item.leftDays === 0 ? 'Completed' : item.leftDays +'Days Left' } </span>\r\n");
      out.write("\t     </div>\r\n");
      out.write("\t\r\n");
      out.write("\t     <div class=\"progress\" style=\"height: 8px;\" >\r\n");
      out.write("\t         <div id='progre${item.projectId}' class=\"prog progress-bar bg-secondary\" data-progress=${item.progress} data-statusname=${item.projectStatusName} role=\"progressbar\" style=\"width: ${item.progress}%\" aria-valuenow=\"15\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n");
      out.write("\t     </div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("     `).reduce(add)\r\n");
      out.write("                // 위에서 먼저 찍어주고\r\n");
      out.write("                content();\r\n");
      out.write("            })\r\n");
      out.write("            \r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    //  const editPname = (item) => {\r\n");
      out.write("    //      console.log(\"event: \", item);\r\n");
      out.write("    //  }\r\n");
      out.write("\r\n");
      out.write("    // 리스트가 뜨고 안에 내용을 맞춰서 찍어주기 위해 순서를 맞춘다 projectList()->content()\r\n");
      out.write("    function content() {\r\n");
      out.write("\r\n");
      out.write("        // Completed일때\r\n");
      out.write("        let days = document.querySelectorAll('.days');\r\n");
      out.write("        let daysvalue = days.innerHTML;\r\n");
      out.write("         console.log(\"days: \", days);\r\n");
      out.write("        days.forEach(item => {\r\n");
      out.write("            if (item.innerHTML.includes('Completed')) {\r\n");
      out.write("                item.classList.remove('days', 'small', 'light-danger-bg', 'p-1', 'rounded');\r\n");
      out.write("                item.setAttribute('class', 'days small light-success-bg  p-1 rounded');\r\n");
      out.write("            } else {\r\n");
      out.write("                item\r\n");
      out.write("            }\r\n");
      out.write("        })\r\n");
      out.write("\r\n");
      out.write("        const prodiv = document.querySelectorAll(\".prog\");\r\n");
      out.write("        prodiv.forEach((item) => {\r\n");
      out.write("            const proStatus = item.getAttribute('data-progress');\r\n");
      out.write("            console.log(\"proStatus: \", proStatus);\r\n");
      out.write("            if (proStatus == 100) {\r\n");
      out.write("                item.classList.remove('prog', 'progress-bar', 'bg-secondary');\r\n");
      out.write("                item.setAttribute('class', 'prog progress-bar bg-success');\r\n");
      out.write("            } else {\r\n");
      out.write("                item\r\n");
      out.write("            }\r\n");
      out.write("        })\r\n");
      out.write("\r\n");
      out.write("        const allProjects = document.querySelectorAll(\".prog\");\r\n");
      out.write("        const projList = document.querySelectorAll('.cardList');\r\n");
      out.write("        // console.log(\"projList: \", projList);\r\n");
      out.write("\r\n");
      out.write("        document.getElementById(\"startedList\").addEventListener(\"click\", function () {\r\n");
      out.write("            allProjects.forEach((item, i) => {\r\n");
      out.write("                let data = item.getAttribute('data-statusname')\r\n");
      out.write("                console.log(\"starteddata:\", data);\r\n");
      out.write("                if (data !== 'STARTED') {\r\n");
      out.write("                    console.log('aa');\r\n");
      out.write("                    projList[i].style.display = 'none';\r\n");
      out.write("                    console.log(\"projList[i]\", projList[i]);\r\n");
      out.write("                } else {\r\n");
      out.write("                    projList[i].style.display = 'block';\r\n");
      out.write("                    console.log(\"blockprojList[i]\", projList[i]);\r\n");
      out.write("                }\r\n");
      out.write("            })\r\n");
      out.write("        })\r\n");
      out.write("\r\n");
      out.write("        document.getElementById(\"completedList\").addEventListener(\"click\", function () {\r\n");
      out.write("            allProjects.forEach((item, i) => {\r\n");
      out.write("                let data = item.getAttribute('data-statusname')\r\n");
      out.write("                console.log(\"completeddata:\", data);\r\n");
      out.write("                if (data !== 'COMPLETED') {\r\n");
      out.write("                    console.log('aa');\r\n");
      out.write("                    projList[i].style.display = 'none';\r\n");
      out.write("                    console.log(\"projList[i]\", projList[i]);\r\n");
      out.write("                } else {\r\n");
      out.write("                    projList[i].style.display = '';\r\n");
      out.write("                }\r\n");
      out.write("            })\r\n");
      out.write("        })\r\n");
      out.write("\r\n");
      out.write("        document.getElementById(\"allList\").addEventListener(\"click\", function () {\r\n");
      out.write("            allProjects.forEach((item, i) => {\r\n");
      out.write("                let data = item.getAttribute('data-statusname')\r\n");
      out.write("                projList[i].style.display = '';\r\n");
      out.write("\r\n");
      out.write("            })\r\n");
      out.write("        })\r\n");
      out.write("        // 수정 눌렀을 때 모달에 기존 내용 채우기\r\n");
      out.write("\r\n");
      out.write("        $(\".cardList\").on('click', function () {\r\n");
      out.write("            let projid = $(this).data(\"proid\");\r\n");
      out.write("//             let projname = $(this).data(\"proname\");\r\n");
      out.write("//             let projname = $(\".projectNameHidden\").val();\r\n");
      out.write("//             let projcont = $(\".projectContentHidden\").val();\r\n");
      out.write("            let projname = $(this).data(\"proname\");\r\n");
      out.write("            let projcont = $(this).data(\"procontent\");\r\n");
      out.write("            let projsday = $(this).data(\"prostartday\");\r\n");
      out.write("            let projeday = $(this).data(\"proendday\");\r\n");
      out.write("\r\n");
      out.write("            editProject.projectId = projid;\r\n");
      out.write("            editProject.projectName = projname;\r\n");
      out.write("            editProject.projectContent = projcont;\r\n");
      out.write("            editProject.projectStartDate = projsday;\r\n");
      out.write("            editProject.projectEndDate = projeday;\r\n");
      out.write("\r\n");
      out.write("            $(\"#editprojectId\").val(editProject.projectId);\r\n");
      out.write("            $(\"#exampleFormControlInput78\").val(editProject.projectName);\r\n");
      out.write("            $(\"#exampleFormControlTextarea786\").val(editProject.projectContent);\r\n");
      out.write("            $(\"#datepickerded123\").val(editProject.projectStartDate);\r\n");
      out.write("            $(\"#datepickerded456\").val(editProject.projectEndDate);\r\n");
      out.write("\r\n");
      out.write("            // console.log(editProject.projectId);\r\n");
      out.write("            // console.log(editProject.projectName);\r\n");
      out.write("            // console.log(editProject.projectContent);\r\n");
      out.write("            // console.log(editProject.projectStartDate);\r\n");
      out.write("            // console.log(editProject.projectEndDate);\r\n");
      out.write("        })\r\n");
      out.write("\r\n");
      out.write("        // 프로젝트카드 최상위\r\n");
      out.write("        $(\".cardList\").on('click', function () {\r\n");
      out.write("            let proje = $(this).data(\"proid\");\r\n");
      out.write("            let comId = $(this).data(\"ccc\");\r\n");
      out.write("            delData.projectId = proje;\r\n");
      out.write("            company.companyId = comId;\r\n");
      out.write("            company.projectId = proje;\r\n");
      out.write("            project.projectId = proje;\r\n");
      out.write("            console.log(\"projectId:\", project.projectId);\r\n");
      out.write("            console.log(\"companyId:\", company.companyId);\r\n");
      out.write("        })\r\n");
      out.write("\r\n");
      out.write("        $(\".members_list\").on('click', function () {\r\n");
      out.write("\r\n");
      out.write("        })\r\n");
      out.write("\r\n");
      out.write("        // ==================== 프로젝트 삭제 ====================\r\n");
      out.write("        let delForm = document.querySelector('.delForm2');\r\n");
      out.write("        delForm.addEventListener('submit', function (e) {\r\n");
      out.write("            e.preventDefault();\r\n");
      out.write("\r\n");
      out.write("            headers['Content-Type'] = 'application/json'\r\n");
      out.write("            headers['accept'] = 'application/json'\r\n");
      out.write("            fetch(`/ourmine/company/${companyId100}/project/projectDelete`, {\r\n");
      out.write("                method: 'POST',\r\n");
      out.write("                headers: headers,\r\n");
      out.write("                body: JSON.stringify(project)\r\n");
      out.write("            }).then(resp => resp.json)\r\n");
      out.write("                .then(data => console.log(data));\r\n");
      out.write("            $('#deleteproject2').modal('hide');\r\n");
      out.write("            clearListDiv();\r\n");
      out.write("            projectList();\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    function  insertProject() {\r\n");
      out.write("    //=========================프로젝트 생성=========================\r\n");
      out.write("        let plList = document.querySelectorAll(\".getmemberlist\");\r\n");
      out.write("        plList.forEach((item,i) =>(\r\n");
      out.write("            item.addEventListener('change', function (e){\r\n");
      out.write("                let option = e.target.options[e.target.selectedIndex];\r\n");
      out.write("                let select = option.getAttribute(\"data-optionid\");\r\n");
      out.write("                let selectname = option.getAttribute(\"data-optionname\");\r\n");
      out.write("                console.log(\"select\", select);\r\n");
      out.write("                console.log(\"selectname\", selectname);\r\n");
      out.write("                if(i === 0){\r\n");
      out.write("                    insertdata.projectMembers[0].memberId = select;\r\n");
      out.write("                    insertdata.projectMembers[0].projectRoleId = 1;\r\n");
      out.write("                    insertdata.projectAlarms[0].receiverId = select;\r\n");
      out.write("                 \tinsertdata.projectAlarms[0].alarmReceiver = selectname;\r\n");
      out.write("                }else{\r\n");
      out.write("                    insertdata.projectMembers[1].memberId = select;\r\n");
      out.write("                    insertdata.projectMembers[1].projectRoleId = 2;\r\n");
      out.write("                    insertdata.projectAlarms[1].receiverId = select;\r\n");
      out.write("                 \tinsertdata.projectAlarms[1].alarmReceiver = selectname;\r\n");
      out.write("                }\r\n");
      out.write("                console.log(insertdata);\r\n");
      out.write("            })\r\n");
      out.write("        ))\r\n");
      out.write("    let insertForm = document.querySelector(\".insertProjectForm\");\r\n");
      out.write("    insertForm.addEventListener('submit', function (e) {\r\n");
      out.write("        console.log(\"생성이벤트?\");\r\n");
      out.write("        e.preventDefault();\r\n");
      out.write("        const selectPl = document.getElementById(\"getPlId\");\r\n");
      out.write("        const selectPM = document.getElementById(\"getPmId\");\r\n");
      out.write("        const selectedValue = selectPl.value;\r\n");
      out.write("        const selectedValue2 = selectPM.value;\r\n");
      out.write("\t\tconsole.log(\"selectedValue:\",selectedValue);\r\n");
      out.write("\t\tconsole.log(\"selectedValue2:\",selectedValue2);\r\n");
      out.write("\t\t\r\n");
      out.write("//         console.log(\"Selected memberId[1]:\", insertdata.members[1].memberId);\r\n");
      out.write("        console.log(\"인서트데이터전체\",insertdata );\r\n");
      out.write("        const projectName = $(\"#exampleFormControlInput77\").val();\r\n");
      out.write("        const projectContent = $(\"#exampleFormControlTextarea78\").val();\r\n");
      out.write("        const projectStartDate = $(\"#datepickerded\").val();\r\n");
      out.write("        const projectEndDate = $(\"#datepickerdedone\").val();\r\n");
      out.write("\r\n");
      out.write("        insertdata.projectName = projectName;\r\n");
      out.write("        insertdata.projectContent = projectContent;\r\n");
      out.write("        insertdata.projectStartDate = projectStartDate;\r\n");
      out.write("        insertdata.projectEndDate = projectEndDate;\r\n");
      out.write("        insertdata.projectAlarms[0].alarmContent = projectContent\r\n");
      out.write("//         insertdata.projectAlarms[0].senderId\r\n");
      out.write("//         insertdata.projectAlarms[0].receiverId\r\n");
      out.write("//         insertdata.projectAlarms[0].alarmReceiver\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        insertdata.projectAlarms[1].alarmContent = projectContent\r\n");
      out.write("        console.log(\"insertdata 여기까지: \", insertdata);\r\n");
      out.write("        headers['Content-Type'] = 'application/json'\r\n");
      out.write("        headers['accept'] = 'application/json'\r\n");
      out.write("        fetch(`/ourmine/company/${companyId100}/project/projectInsert`, {\r\n");
      out.write("            method: \"POST\",\r\n");
      out.write("            headers: headers,\r\n");
      out.write("            body: JSON.stringify(insertdata)\r\n");
      out.write("        }).then(response => response.json())\r\n");
      out.write("            .then(data => {\r\n");
      out.write("                console.log(\"data :\", data)\r\n");
      out.write("                if (data > 0) {\r\n");
      out.write("                    $(\"#createproject\").modal(\"hide\");\r\n");
      out.write("                }\r\n");
      out.write("                \r\n");
      out.write("                clearListDiv();\r\n");
      out.write("                projectList();\r\n");
      out.write("                Swal.fire({\r\n");
      out.write("\t\t\t\t\ticon: 'success',\r\n");
      out.write("\t\t\t\t\ttitle:'등록완료',\r\n");
      out.write("\t\t\t\t\tshowConfirmButton: false,\r\n");
      out.write("\t\t\t\t\ttimer: 800\r\n");
      out.write("                })\r\n");
      out.write("            })\r\n");
      out.write("    })\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    //=========================프로젝트 수정=========================\r\n");
      out.write("    let editForm = document.querySelector(\".editForm\");\r\n");
      out.write("    editForm.addEventListener('submit', function (e) {\r\n");
      out.write("        e.preventDefault();\r\n");
      out.write("        const projectId = $(\"#editprojectId\").val();\r\n");
      out.write("        const projectName = $(\".projectNameIn\").val();\r\n");
      out.write("        const projectContent = $(\"#exampleFormControlTextarea786\").val();\r\n");
      out.write("        const projectStartDate = $(\"#datepickerded123\").val();\r\n");
      out.write("        const projectEndDate = $(\"#datepickerded456\").val();\r\n");
      out.write("\r\n");
      out.write("        projectOBj.projectId = projectId;\r\n");
      out.write("        projectOBj.projectName = projectName;\r\n");
      out.write("        projectOBj.projectContent = projectContent;\r\n");
      out.write("        projectOBj.projectStartDate = projectStartDate;\r\n");
      out.write("        projectOBj.projectEndDate = projectEndDate\r\n");
      out.write("        console.log(projectOBj.projectId);\r\n");
      out.write("        headers['Content-Type'] = 'application/json'\r\n");
      out.write("        headers['accept'] = 'application/json'\r\n");
      out.write("        fetch(`/ourmine/company/${companyId100}/project/projectView`, {\r\n");
      out.write("            method: \"POST\",\r\n");
      out.write("            headers: headers,\r\n");
      out.write("            body: JSON.stringify(projectOBj)\r\n");
      out.write("        }).then(response => response.json())\r\n");
      out.write("            .then(data => {\r\n");
      out.write("                console.log(\"data :\", data)\r\n");
      out.write("                if (data > 0) {\r\n");
      out.write("                    $(\"#editproject2\").modal(\"hide\");\r\n");
      out.write("\r\n");
      out.write("                    clearListDiv();\r\n");
      out.write("                    projectList();\r\n");
      out.write("                }\r\n");
      out.write("            })\r\n");
      out.write("    })\r\n");
      out.write("    //=========================프로젝트 인원추가=========================\r\n");
      out.write("    let removeDiv = $(\"#remove\");\r\n");
      out.write("    let addUList = document.querySelector(\"#addUserList\");\r\n");
      out.write("    let nowList = document.querySelector(\"#nowUserList\");\r\n");
      out.write("    let addUser = document.querySelectorAll(\".addUserBtn\");\r\n");
      out.write("    let addUserArray = [];\r\n");
      out.write("    let userData = []\r\n");
      out.write("\r\n");
      out.write("    // 프로젝트 인원추가에다가 버튼 클릭이벤트 ======================================================================================================================================================================================\r\n");
      out.write("    $(document).on('click', '.addUserBtn', () => {\r\n");
      out.write("        console.log(\"클릭이벤트\");\r\n");
      out.write("        clearUserLi();\r\n");
      out.write("        addProjectUserList();\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("    // 프로젝트 인원추가에다가 데이터 뿌려주는거 ======================================================================================================================================================================================\r\n");
      out.write("    async function addProjectUserList() {\r\n");
      out.write("        console.log(JSON.stringify(company));\r\n");
      out.write("        await fetch('/ourmine/association/associationList', {\r\n");
      out.write("            method: \"POST\",\r\n");
      out.write("            headers: headers,\r\n");
      out.write("            body: JSON.stringify(company)\r\n");
      out.write("        }).then(resp => resp.json())\r\n");
      out.write("            .then(data => {\r\n");
      out.write("                console.log(\"userdata\", data);\r\n");
      out.write("                userData = [...data]\r\n");
      out.write("                console.log(\"userdata\", userData)\r\n");
      out.write("                searchMembers();\r\n");
      out.write("                data.filter(item => item.projectAttendStatus === 'ATTEND').map((user) => {\r\n");
      out.write("                    nowList.innerHTML +=\r\n");
      out.write("                        `\r\n");
      out.write("                        \t<input class=\"attendData\" type=\"hidden\" value=\"${user.projectRoleId}\">\r\n");
      out.write("\r\n");
      out.write("                        \t<li class=\"list-group-item py-3 text-center text-md-start\">\r\n");
      out.write("                        \t    <div class=\"d-flex align-items-center flex-column flex-sm-column flex-md-column flex-lg-row\">\r\n");
      out.write("                        \t        <div class=\"no-thumbnail mb-2 mb-md-0\">\r\n");
      out.write("                        \t            <img class=\"avatar lg rounded-circle\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/mytask/documentation/assets/images/xs/avatar8.jpg\" alt=\"\">\r\n");
      out.write("                        \t        </div>\r\n");
      out.write("                        \t        <div class=\"flex-fill ms-3 text-truncate\">\r\n");
      out.write("                        \t            <h6 class=\"mb-0  fw-bold\" data-memberiddata=${user.memberId} data-projectiddata=${user.projectId} data-projectroleiddata=${user.projectRoleId} data-projectattendkey=${user.projectAttendAk}>${user.memberName}</h6>\r\n");
      out.write("                        \t            <span class=\"text-muted\" data-companyiddata=${user.companyId}>${user.memberEmail}</span>\r\n");
      out.write("                        \t       ${user.projectRoleId===2 ? \"<span>PL</span>\"\r\n");
      out.write("                        \t       : (user.projectRoleId===1 ? \"<span>PM</span>\"\r\n");
      out.write("                        \t       : '<button class=\"btn btn-dark deleteMemberBtn\" type=\"button\"  >제거</button>' )}\r\n");
      out.write("\r\n");
      out.write("                        \t        </div>\r\n");
      out.write("                        \t    </div>\r\n");
      out.write("                        \t</li>\r\n");
      out.write("                        `\r\n");
      out.write("                })\r\n");
      out.write("\r\n");
      out.write("                data.filter(item => item.projectAttendStatus === 'NO').map((user) => {\r\n");
      out.write("                    addUList.innerHTML += `\r\n");
      out.write("                             <input class=\"attendData\" type=\"hidden\" value=\"${user.projectRoleId}\"  >\r\n");
      out.write("\r\n");
      out.write("                            <li class=\"list-group-item py-3 text-center text-md-start\">\r\n");
      out.write("                                <div class=\"d-flex align-items-center flex-column flex-sm-column flex-md-column flex-lg-row\">\r\n");
      out.write("                                    <div class=\"no-thumbnail mb-2 mb-md-0\">\r\n");
      out.write("                                        <img class=\"avatar lg rounded-circle\"  src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/mytask/documentation/assets/images/xs/avatar8.jpg\" alt=\"\">\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                    <div class=\"flex-fill ms-3 text-truncate\">\r\n");
      out.write("                                        <h6 class=\"mb-0  fw-bold\"> ${user.memberName} </h6>\r\n");
      out.write("                                        <span class=\"text-muted\">${user.memberEmail}</span>\r\n");
      out.write("                                        <button class=\"btn btn-dark insertMemberBtn\" type=\"button\" data-memberiddata =${user.memberId}  data-companyiddata =${user.companyId} data-projectiddata =${user.projectId}  data-projectroleiddata =${user.projectRoleId} data-projectattendkey=${user.projectAttendAk} >추가</button>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </li>\r\n");
      out.write("                  `\r\n");
      out.write("                }).reduce(add)\r\n");
      out.write("\r\n");
      out.write("            })\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    // 수정하고 나서 비우는거 ======================================================================================================================================================================================\r\n");
      out.write("    function clearListDiv() {\r\n");
      out.write("        $(\"#proList\").empty();\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    // 프로젝트 참가 인원 볼때 클리어하는거 ======================================================================================================================================================================================\r\n");
      out.write("    function clearUserLi() {\r\n");
      out.write("        // $('#remove').html();\r\n");
      out.write("        let list = document.getElementById(\"addUserList\");\r\n");
      out.write("        let lastlist = list.lastElementChild;\r\n");
      out.write("\r\n");
      out.write("        let nowlist = document.getElementById(\"nowUserList\");\r\n");
      out.write("        let nowlastlist = nowlist.lastElementChild;\r\n");
      out.write("\r\n");
      out.write("        while (lastlist) {\r\n");
      out.write("            list.removeChild(lastlist);\r\n");
      out.write("            lastlist = list.lastElementChild;\r\n");
      out.write("        }\r\n");
      out.write("        while (nowlastlist) {\r\n");
      out.write("            nowlist.removeChild(nowlastlist);\r\n");
      out.write("            nowlastlist = nowlist.lastElementChild;\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    // 프로젝트참가 딜리트 버튼 클릭 이벤트 ======================================================================================================================================================================================\r\n");
      out.write("    $(document).on('click', '.deleteMemberBtn', function (e) {\r\n");
      out.write("        console.log(\"멤버 제거 버튼눌렀니?\");\r\n");
      out.write("        // let memberId = $('.deleteMemberBtn').data('memberiddata');\r\n");
      out.write("        // // let memberId = $('.deleteMemberBtn').data('memberiddata');\r\n");
      out.write("        // let companyId = $('.deleteMemberBtn').data('companyiddata');\r\n");
      out.write("        // let projectId = $('.deleteMemberBtn').data('projectiddata');\r\n");
      out.write("        // let projectRoleId = $('.deleteMemberBtn').data('projectroleiddata');\r\n");
      out.write("        // let projectAttendAk = $('.deleteMemberBtn').data('projectattendkey');\r\n");
      out.write("        // let projectAttendAk = $('.deleteMemberBtn').data('projectattendkey');\r\n");
      out.write("\r\n");
      out.write("        let listItem = e.target.closest('.list-group-item');\r\n");
      out.write("\r\n");
      out.write("        // 해당 요소 내에서 h6 태그를 찾는다.\r\n");
      out.write("        let h6 = listItem.querySelector('h6');\r\n");
      out.write("\r\n");
      out.write("        // h6 태그의 dataset을 출력한다.\r\n");
      out.write("        console.log(\"h6태그에 있는 dataset\", h6.dataset);\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        const {projectattendkey, projectroleiddata, projectiddata, companyiddata, memberiddata} = h6.dataset;\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        console.log(\"대체키\", projectattendkey)\r\n");
      out.write("        console.log(\"멤버아이디\", memberiddata)\r\n");
      out.write("        console.log(projectroleiddata)\r\n");
      out.write("        console.log(projectiddata)\r\n");
      out.write("        console.log(companyiddata)\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        delData.memberId = memberiddata;\r\n");
      out.write("        delData.companyId = companyiddata;\r\n");
      out.write("        delData.projectId = projectiddata;\r\n");
      out.write("        delData.projectRoleId = projectroleiddata;\r\n");
      out.write("        delData.projectAttendAk = projectattendkey;\r\n");
      out.write("\r\n");
      out.write("        // console.log(\"삭제memid\",memberId);\r\n");
      out.write("        // console.log(\"삭제compid\",companyId);\r\n");
      out.write("        // console.log(\"삭제projectid\", projectId);\r\n");
      out.write("        // console.log(\"삭제projectroleid\",projectRoleId);\r\n");
      out.write("        // console.log(\"삭제projectattendKey\", projectAttendAk);\r\n");
      out.write("        console.log(\"delData : \", delData);\r\n");
      out.write("\r\n");
      out.write("        deleteMemberProjectAttend(delData);\r\n");
      out.write("        clearUserLi();\r\n");
      out.write("        addProjectUserList();\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("    // 프로젝트참가 딜리트 ======================================================================================================================================================================================\r\n");
      out.write("    function deleteMemberProjectAttend(delData) {\r\n");
      out.write("        console.log(\"delllll\", delData);\r\n");
      out.write("        console.log(\"projectAttendAk 잘 오니?\", delData.projectattendkey);\r\n");
      out.write("        headers['Content-Type'] = 'application/json'\r\n");
      out.write("        headers['accept'] = 'application/json'\r\n");
      out.write("        fetch(`/ourmine/company/${companyId100}/projectAttend/projectAttendDelete`, {\r\n");
      out.write("            method: \"POST\",\r\n");
      out.write("            headers: headers,\r\n");
      out.write("            body: JSON.stringify(delData)\r\n");
      out.write("            // body : JSON.stringify($('.deleteMemberBtn').data('projectattendkey'))\r\n");
      out.write("        }).then(resp => resp.json())\r\n");
      out.write("            .then(data => console.log(\"참가인원제거데이터\",data))\r\n");
      out.write("\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    // 프로젝트참가 인서트 버튼 클릭이벤트\r\n");
      out.write("    $(document).on('click', '.insertMemberBtn', function (e) {\r\n");
      out.write("        console.log(\"멤바추가 버튼 눌렀니?\");\r\n");
      out.write("        const {projectattendkey, projectroleiddata, projectiddata, companyiddata, memberiddata} = e.target.dataset;\r\n");
      out.write("        delData.memberId = memberiddata;\r\n");
      out.write("        delData.companyId = companyiddata;\r\n");
      out.write("        // delData.projectId = projectiddata;\r\n");
      out.write("        delData.projectRoleId = projectroleiddata;\r\n");
      out.write("        delData.projectAttendAk = projectattendkey;\r\n");
      out.write("\r\n");
      out.write("        insertMemberProjectAttend();\r\n");
      out.write("        clearUserLi();\r\n");
      out.write("        addProjectUserList();\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("    // 프로젝트 참가 인서트\r\n");
      out.write("    function insertMemberProjectAttend() {\r\n");
      out.write("        console.log(\"인서트데이터\", JSON.stringify(delData));\r\n");
      out.write("        headers['Content-Type'] = 'application/json'\r\n");
      out.write("        headers['accept'] = 'application/json'\r\n");
      out.write("        fetch(`/ourmine/company/${companyId100}/projectAttend/projectAttendInsert`, {\r\n");
      out.write("            method: \"POST\",\r\n");
      out.write("            headers: headers,\r\n");
      out.write("            body: JSON.stringify(delData)\r\n");
      out.write("        }).then(resp => resp.json())\r\n");
      out.write("            .then(data => console.log(\"참가인원추가데이터\", data))\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write(" function searchMembers() {\r\n");
      out.write("        const searchField = document.getElementById('searchName');\r\n");
      out.write("        const nowUserList = document.getElementById('nowUserList').getElementsByTagName('li');\r\n");
      out.write("        const addUserList = document.getElementById('addUserList').getElementsByTagName('li');\r\n");
      out.write("\r\n");
      out.write("        const searchValue = searchField.value.toLowerCase();\r\n");
      out.write("\r\n");
      out.write("        for (let i = 0; i < nowUserList.length; i++) {\r\n");
      out.write("            const username = nowUserList[i].textContent.toLowerCase();\r\n");
      out.write("            if (username.includes(searchValue)) {\r\n");
      out.write("                nowUserList[i].style.display = 'block';\r\n");
      out.write("            } else {\r\n");
      out.write("                nowUserList[i].style.display = 'none';\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        for (let i = 0; i < addUserList.length; i++) {\r\n");
      out.write("            const username = addUserList[i].textContent.toLowerCase();\r\n");
      out.write("            if (username.includes(searchValue)) {\r\n");
      out.write("                addUserList[i].style.display = 'block';\r\n");
      out.write("            } else {\r\n");
      out.write("                addUserList[i].style.display = 'none';\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("\t\r\n");
      out.write(" \t\r\n");
      out.write("\t//현재 날짜를 가져오는 함수\r\n");
      out.write("\t function getCurrentDate() {\r\n");
      out.write("\t     var today = new Date();\r\n");
      out.write("\t     var yyyy = today.getFullYear();\r\n");
      out.write("\t     var mm = String(today.getMonth() + 1).padStart(2, '0'); // 0부터 시작하므로 1을 더함\r\n");
      out.write("\t     var dd = String(today.getDate()).padStart(2, '0');\r\n");
      out.write("\t     return yyyy + '-' + mm + '-' + dd;\r\n");
      out.write("\t }\r\n");
      out.write("\r\n");
      out.write(" \t\r\n");
      out.write("    // 검색 필드 이벤트 처리\r\n");
      out.write("    const searchField = document.getElementById('searchName');\r\n");
      out.write("    searchField.addEventListener('input', searchMembers);\r\n");
      out.write("\r\n");
      out.write("\t$('#autoBtn').on('click',function(){\r\n");
      out.write("\t\tconsole.log(\"자동완성클릭\");\r\n");
      out.write("\t$(\"#exampleFormControlInput77\").val(\"전자정부 공공정보 시스템 구축\");\r\n");
      out.write("\tdocument.getElementById(\"datepickerded\").value = getCurrentDate();\r\n");
      out.write("   document.getElementById(\"datepickerdedone\").value = getCurrentDate();\r\n");
      out.write("\t$(\"#exampleFormControlTextarea78\").val(\"공공기관의 업무 효율과 국민 서비스 품질을 향상을 목표로 합니다.\");\r\n");
      out.write("\t$(\"#datepickerded\").val()\r\n");
      out.write("\t\r\n");
      out.write("\t})\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<script>\r\n");
      out.write("document.querySelectorAll(\".memberModalClose\").forEach(item => {\r\n");
      out.write("    item.addEventListener('click', () => {\r\n");
      out.write("    \t$('#addUser').modal('hide');\r\n");
      out.write("    \tconsole.log(\"멤버추가모달 닫힘\");\r\n");
      out.write("    \t$(\"#proList\").empty();\r\n");
      out.write("    \tprojectList();\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("})\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_security_005fauthorize_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  security:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_security_005fauthorize_005f0 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsecurity_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_security_005fauthorize_005f0_reused = false;
    try {
      _jspx_th_security_005fauthorize_005f0.setPageContext(_jspx_page_context);
      _jspx_th_security_005fauthorize_005f0.setParent(null);
      // /WEB-INF/jsp/manager/ProjectList.jsp(10,14) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_security_005fauthorize_005f0.setAccess("hasRole('MANAGER')");
      int _jspx_eval_security_005fauthorize_005f0 = _jspx_th_security_005fauthorize_005f0.doStartTag();
      if (_jspx_eval_security_005fauthorize_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\r\n");
        out.write("\t             <button type=\"button\" class=\"btn btn-dark w-sm-100\" data-bs-toggle=\"modal\"\r\n");
        out.write("\t                        data-bs-target=\"#createproject\"><i class=\"icofont-plus-circle me-2 fs-6\"></i>프로젝트생성\r\n");
        out.write("\t                </button>\r\n");
        out.write("\t             ");
      }
      if (_jspx_th_security_005fauthorize_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsecurity_005fauthorize_0026_005faccess.reuse(_jspx_th_security_005fauthorize_005f0);
      _jspx_th_security_005fauthorize_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_security_005fauthorize_005f0, _jsp_getInstanceManager(), _jspx_th_security_005fauthorize_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_security_005fauthorize_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  security:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_security_005fauthorize_005f1 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsecurity_005fauthorize_0026_005furl.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_security_005fauthorize_005f1_reused = false;
    try {
      _jspx_th_security_005fauthorize_005f1.setPageContext(_jspx_page_context);
      _jspx_th_security_005fauthorize_005f1.setParent(null);
      // /WEB-INF/jsp/manager/ProjectList.jsp(42,1) name = url type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_security_005fauthorize_005f1.setUrl((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("/company/${companyId}/project/projectList/projectView", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_security_005fauthorize_005f1 = _jspx_th_security_005fauthorize_005f1.doStartTag();
      if (_jspx_eval_security_005fauthorize_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\r\n");
        out.write("<form class=\"editForm\">\r\n");
        out.write("    <div class=\"modal fade\" id=\"editproject2\" tabindex=\"-1\" aria-hidden=\"true\">\r\n");
        out.write("\r\n");
        out.write("        <div class=\"modal-dialog modal-dialog-centered modal-md modal-dialog-scrollable\">\r\n");
        out.write("\r\n");
        out.write("            <div class=\"modal-content\">\r\n");
        out.write("                <div class=\"modal-header\">\r\n");
        out.write("                    <h5 class=\"modal-title  fw-bold\" id=\"editprojectLabel\">프로젝트 수정</h5>\r\n");
        out.write("                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n");
        out.write("                </div>\r\n");
        out.write("\r\n");
        out.write("                <div class=\"modal-body\">\r\n");
        out.write("                    <div class=\"mb-3\">\r\n");
        out.write("                        <label for=\"exampleFormControlInput78\" class=\"form-label\">프로젝트이름</label>\r\n");
        out.write("                        <input type=\"text\" class=\"projectNameIn form-control\" id=\"exampleFormControlInput78\" >\r\n");
        out.write("                        <input type=\"hidden\" class=\"editproid\" id=\"editprojectId\" value=\"\">\r\n");
        out.write("                    </div>\r\n");
        out.write("\r\n");
        out.write("                    <div class=\"mb-3\">\r\n");
        out.write("                        <label for=\"exampleFormControlTextarea786\" class=\"form-label\">프로젝트설명</label>\r\n");
        out.write("                        <textarea class=\"form-control\" id=\"exampleFormControlTextarea786\" rows=\"3\"></textarea>\r\n");
        out.write("                    </div>\r\n");
        out.write("\r\n");
        out.write("                    <!-- <div class=\"mb-3\">\r\n");
        out.write("                        <label for=\"formFileMultiple456\" class=\"form-label\">ProjectImages & Document</label>\r\n");
        out.write("                            <input class=\"form-control\" type=\"file\" id=\"formFileMultiple456\">\r\n");
        out.write("                    </div> -->\r\n");
        out.write("\r\n");
        out.write("                    <div class=\"deadline-form\">\r\n");
        out.write("                        <div class=\"row g-3 mb-3\">\r\n");
        out.write("                            <div class=\"col\">\r\n");
        out.write("                                <label for=\"datepickerded123\" class=\"form-label\">시작날짜</label>\r\n");
        out.write("                                <input type=\"date\" class=\"form-control\" id=\"datepickerded123\" value=\"\">\r\n");
        out.write("                            </div>\r\n");
        out.write("\r\n");
        out.write("                            <div class=\"col\">\r\n");
        out.write("                                <label for=\"datepickerded456\" class=\"form-label\">종료날짜</label>\r\n");
        out.write("                                <input type=\"date\" class=\"form-control\" id=\"datepickerded456\" value=\"\">\r\n");
        out.write("                            </div>\r\n");
        out.write("                        </div>\r\n");
        out.write("\r\n");
        out.write("                        <!-- <div class=\"row g-3 mb-3\">\r\n");
        out.write("                            <div class=\"col-sm-12\">\r\n");
        out.write("                                <label class=\"form-label\">Notifation Sent</label>\r\n");
        out.write("                                <select\tclass=\"form-select\" aria-label=\"Default select example\">\r\n");
        out.write("                                    <option selected>All</option>\r\n");
        out.write("                                    <option value=\"1\">Team Leader Only</option>\r\n");
        out.write("                                    <option value=\"2\">Team Member Only</option>\r\n");
        out.write("                                </select>\r\n");
        out.write("                            </div>\r\n");
        out.write("                        </div> -->\r\n");
        out.write("                    </div>\r\n");
        out.write("\r\n");
        out.write("                </div>\r\n");
        out.write("                <div class=\"modal-footer\">\r\n");
        out.write("                    <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\r\n");
        out.write("                    <button type=\"submit\" id=\"editBtn\" class=\"btn btn-primary\">Edit</button>\r\n");
        out.write("                </div>\r\n");
        out.write("            </div>\r\n");
        out.write("        </div>\r\n");
        out.write("    </div>\r\n");
        out.write("</form>\r\n");
      }
      if (_jspx_th_security_005fauthorize_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsecurity_005fauthorize_0026_005furl.reuse(_jspx_th_security_005fauthorize_005f1);
      _jspx_th_security_005fauthorize_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_security_005fauthorize_005f1, _jsp_getInstanceManager(), _jspx_th_security_005fauthorize_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_security_005fauthorize_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  security:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_security_005fauthorize_005f2 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsecurity_005fauthorize_0026_005furl.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_security_005fauthorize_005f2_reused = false;
    try {
      _jspx_th_security_005fauthorize_005f2.setPageContext(_jspx_page_context);
      _jspx_th_security_005fauthorize_005f2.setParent(null);
      // /WEB-INF/jsp/manager/ProjectList.jsp(108,1) name = url type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_security_005fauthorize_005f2.setUrl((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("/company/${companyId}/project/projectList/projectDelete", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_security_005fauthorize_005f2 = _jspx_th_security_005fauthorize_005f2.doStartTag();
      if (_jspx_eval_security_005fauthorize_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\r\n");
        out.write("<form class=\"delForm2\">\r\n");
        out.write("    <div class=\"modal fade\" id=\"deleteproject2\" tabindex=\"-1\" aria-hidden=\"true\">\r\n");
        out.write("\r\n");
        out.write("        <div class=\"modal-dialog modal-dialog-centered modal-md modal-dialog-scrollable\">\r\n");
        out.write("            <div class=\"modal-content\">\r\n");
        out.write("                <div id=\"project-id\" class=\"form-label\"></div>\r\n");
        out.write("                <div class=\"modal-header\">\r\n");
        out.write("                    <h5 class=\"modal-title  fw-bold\" id=\"deleteprojectLabel\"> 프로젝트를 삭제하시겠습니까?</h5>\r\n");
        out.write("                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n");
        out.write("                </div>\r\n");
        out.write("                <div class=\"modal-body justify-content-center flex-column d-flex\">\r\n");
        out.write("                    <i class=\"icofont-ui-delete text-danger display-2 text-center mt-2\"></i>\r\n");
        out.write("                    <p class=\"mt-4 fs-5 text-center\">You can only delete this item Permanently</p>\r\n");
        out.write("                </div>\r\n");
        out.write("                <div class=\"modal-footer\">\r\n");
        out.write("                    <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\r\n");
        out.write("                    <button type=\"submit\" id=\"delBtn\" class=\"btn btn-danger color-fff\">Delete</button>\r\n");
        out.write("                </div>\r\n");
        out.write("            </div>\r\n");
        out.write("        </div>\r\n");
        out.write("    </div>\r\n");
        out.write("</form>\r\n");
      }
      if (_jspx_th_security_005fauthorize_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsecurity_005fauthorize_0026_005furl.reuse(_jspx_th_security_005fauthorize_005f2);
      _jspx_th_security_005fauthorize_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_security_005fauthorize_005f2, _jsp_getInstanceManager(), _jspx_th_security_005fauthorize_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_security_005fauthorize_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  security:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_security_005fauthorize_005f3 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsecurity_005fauthorize_0026_005furl.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_security_005fauthorize_005f3_reused = false;
    try {
      _jspx_th_security_005fauthorize_005f3.setPageContext(_jspx_page_context);
      _jspx_th_security_005fauthorize_005f3.setParent(null);
      // /WEB-INF/jsp/manager/ProjectList.jsp(134,0) name = url type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_security_005fauthorize_005f3.setUrl((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("/company/${companyId}/project/projectList/projectInsertMember", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_security_005fauthorize_005f3 = _jspx_th_security_005fauthorize_005f3.doStartTag();
      if (_jspx_eval_security_005fauthorize_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\r\n");
        out.write("<div class=\"modal fade\" id=\"addUser\" tabindex=\"-1\" aria-labelledby=\"addUserLabel\" aria-hidden=\"true\">\r\n");
        out.write("\r\n");
        out.write("    <div class=\"modal-dialog modal-dialog-centered modal-lg\">\r\n");
        out.write("        <div class=\"modal-content\">\r\n");
        out.write("            <div class=\"modal-header\">\r\n");
        out.write("                <h5 class=\"modal-title  fw-bold\" id=\"addUserLabel\">프로젝트 인원 관리</h5>\r\n");
        out.write("                <button type=\"button\" class=\"btn-close memberModalClose\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n");
        out.write("            </div>\r\n");
        out.write("            <div class=\"modal-body\">\r\n");
        out.write("\r\n");
        out.write("                <div class=\"inviteby_email\">\r\n");
        out.write("                    <div class=\"input-group mb-3\">\r\n");
        out.write("                        <!-- 검색창으로 활용 -->\r\n");
        out.write("                        <input type=\"text\" class=\"form-control searchName \" placeholder=\"이름\" id=\"searchName\" >\r\n");
        out.write("\r\n");
        out.write("\r\n");
        out.write("                    </div>\r\n");
        out.write("                </div>\r\n");
        out.write("                <!-- 멤버추가 리스트 확인 -->\r\n");
        out.write("                <div class=\"members_list\" data-coId=\"\">\r\n");
        out.write("                    <h6 class=\"fw-bold \">현재 참여중 인원</h6>\r\n");
        out.write("                    <ul class=\"list-unstyled list-group list-group-custom list-group-flush mb-0\">\r\n");
        out.write("                        <!-- 현재 참여중인 프로젝트멤버  -->\r\n");
        out.write("                        <li id=\"nowUserList\">\r\n");
        out.write("\r\n");
        out.write("                        </li>\r\n");
        out.write("                    </ul>\r\n");
        out.write("                    <h6 class=\"fw-bold \">인원추가 목록</h6>\r\n");
        out.write("                    <ul class=\"list-unstyled list-group list-group-custom list-group-flush mb-0\">\r\n");
        out.write("                        <!--반복문으로 해당회사 인원수만큼 li 개수가 나온다.-->\r\n");
        out.write("                        <li id=\"addUserList\">\r\n");
        out.write("\r\n");
        out.write("                        </li>\r\n");
        out.write("\r\n");
        out.write("                    </ul>\r\n");
        out.write("                </div>\r\n");
        out.write("            </div>\r\n");
        out.write("        </div>\r\n");
        out.write("    </div>\r\n");
        out.write("</div>\r\n");
      }
      if (_jspx_th_security_005fauthorize_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsecurity_005fauthorize_0026_005furl.reuse(_jspx_th_security_005fauthorize_005f3);
      _jspx_th_security_005fauthorize_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_security_005fauthorize_005f3, _jsp_getInstanceManager(), _jspx_th_security_005fauthorize_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_security_005fauthentication_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  security:authentication
    org.springframework.security.taglibs.authz.AuthenticationTag _jspx_th_security_005fauthentication_005f0 = (org.springframework.security.taglibs.authz.AuthenticationTag) _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fvar_005fproperty_005fnobody.get(org.springframework.security.taglibs.authz.AuthenticationTag.class);
    boolean _jspx_th_security_005fauthentication_005f0_reused = false;
    try {
      _jspx_th_security_005fauthentication_005f0.setPageContext(_jspx_page_context);
      _jspx_th_security_005fauthentication_005f0.setParent(null);
      // /WEB-INF/jsp/manager/ProjectList.jsp(251,0) name = property type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_security_005fauthentication_005f0.setProperty("principal");
      // /WEB-INF/jsp/manager/ProjectList.jsp(251,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_security_005fauthentication_005f0.setVar("principal");
      int _jspx_eval_security_005fauthentication_005f0 = _jspx_th_security_005fauthentication_005f0.doStartTag();
      if (_jspx_th_security_005fauthentication_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fvar_005fproperty_005fnobody.reuse(_jspx_th_security_005fauthentication_005f0);
      _jspx_th_security_005fauthentication_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_security_005fauthentication_005f0, _jsp_getInstanceManager(), _jspx_th_security_005fauthentication_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/jsp/manager/ProjectList.jsp(252,0) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/jsp/manager/ProjectList.jsp(252,0) '${principal.realUser.proAttendRole }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${principal.realUser.proAttendRole }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/jsp/manager/ProjectList.jsp(252,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("roleList");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("    ");
            if (_jspx_meth_c_005fset_005f0(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write('\r');
            out.write('\n');
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
      // /WEB-INF/jsp/manager/ProjectList.jsp(253,4) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("companyId");
      // /WEB-INF/jsp/manager/ProjectList.jsp(253,4) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/jsp/manager/ProjectList.jsp(253,4) '${roleList.companyId }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${roleList.companyId }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }
}
