/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2023-06-09 07:05:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class memberJoin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/E:/A_TeachingMaterial/05_JSP_Spring/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/ourmine/WEB-INF/lib/spring-webmvc-5.3.6.jar!/META-INF/spring-form.tld", Long.valueOf(1618279800000L));
    _jspx_dependants.put("/WEB-INF/lib/spring-webmvc-5.3.6.jar", Long.valueOf(1680657633229L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <title>회원가입</title>\r\n");
      out.write("    <link rel=\"icon\" href=\"#\" type=\"image/x-icon\"> <!-- Favicon-->\r\n");
      out.write("    <!-- project css file  -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/my-task.style.min.css\">\r\n");
      out.write("\t\r\n");
      out.write("    <script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/jquery-3.6.3.min.js\"></script>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/animations.css\">\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write("   #nextBtn{\r\n");
      out.write("      width: 380px;\r\n");
      out.write("   }\r\n");
      out.write("   .error {\r\n");
      out.write("      color: red;\r\n");
      out.write("   }\r\n");
      out.write("</style>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t$(document).ready(function(){\r\n");
      out.write("\t\t$(\"#btnRegist\").bind(\"click\", function(){\r\n");
      out.write("\t\t\t$(\"#frmRegist\").submit();\r\n");
      out.write("\t\t});\r\n");
      out.write("\t})\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<div id=\"mytask-layout\" class=\"theme-indigo\">\r\n");
      out.write("\r\n");
      out.write("    <!-- main body area -->\r\n");
      out.write("    <div class=\"main p-2 py-3 p-xl-5\">\r\n");
      out.write("\r\n");
      out.write("        <!-- Body: Body -->\r\n");
      out.write("        <div class=\"body d-flex p-0 p-xl-5\">\r\n");
      out.write("            <div class=\"container-xxl\">\r\n");
      out.write("\r\n");
      out.write("                 <div class=\"row g-0\">\r\n");
      out.write("                    <div class=\"col-lg-6 d-none d-lg-flex justify-content-center align-items-center rounded-lg auth-h100 fadeIn\">\r\n");
      out.write("                        <div  style=\"max-width: 50rem;\">\r\n");
      out.write("                            <div class=\"text-center mb-5\">\r\n");
      out.write("                                <a href=\"/ourmine/homepage\">\r\n");
      out.write("\t                                <img width=\"200\" height=\"200\" alt=\"OURmine\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/lg/마스코트_투명.png\"> \r\n");
      out.write("                                </a> \r\n");
      out.write("                            </div> \r\n");
      out.write("                            <div class=\"mb-5\">\r\n");
      out.write("                                <h2 class=\"color-900 text-center fw-bold\">OURmine에 오신 걸 환영합니다!</h2>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <!-- Image block -->\r\n");
      out.write("                            <div class=\"\">\r\n");
      out.write("                               <img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/로그인2.png\" alt=\"login-img\" style=\"width:700px; \">\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("                    <div class=\"col-lg-6 d-flex justify-content-center align-items-center border-0 rounded-lg auth-h100\">\r\n");
      out.write("                        <div class=\"w-100 p-3 p-md-5 card border-0 bg-dark text-light\" style=\"max-width: 32rem;\">\r\n");
      out.write("                            <!-- Form -->\r\n");
      out.write("                            <form id=\"frmRegist\" name=\"frmRegist\" action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/member/memberJoin\" method=\"post\" class=\"row g-1 p-3 p-md-4\" onsubmit=\"handleSubmit(event)\">\r\n");
      out.write("                                <div class=\"col-12 text-center mb-1 mb-lg-5\">\r\n");
      out.write("                                    <h1>회원가입</h1>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"col-12\">\r\n");
      out.write("                                    <div class=\"mb-2\">\r\n");
      out.write("                                    \t<div class=\"d-flex justify-content-between\">\r\n");
      out.write("\t                                        <label class=\"form-label\">이메일</label>\r\n");
      out.write("\t                                        <button type=\"button\" class=\"btn btn-sm btn-block\" style=\"color:gray;\" alt=\"autocomplete\" id=\"autocomplete\">자동완성</button>\r\n");
      out.write("                                    \t</div>\r\n");
      out.write("                                        <input name=\"memberEmail\" type=\"email\" class=\"form-control form-control-lg\" placeholder=\"name@example.com\" onchange=\"handleChange(event)\"/>\r\n");
      out.write("                                        <span id=\"check\"></span>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"col-12\">\r\n");
      out.write("                                    <div class=\"mb-2\">\r\n");
      out.write("                                        <label class=\"form-label\">이름</label>\r\n");
      out.write("                                        <input name=\"memberName\" class=\"form-control form-control-lg\" placeholder=\"이름\" onchange=\"handleChange(event)\"/>\r\n");
      out.write("                                    \t<span id=\"memberName\"></span>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                  <div class=\"col-12\">\r\n");
      out.write("                                    <div class=\"mb-2\">\r\n");
      out.write("                                        <label class=\"form-label\">전화번호</label>\r\n");
      out.write("                                        <input name=\"memberTel\" class=\"form-control form-control-lg\" placeholder=\"010-1111-1111\" onchange=\"handleChange(event)\"/>\r\n");
      out.write("                                    \t<span id=\"memberTel\"></span>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                </div>\r\n");
      out.write("\r\n");
      out.write("                                <div class=\"col-12\">\r\n");
      out.write("                                    <div class=\"mb-2\">\r\n");
      out.write("                                        <label class=\"form-label\">비밀번호</label>\r\n");
      out.write("                                        <input name=\"memberPassword\"  type=\"password\" class=\"form-control form-control-lg\" placeholder=\"비밀번호(8~20자 영문,숫자,특수문자 조합)\" onchange=\"handleChange(event)\"/>\r\n");
      out.write("                                        <span id=\"pass\"></span>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"col-12\">\r\n");
      out.write("                                    <div class=\"mb-2\">\r\n");
      out.write("                                        <label class=\"form-label\">비밀번호 확인</label>\r\n");
      out.write("                                        <input type=\"password\" name=\"memberPasswordResult\" class=\"form-control form-control-lg\" placeholder=\"비밀번호 재입력\" onchange=\"handleChange(event)\"/>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"col-12\">\r\n");
      out.write("                                    <div class=\"form-check\">\r\n");
      out.write("                                        <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckDefault\">\r\n");
      out.write("                                        <label class=\"form-check-label\" for=\"flexCheckDefault\">\r\n");
      out.write("                                            <a href=\"#\" title=\"Terms and Conditions\" class=\"text-secondary\">서비스 이용약관, 개인정보 처리방침</a>을 확인하였고, 이에 동의합니다.\r\n");
      out.write("                                        </label>\r\n");
      out.write("                                        <span id=\"terms\"></span>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"col-12 text-center mt-4\">\r\n");
      out.write("                                    <button type=\"button\" class=\"btn btn-lg btn-block btn-light lift text-uppercase\" alt=\"SIGNUP\" id=\"btnRegist\">회원가입</button>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"col-12 text-center mt-4\">\r\n");
      out.write("                                    <span class=\"text-muted\"> 이미 가입 하셨나요? <a href=\"/ourmine/login\" class=\"text-secondary\"> 로그인 하러가기 </a></span>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </form>\r\n");
      out.write("                            <!-- End Form -->\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div> <!-- End Row -->\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("    <script>\r\n");
      out.write("    let regex = new RegExp(\"([!#-'*+/-9=?A-Z^-~-]+(\\.[!#-'*+/-9=?A-Z^-~-]+)*|\\\"\\(\\[\\]!#-[^-~ \\t]|(\\\\[\\t -~]))+\\\")@([!#-'*+/-9=?A-Z^-~-]+(\\.[!#-'*+/-9=?A-Z^-~-]+)*|\\[[\\t -Z^-~]*])\"); // 이메일 정규식\r\n");
      out.write("    let reg = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/; // 비밀번호 정규식\r\n");
      out.write("    let regPone = /^01([0|1|6|7|8|9]?)-?([0-9]{3,4})-?([0-9]{4})$/; // 전화번호 정규식\r\n");
      out.write("    let memberName  = document.querySelector(\"#memberName\")\r\n");
      out.write("    let memberTel  = document.querySelector(\"#memberTel\")\r\n");
      out.write("    let check = document.querySelector(\"#check\")\r\n");
      out.write("  \tlet pass =  document.querySelector(\"#pass\")\r\n");
      out.write("    let isTel = true;\r\n");
      out.write("    let isEmail = true;\r\n");
      out.write("    let ismemName = true;\r\n");
      out.write("  \tlet isPassword = true;\r\n");
      out.write("    let isFormCheckInput = false;\r\n");
      out.write("    let formCheckInput = document.querySelector('.form-check-input');\r\n");
      out.write("    let terms = document.querySelector('#terms');\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    formCheckInput.addEventListener('click', () => isFormCheckInput = !isFormCheckInput)\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("     const member = {\r\n");
      out.write("    \t\t memberName : '',\r\n");
      out.write("    \t\t memberEmail : '',\r\n");
      out.write("    \t\t memberTel : '',\r\n");
      out.write("    \t\t memberPassword : '',\r\n");
      out.write("    \t\t memberPasswordResult : '',\r\n");
      out.write("     }\r\n");
      out.write("     const handleChange = (e) => {\r\n");
      out.write("    \t const {name,value} = e.target;\r\n");
      out.write("    \t  console.log(name,value)\r\n");
      out.write("    \t  add(name,value);\r\n");
      out.write("    \t  handlePasscheck();\r\n");
      out.write("    \t  handlePhoeCheck();\r\n");
      out.write("    \t  handleNameCheck();\r\n");
      out.write("    \t  handleCheckChange();\r\n");
      out.write("\r\n");
      out.write("     }\r\n");
      out.write("     const add = (name,value) => {\r\n");
      out.write("  \t \t member[name] = value;\r\n");
      out.write("  \t \t console.log(member);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    const handlePhoeCheck = () => {\r\n");
      out.write("    \tif(member.memberTel === ''){\r\n");
      out.write("    \t\tmemberTel.innerHTML = '';\r\n");
      out.write("    \t\tisTel = false;\r\n");
      out.write("    \t\treturn false;\r\n");
      out.write("    \t}\r\n");
      out.write("    \tif(!regPone.test(member.memberTel)){\r\n");
      out.write("    \t\tmemberTel.innerHTML = '';\r\n");
      out.write("    \t\tmemberTel.innerHTML = '올바른 전화번호 형식이 아닙니다.';\r\n");
      out.write("    \t\tmemberTel.style.color = 'red'\r\n");
      out.write("    \t\tisTel = false;\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("    \t}else {\r\n");
      out.write("    \t\tmemberTel.innerHTML = '';\r\n");
      out.write("    \t\tmemberTel.innerHTML = '사용가능한 전화번호 입니다';\r\n");
      out.write("    \t\tmemberTel.style.color = 'green';\r\n");
      out.write("    \t\tisTel = true;\r\n");
      out.write("    \t}\r\n");
      out.write("    }\r\n");
      out.write("    const handleNameCheck = () => {\r\n");
      out.write("    \tif(member.memberName === ''){\r\n");
      out.write("    \t\tmemberName.innerHTML = '';\r\n");
      out.write("    \t\tmemberName.innerHTML = '이름을 입력해주세요';\r\n");
      out.write("    \t\tismemName = false;\r\n");
      out.write("    \t\treturn false;\r\n");
      out.write("    \t}else {\r\n");
      out.write("    \t\tmemberName.innerHTML = '';\r\n");
      out.write("    \t\tismemName = true;\r\n");
      out.write("    \t}\r\n");
      out.write("\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("     const handleCheckChange = () => {\r\n");
      out.write("  //  \t e.preventDefault();\r\n");
      out.write("    \t fetch('/ourmine/member/member/json',{\r\n");
      out.write("     \t\tmethod : 'POST',\r\n");
      out.write("     \t\t headers: {\r\n");
      out.write("     \t\t\t    'Content-Type': 'application/json',\r\n");
      out.write("\r\n");
      out.write("     \t\t\t  },\r\n");
      out.write("     \t\t body: JSON.stringify(member),\r\n");
      out.write("     \t })\r\n");
      out.write("     \t.then((response) => response.json())\r\n");
      out.write("     \t.then((data) => {\r\n");
      out.write("     \t\t\tif(member.memberEmail === ''){\r\n");
      out.write("     \t\t\t\tcheck.innerHTML = '';\r\n");
      out.write("     \t\t\t\tisEmail = false;\r\n");
      out.write("     \t\t\t\treturn false;\r\n");
      out.write("     \t\t\t}\r\n");
      out.write("     \t\t\tif( !regex.test(member.memberEmail)){\r\n");
      out.write("     \t\t\t\tcheck.innerHTML = '';\r\n");
      out.write("     \t\t\t\tcheck.innerHTML = '올바른 이메일 형식이 아닙니다.';\r\n");
      out.write("     \t\t\t\tcheck.style.color = 'red'\r\n");
      out.write("     \t\t\t\tisEmail = false;\r\n");
      out.write("     \t\t\t\treturn false;\r\n");
      out.write("     \t\t\t}else{\r\n");
      out.write("     \t\t\t\tif(data > 0){\r\n");
      out.write("     \t\t\t\tcheck.innerHTML = '';\r\n");
      out.write("     \t     \t\t check.innerHTML = '이미 가입된 이메일입니다.';\r\n");
      out.write("     \t     \t\tcheck.style.color = 'red';\r\n");
      out.write("     \t     \t\tisEmail = false;\r\n");
      out.write("     \t     \t\treturn false;\r\n");
      out.write("     \t     \t\t }else{\r\n");
      out.write("     \t     \t\tcheck.innerHTML = '';\r\n");
      out.write("     \t     \t\tcheck.innerHTML = '사용 가능한 이메일입니다.';\r\n");
      out.write("     \t     \t\tcheck.style.color = 'green';\r\n");
      out.write("     \t     \t\tisEmail = true;\r\n");
      out.write("     \t     \t\treturn false;\r\n");
      out.write("     \t     \t  }\r\n");
      out.write("     \t\t\t}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("     \t\t })\r\n");
      out.write("\r\n");
      out.write("     }\r\n");
      out.write("   const handlePasscheck = () => { // 비밀번호 정규식 체크\r\n");
      out.write("    \tlet password = member.memberPassword;\r\n");
      out.write("   \t\tconsole.log(password);\r\n");
      out.write("    \t if(member.memberPassword === ''){\r\n");
      out.write("    \t\t pass.innerHTML = '';\r\n");
      out.write("    \t\t isPassword = false;\r\n");
      out.write("    \t\t return false;\r\n");
      out.write("    \t }\r\n");
      out.write("    \tif( !reg.test(password)){\r\n");
      out.write("    \t\t pass.innerHTML = '올바른 비밀번호 형식이 아닙니다.';\r\n");
      out.write("\t\t\t pass.style.color = 'red';\r\n");
      out.write("\t\t\t isPassword = false;\r\n");
      out.write("\t\t\t return false;\r\n");
      out.write("    \t}else{\r\n");
      out.write("    \t\t pass.innerHTML = '사용 가능한 비밀번호 입니다.';\r\n");
      out.write("\t\t\t pass.style.color = 'green';\r\n");
      out.write("\t\t\t isPassword = true;\r\n");
      out.write("\t\t\t return false;\r\n");
      out.write("    \t}\r\n");
      out.write("   }\r\n");
      out.write("\r\n");
      out.write("     const handleSubmit = (e) => {\r\n");
      out.write("\r\n");
      out.write("    \t e.preventDefault();\r\n");
      out.write("\r\n");
      out.write("\t\t if( ! isFormCheckInput ){\r\n");
      out.write("\t\t\t terms.innerHTML = '';\r\n");
      out.write("\t\t\t terms.innerHTML = '약관을 체크해 주세요';\r\n");
      out.write("\t\t\t terms.style.color = 'red';\r\n");
      out.write("         }else{\r\n");
      out.write("\t\t\t terms.innerHTML = '';\r\n");
      out.write("         }\r\n");
      out.write("\r\n");
      out.write("    \t if(member.memberEmail === ''){\r\n");
      out.write("    \t\t check.innerHTML = '';\r\n");
      out.write("\t\t\tcheck.innerHTML = '이메일을 입력해주세요';\r\n");
      out.write("\t\t\tcheck.style.color = 'red';\r\n");
      out.write("\t\t\tisEmail = false;\r\n");
      out.write("    \t }\r\n");
      out.write("    \t if(member.memberName === ''){\r\n");
      out.write("    \t\t memberName.innerHTML = '';\r\n");
      out.write("    \t\t memberName.innerHTML = '이름을 입력해주세요';\r\n");
      out.write("    \t\t memberName.style.color = 'red';\r\n");
      out.write("    \t\t ismemName = false;\r\n");
      out.write("    \t }\r\n");
      out.write("    \t if(member.memberTel === ''){\r\n");
      out.write("    \t\t memberTel.innerHTML = '';\r\n");
      out.write("    \t\t memberTel.innerHTML = '전화번호를 입력해주세요';\r\n");
      out.write("    \t\t memberTel.style.color = 'red';\r\n");
      out.write("    \t\t isTel = false;\r\n");
      out.write("    \t }\r\n");
      out.write("    \t if(member.memberPassword === ''){\r\n");
      out.write("    \t\t pass.innerHTML = '';\r\n");
      out.write("    \t\t pass.innerHTML = '';\r\n");
      out.write("    \t\t pass.innerHTML = '비밀번호를 입력해주세요';\r\n");
      out.write("    \t\t pass.style.color = 'red'\r\n");
      out.write("    \t     isPassword = false;\r\n");
      out.write("\r\n");
      out.write("    \t }else{\r\n");
      out.write("\r\n");
      out.write("    \t\t if(member.memberPassword != member.memberPasswordResult){\r\n");
      out.write("        \t\t pass.innerHTML = '';\r\n");
      out.write("        \t\t pass.innerHTML = '비밀번호 가 같지 않습니다.';\r\n");
      out.write("        \t\t pass.style.color = 'red';\r\n");
      out.write("        \t\t isPassword = false;\r\n");
      out.write("        \t }\r\n");
      out.write("    \t }\r\n");
      out.write("\r\n");
      out.write("    \t console.log(\"istel = \",isTel);\r\n");
      out.write("    \t console.log(\"isEmail = \",isEmail);\r\n");
      out.write("    \t console.log(\"ismemName = \",ismemName);\r\n");
      out.write("    \t console.log(\"isPassword = \",isPassword);\r\n");
      out.write("    \t console.log(\"isFormCheckInput = \",isFormCheckInput);\r\n");
      out.write("\r\n");
      out.write("    \t if(isTel && isEmail && ismemName && isPassword && isFormCheckInput) {\r\n");
      out.write("    \t fetch('/ourmine/member/memberJoin',{\r\n");
      out.write("    \t\tmethod : 'POST',\r\n");
      out.write("    \t\t headers: {\r\n");
      out.write("    \t\t\t    'Content-Type': 'application/json',\r\n");
      out.write("    \t\t\t    'accept': 'application/json',\r\n");
      out.write("    \t\t\t  },\r\n");
      out.write("    \t\t body: JSON.stringify(member),\r\n");
      out.write("    \t })\r\n");
      out.write("    \t\t .then((response) => response.json())\r\n");
      out.write("    \t\t .then((data) => {\r\n");
      out.write("    \t\t\t if(data > 0){\r\n");
      out.write("    \t\t\t\t  console.log('성공:', data);\r\n");
      out.write("    \t\t\t\t  location.href = '/ourmine/homepage';\r\n");
      out.write("    \t\t\t }\r\n");
      out.write("\r\n");
      out.write("    \t\t })\r\n");
      out.write("\r\n");
      out.write("    \t }\r\n");
      out.write("     }\r\n");
      out.write("\r\n");
      out.write("     </script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
