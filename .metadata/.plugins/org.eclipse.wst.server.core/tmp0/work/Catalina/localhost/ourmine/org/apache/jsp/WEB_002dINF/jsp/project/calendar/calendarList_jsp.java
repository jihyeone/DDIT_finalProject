/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2023-06-11 08:32:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.project.calendar;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class calendarList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("jar:file:/E:/A_TeachingMaterial/05_JSP_Spring/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/ourmine/WEB-INF/lib/spring-security-taglibs-5.7.8.jar!/META-INF/security.tld", Long.valueOf(1681713972000L));
    _jspx_dependants.put("/WEB-INF/lib/spring-security-taglibs-5.7.8.jar", Long.valueOf(1683020361417L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1679567181629L));
    _jspx_dependants.put("jar:file:/E:/A_TeachingMaterial/05_JSP_Spring/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/ourmine/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fvar_005fproperty_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fvar_005fproperty_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fvar_005fproperty_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <!-- plugin css file  -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/main.min.css\">\r\n");
      out.write("\t\r\n");
      out.write("    \r\n");
      out.write("    <!-- project css file  -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/my-task.style.min.css\">\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t .modal {\r\n");
      out.write("\t        position: fixed;\r\n");
      out.write("\t        width: 100%;\r\n");
      out.write("\t        /* fixed일 때는 height:100% 동작 */\r\n");
      out.write("\t        height: 100%;\r\n");
      out.write("\t        left: 0px;\r\n");
      out.write("\t        top: 0px;\r\n");
      out.write("\t        background-color: rgba(0, 0, 0, 0.274);\r\n");
      out.write("\t        /* 무조건 크겡! */\r\n");
      out.write("\t        z-index: 314;\r\n");
      out.write("\t        display: none;\r\n");
      out.write("\t    }\r\n");
      out.write("\r\n");
      out.write("\t    .detailModal {\r\n");
      out.write("\t        position: fixed;\r\n");
      out.write("\t        width: 100%;\r\n");
      out.write("\t        /* fixed일 때는 height:100% 동작 */\r\n");
      out.write("\t        height: 100%;\r\n");
      out.write("\t        left: 0px;\r\n");
      out.write("\t        top: 0px;\r\n");
      out.write("\t        background-color: rgba(0, 0, 0, 0.274);\r\n");
      out.write("\t        /* 무조건 크겡! */\r\n");
      out.write("\t        z-index: 315;\r\n");
      out.write("\t        display: none;\r\n");
      out.write("\t    }\r\n");
      out.write("\t    .modifyModal {\r\n");
      out.write("\t        position: fixed;\r\n");
      out.write("\t        width: 100%;\r\n");
      out.write("\t        /* fixed일 때는 height:100% 동작 */\r\n");
      out.write("\t        height: 100%;\r\n");
      out.write("\t        left: 0px;\r\n");
      out.write("\t        top: 0px;\r\n");
      out.write("\t        background-color: rgba(0, 0, 0, 0.274);\r\n");
      out.write("\t        /* 무조건 크겡! */\r\n");
      out.write("\t        z-index: 315;\r\n");
      out.write("\t        display: none;\r\n");
      out.write("\t    }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t    .modalCont {\r\n");
      out.write("\t        width: 400px;\r\n");
      out.write("\t        height: 270px;\r\n");
      out.write("\t        /* 수평 가운데 정렬 */\r\n");
      out.write("\t        margin-top: 15%;\r\n");
      out.write("\t        margin-left: 38%;\r\n");
      out.write("\t        padding-left: 20px;\r\n");
      out.write("\t        border-radius: 5%;\r\n");
      out.write("\t        background-color: rgb(255, 255, 255);\r\n");
      out.write("\t        color: rgb(9, 9, 8);\r\n");
      out.write("\t    }\r\n");
      out.write("\r\n");
      out.write("\t    .detailModalCont {\r\n");
      out.write("\t        width: 410px;\r\n");
      out.write("\t        height: 720px;\r\n");
      out.write("\t        /* 수평 가운데 정렬 */\r\n");
      out.write("\t        margin-top: 7%;\r\n");
      out.write("\t        margin-left: 38%;\r\n");
      out.write("\t        padding-left: 30px;\r\n");
      out.write("\t        border-radius: 5%;\r\n");
      out.write("\t        background-color: rgb(255, 255, 255);\r\n");
      out.write("\t        color: rgb(9, 9, 8);\r\n");
      out.write("\t    }\r\n");
      out.write("\t    .modifyModalCont {\r\n");
      out.write("\t        width: 410px;\r\n");
      out.write("\t        height: 740px;\r\n");
      out.write("\t        /* 수평 가운데 정렬 */\r\n");
      out.write("\t        margin-top: 7%;\r\n");
      out.write("\t        margin-left: 38%;\r\n");
      out.write("\t        padding-left: 30px;\r\n");
      out.write("\t        border-radius: 5%;\r\n");
      out.write("\t        background-color: rgb(255, 255, 255);\r\n");
      out.write("\t        color: rgb(9, 9, 8);\r\n");
      out.write("\t    }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t    .modalInput {\r\n");
      out.write("\t    \tpadding: 5px;\r\n");
      out.write("\t        width: 250px;\r\n");
      out.write("\t        height: 40px;\r\n");
      out.write("\t        font-size: 15px;\r\n");
      out.write("\t        border: 0;\r\n");
      out.write("\t        border-radius: 15px;\r\n");
      out.write("\t        outline: none;\r\n");
      out.write("\t        padding-left: 10px;\r\n");
      out.write("\t        background-color: rgb(233, 233, 233);\r\n");
      out.write("\t    }\r\n");
      out.write("\r\n");
      out.write("\t    .calendarCenter {\r\n");
      out.write("\t        margin: 0 auto;\r\n");
      out.write("\t    }\r\n");
      out.write("\r\n");
      out.write("\t    /* IE */\r\n");
      out.write("\t    select::-ms-expand {\r\n");
      out.write("\t        display: none;\r\n");
      out.write("\t    }\r\n");
      out.write("\r\n");
      out.write("\t    .select {\r\n");
      out.write("\t        width: 150px;\r\n");
      out.write("\t        height: 35px;\r\n");
      out.write("\t        background: url('https://freepikpsd.com/media/2019/10/down-arrow-icon-png-7-Transparent-Images.png') calc(100% - 5px) center no-repeat;\r\n");
      out.write("\t        background-size: 20px;\r\n");
      out.write("\t        padding: 5px 30px 5px 10px;\r\n");
      out.write("\t        border-radius: 4px;\r\n");
      out.write("\t        outline: 0 none;\r\n");
      out.write("\t    }\r\n");
      out.write("\r\n");
      out.write("\t    .select option {\r\n");
      out.write("\t        background: black;\r\n");
      out.write("\t        color: #fff;\r\n");
      out.write("\t        padding: 3px 0;\r\n");
      out.write("\t    }\r\n");
      out.write("\r\n");
      out.write("\t\t.fc-day-sun a {\r\n");
      out.write("\t\t  color: red;\r\n");
      out.write("\t\t  text-decoration: none;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t/* 토요일 날짜 파란색 */\r\n");
      out.write("\t\t.fc-day-sat a {\r\n");
      out.write("\t\t  color: blue;\r\n");
      out.write("\t\t  text-decoration: none;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("/* \t \t#calSaveBtn{\r\n");
      out.write("\t\t\tmargin-left: 210px;\r\n");
      out.write("\t\t} */\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\tspan{\r\n");
      out.write("\t\t\tdisplay: inline-block;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\ttextarea{\r\n");
      out.write("\t\t\twidth: 350px;\r\n");
      out.write("\t\t\t/* height: 150px; */\r\n");
      out.write("\t\t\tresize: none;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t.form-control{\r\n");
      out.write("\t\t\twidth: 350px;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t.form-select{\r\n");
      out.write("\t\t\twidth: 350px;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t#caButtonDivs{\r\n");
      out.write("\t\t\twidth: 100%;\r\n");
      out.write("\t\t\tmargin-left: 48%;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t.caButtonDiv{\r\n");
      out.write("\t\t\t display:inline-block \r\n");
      out.write("\t\t}\r\n");
      out.write("/* \t\t#closeBtn{\r\n");
      out.write("\t\t\tmargin-left: 100px;\r\n");
      out.write("\t\t} */\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("<!-- ============================== 시큐리티 ================================================ -->\r\n");
      if (_jspx_meth_security_005fauthentication_005f0(_jspx_page_context))
        return;
      out.write('\r');
      out.write('\n');
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("   \r\n");
      out.write("\r\n");
      out.write("<div id=\"mytask-layout\" class=\"theme-indigo\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <!-- Body: Body -->\r\n");
      out.write("        <div class=\"body d-flex py-lg-3 py-md-2\">\r\n");
      out.write("            <div class=\"container-xxl\">\r\n");
      out.write("                <div class=\"row align-items-center\">\r\n");
      out.write("                    <div class=\"border-0 mb-4\">\r\n");
      out.write("                       <div class=\"card\">\r\n");
      out.write("                       \t\t<h6><img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/color_red.jpg\">긴급 <img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/color_yellow.jpg\"> 높음 \r\n");
      out.write("                       \t\t<img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/color_navy.jpg\"> 보통 <img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/color_grey.jpg\"> 낮음</h6>\r\n");
      out.write("                            <!-- <h3 class=\"fw-bold mb-0\">달력</h3> -->\r\n");
      out.write("                            <!-- <div class=\"col-auto d-flex\">\r\n");
      out.write("                                <button type=\"button\" class=\"btn btn-dark \" data-bs-toggle=\"modal\" data-bs-target=\"#addevent\"><i class=\"icofont-plus-circle me-2 fs-6\"></i>Add Event</button>\r\n");
      out.write("                            </div> -->\r\n");
      out.write("                        </div> \r\n");
      out.write("                    </div>\r\n");
      out.write("                </div> <!-- Row end  -->\r\n");
      out.write("                <div class=\"row clearfix g-3\">\r\n");
      out.write("                    <div class=\"col-lg-12 col-md-12 \">\r\n");
      out.write("                       <!-- card: Calendar -->\r\n");
      out.write("                        <div class=\"card\">\r\n");
      out.write("                            <div class=\"card-body\" id='calendar'></div>\r\n");
      out.write("                            <script>\r\n");
      out.write("\t                            let calendar = null;\r\n");
      out.write("\r\n");
      out.write("\t                            $(function () {\r\n");
      out.write("\t                                const Calendar = FullCalendar.Calendar; // 캘린더 api 생성하기\r\n");
      out.write("\r\n");
      out.write("\t                                const calendarEl = document.getElementById('calendar'); // body에 캘린더 넣을 부분 태그선택\r\n");
      out.write("\r\n");
      out.write("\t                                calendar = new Calendar(calendarEl, {\r\n");
      out.write("\t                                \theight: 900,\r\n");
      out.write("\t                                    selectable: true,\r\n");
      out.write("\t                                    selectHelper: true,\r\n");
      out.write("\t                                    select: function (res) {\r\n");
      out.write("\r\n");
      out.write("\t                                        console.log(\"select했을때 머가오는지 체킁\",res);\r\n");
      out.write("\t                                        /* modal.show() */\r\n");
      out.write("\t                                    },\r\n");
      out.write("\t                                    headerToolbar: {\r\n");
      out.write("\t                                        left: 'prev,next today',\r\n");
      out.write("\t                                        center: 'title',\r\n");
      out.write("\t                                        right: 'dayGridMonth,timeGridWeek,timeGridDay'\r\n");
      out.write("\t                                    },\r\n");
      out.write("\t                                    events:{\r\n");
      out.write("\t                                    \turl : \"/ourmine/company/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${companyId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/project/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${projectId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/calendar/calendar_FC\",\r\n");
      out.write("\t                                    \tmethod : \"get\",\r\n");
      out.write("\t                                        extraParams: {\r\n");
      out.write("\t                                        \t/* companyId:2,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tprojectId:4 */\r\n");
      out.write("\t                                        }\r\n");
      out.write("\t                                    \t,timeZone : 'local'\r\n");
      out.write("\t                                    \t,success: function(data){\r\n");
      out.write("\t                                        \tconsole.log(\"@@@@@@\",data);\r\n");
      out.write("\t                                        \t\r\n");
      out.write("\t                                    \t}\r\n");
      out.write("\t                                    },\r\n");
      out.write("\t                                  \r\n");
      out.write("\t                                    editable: true, // 드래그\r\n");
      out.write("\r\n");
      out.write("\t                                    locale: 'ko', // 한국어\r\n");
      out.write("\t                                    /* timeZone: 'local', */\r\n");
      out.write("\r\n");
      out.write("\t                                   eventDrop: function (info) {    // 드래그해서 위치 지정하면 날짜 수정\r\n");
      out.write("\t                                \t    var x = info.event.start\r\n");
      out.write("\t                                        var y = info.event.end\r\n");
      out.write("\t                                        \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tlet offset = x.getTimezoneOffset() * 60000; //ms단위라 60000곱해줌\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tlet offsetE = y.getTimezoneOffset() * 60000; //ms단위라 60000곱해줌\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tlet dateOffset = new Date(x.getTime() - offset);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tlet dateOffsetE = new Date(y.getTime() - offsetE);\r\n");
      out.write("\t                                \t   \r\n");
      out.write("\t                                        let data = {\r\n");
      out.write("\t                                        \t\tprojectWorkId:info.event.extendedProps.projectWorkId,\r\n");
      out.write("\t                                        \t\tprojectWorkStartDate:dateOffset.toISOString().substr(0, 10),\r\n");
      out.write("\t                                        \t\tprojectWorkEndDate:y.toISOString().substr(0, 10)\r\n");
      out.write("\t                                        \t};\r\n");
      out.write("\t                                        console.log(\"data@@@@@@@@\",data);\r\n");
      out.write("\r\n");
      out.write("\t                                        $.ajax({\r\n");
      out.write("\t                                            url: \"/ourmine/company/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${companyId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/project/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${projectId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/calendar/calUpdateDrag\",\r\n");
      out.write("\t                                            type: \"post\",\r\n");
      out.write("\t                                            data: JSON.stringify(data),\r\n");
      out.write("\t                                            contentType: \"application/json;charset=utf-8\",\r\n");
      out.write("\t                                            dataType: 'json',\r\n");
      out.write("\t                                            beforeSend : function(xhr){  // 헤더에 값 세팅, 항상 요따구로 씀\r\n");
      out.write("\t                                                xhr.setRequestHeader(header, token);\r\n");
      out.write("\t                                            },\r\n");
      out.write("\t                                            success: function (resp) {\r\n");
      out.write("\t                                            \tSwal.fire({\r\n");
      out.write("\t                                \t\t\t\t\ticon: 'success',\r\n");
      out.write("\t                                \t\t\t\t\ttitle:'일정 수정 성공',\r\n");
      out.write("\t                                \t\t\t\t\tshowConfirmButton: false,\r\n");
      out.write("\t                                \t\t\t\t\ttimer: 800\r\n");
      out.write("\t                                \t\t\t  })\r\n");
      out.write("\t                                            },\r\n");
      out.write("\t                                            error: function (request, status, error) {\r\n");
      out.write("\t                                \t            alert(\"일정 수정에 실패하였습니다.\")\r\n");
      out.write("\t                                \t            console.log(\"상태코드:\" + request.status + \"\\n\" + \"에러내용:\" + request.responseText + \"\\n\" + \"error:\" + error);\r\n");
      out.write("\t                                            }\r\n");
      out.write("\t                                        })\r\n");
      out.write("\t                                    },   \r\n");
      out.write("\t                                    // 일정 클릭하면 상세보기 모달로 보여주기\r\n");
      out.write("\t                                    eventClick: function caClick(info) {\r\n");
      out.write("\t                                    \t\r\n");
      out.write("\t                                    \t\r\n");
      out.write("\t                                        console.log(info.event.title)\r\n");
      out.write("\t                                        console.log(info.event.extendedProps.projectWorkId)\r\n");
      out.write("\t                                        let projectWorkId = info.event.extendedProps.projectWorkId;\r\n");
      out.write("\r\n");
      out.write("\t                                        var x = info.event.start\r\n");
      out.write("\t                                        var y = info.event.end\r\n");
      out.write("\t                                        \r\n");
      out.write("\t                                        console.log(\"y\",y);\r\n");
      out.write("\t                                        \r\n");
      out.write(" \t\t\t\t\t\t\t\t\t\t\tlet offset = x.getTimezoneOffset() * 60000; //ms단위라 60000곱해줌\r\n");
      out.write(" \t\t\t\t\t\t\t\t\t\t\tlet offsetE = y.getTimezoneOffset() * 60000; //ms단위라 60000곱해줌\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tlet dateOffset = new Date(x.getTime() - offset);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tlet dateOffsetE = new Date(y.getTime() - offsetE);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"dateOffsetE\",dateOffsetE);\r\n");
      out.write("\r\n");
      out.write("\t                                        $(\"#projectWorkTitle\").html(info.event.title);\r\n");
      out.write("\t                                        $(\"#projectId\").val(info.event.extendedProps.projectId);\r\n");
      out.write("\t                                        $(\"#companyId\").val(info.event.extendedProps.companyId);\r\n");
      out.write("\t                                        $(\"#projectWorkStatusId\").val(info.event.extendedProps.projectWorkStatusId);\r\n");
      out.write("\t                                        $(\"#projectWorkStatus\").val(info.event.extendedProps.projectWorkStatus);\r\n");
      out.write("\t                                        $(\"#writer\").val(info.event.extendedProps.writer);\r\n");
      out.write("\t                                        $(\"#start\").val(dateOffset.toISOString().substr(0, 10));\r\n");
      out.write("\t                                        $(\"#end\").val(y.toISOString().substr(0, 10));\r\n");
      out.write("\t                                        $(\"#projectPriorityId\").val(info.event.extendedProps.projectPriorityId);\r\n");
      out.write("\t                                        $(\"#projectPriorityName\").val(info.event.extendedProps.projectPriorityName);\r\n");
      out.write("\t                                        $(\"#projectWorkContent\").val(info.event.extendedProps.projectWorkContent);\r\n");
      out.write("\t                                        $(\"#projectWorkId\").val(info.event.extendedProps.projectWorkId);\r\n");
      out.write("\t                                        $(\"#calPicId\").val(info.event.extendedProps.picId);\r\n");
      out.write("\t                                        \r\n");
      out.write("\t                                        const loginMemberId = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${memberId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\r\n");
      out.write("\t                                        console.log(\"loginMemberId\", loginMemberId)\r\n");
      out.write("\r\n");
      out.write("\t                                        const projectRoleId = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${projectRoleId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\r\n");
      out.write("\t                                        console.log(\"projectRoleId\",projectRoleId);\r\n");
      out.write("\r\n");
      out.write("\t                                        const caPicId = info.event.extendedProps.picId;\r\n");
      out.write("\t                                        console.log(\"caPicId\",caPicId);\r\n");
      out.write("\t                                        \r\n");
      out.write("\t                                        if (caPicId == loginMemberId) {\r\n");
      out.write("\t                                        \tdocument.querySelector(\"#caModifyBtn\").style.display = \"block\";\r\n");
      out.write("\t                                        \tdocument.querySelector(\"#calendarDeleteBtn\").style.display = \"block\";\r\n");
      out.write("\t                                        }else if(projectRoleId == 1){\r\n");
      out.write("\t                                        \tdocument.querySelector(\"#caModifyBtn\").style.display = \"block\";\r\n");
      out.write("\t                                        \tdocument.querySelector(\"#calendarDeleteBtn\").style.display = \"block\";\r\n");
      out.write("\t                                        }\r\n");
      out.write("\t                                        \r\n");
      out.write("\t                                        \r\n");
      out.write("\t                                        \r\n");
      out.write("\t                                        detailModal.show();\r\n");
      out.write("\t                                        \r\n");
      out.write("\t                                        \r\n");
      out.write("\r\n");
      out.write("\t                                        $(\"#calendarDeleteBtn\").on(\"click\",function(){\r\n");
      out.write("\t                                        \tcalendarDelete(projectWorkId)\r\n");
      out.write("\t                                        })\r\n");
      out.write("\t                                    }\r\n");
      out.write("\r\n");
      out.write("\t                                });\r\n");
      out.write("\t                                calendar.render();\r\n");
      out.write("\t                            });\r\n");
      out.write("\r\n");
      out.write("                            </script>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div><!-- Row End -->\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"myCalendarbody\">\r\n");
      out.write("\r\n");
      out.write("            <!-- 날짜를 클릭하면 나오는 모달 -->\r\n");
      out.write("            <!-- <div id=\"modal\" class=\"modal\">\r\n");
      out.write("                <div id=\"modalCont\" class=\"modalCont\">\r\n");
      out.write("                    <br> <br>\r\n");
      out.write("                    담당자 : <input id=\"modalInput\" class=\"modalInput\" type=\"text\" value=\"\" placeholder=\"예약담당자\"><br> <br>\r\n");
      out.write("                    환자번호 :\r\n");
      out.write("                    <select id=\"patientName\" class=\"select\">\r\n");
      out.write("                        <option disabled selected>환자이름 🚑</option>\r\n");
      out.write("                        <option value=\"apple\">apple</option>\r\n");
      out.write("                        <option value=\"orange\">orange</option>\r\n");
      out.write("                        <option value=\"grape\">grape</option>\r\n");
      out.write("                        <option value=\"melon\">melon</option>\r\n");
      out.write("                    </select><br> <br>\r\n");
      out.write("                    침상번호 : <input id=\"modalInput\" class=\"modalInput\" type=\"text\" placeholder=\"침상번호\">\r\n");
      out.write("                    <br> <br>\r\n");
      out.write("                    <button id=\"modalSubmit\" class=\"modalSubmit\" onclick=\"allSave()\">등록하기</button>\r\n");
      out.write("                    <button id=\"modalButton\" onclick=\"modalClose()\">X</button>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div> -->\r\n");
      out.write("\r\n");
      out.write("            <!-- 일정을 클릭하면 나오는 모달 -->\r\n");
      out.write("            <div id=\"detailModal\" class=\"detailModal\">\r\n");
      out.write("                <div id=\"detailModalCont\"  class=\"detailModalCont\">\r\n");
      out.write("                    <br>\r\n");
      out.write("                    <h5 id=\"projectWorkTitle\" name=\"projectWorkTitle\" class=\"mb-0 fw-bold \"></h5>\r\n");
      out.write("                    <hr>\r\n");
      out.write("                    \t<input id=\"projectId\" name=\"projectId\" class=\"modalInput\"  type=\"hidden\">\r\n");
      out.write("                    \t<input id=\"companyId\" name=\"companyId\" class=\"modalInput\"  type=\"hidden\">\r\n");
      out.write("                    \t<input id=\"projectWorkId\" name=\"projectWorkId\" class=\"modalInput\"  type=\"hidden\">\r\n");
      out.write("                    \t<input id=\"projectWorkStatusId\" name=\"projectWorkStatusId\" class=\"modalInput\" type=\"hidden\">\r\n");
      out.write("                    \t<input id=\"calPicId\" name=\"picId\" class=\"modalInput\"  type=\"hidden\" >\r\n");
      out.write("\r\n");
      out.write("\t                    <i class=\"icofont-clock-time\"></i> <span> 상  태 : </span>\r\n");
      out.write("\t                    <input id=\"projectWorkStatus\" name=\"projectWorkStatus\" class=\"form-control\" type=\"text\" readonly=\"readonly\">\r\n");
      out.write("\t                    <br>\r\n");
      out.write("\t                    <i class=\"icofont-user\"></i> <span> 담당자  : </span>\r\n");
      out.write("\t                    <input id=\"writer\" class=\"form-control\" name=\"projectWorkPic\" type=\"text\" readonly=\"readonly\">\r\n");
      out.write("\t                    <br>\r\n");
      out.write("\t                    <i class=\"icofont-calendar\"></i> <lable> 시작날짜 : </lable>\r\n");
      out.write("\t                    <input id=\"start\" class=\"form-control\" name=\"projectWorkStartDate\" type=\"text\" readonly=\"readonly\">\r\n");
      out.write("\t                    <br>\r\n");
      out.write("\t                    <i class=\"icofont-calendar\"></i> <lable> 종료날짜 : </lable>\r\n");
      out.write("\t                    <input id=\"end\" name=\"projectWorkEndDate\" class=\"form-control\" type=\"text\" readonly=\"readonly\">\r\n");
      out.write("\t                    <br>\r\n");
      out.write("\t                    <!-- 우선순위 id -->\r\n");
      out.write("\t                    <input id=\"projectPriorityId\" name=\"projectPriorityId\" class=\"modalInput\" type=\"hidden\">\r\n");
      out.write("\r\n");
      out.write("\t                    <i class=\"icofont-flag\"></i> <lable> 우선순위 : </lable>\r\n");
      out.write("\t                    <input id=\"projectPriorityName\" name=\"projectPriorityName\" class=\"form-control\" type=\"text\" readonly=\"readonly\">\r\n");
      out.write("\t                    <br>\r\n");
      out.write("\t                    <i class=\"icofont-page\"></i> <label for=\"exampleFormControlTextarea786\" class=\"form-label\">내용</label>\r\n");
      out.write("\t                    <textarea id=\"projectWorkContent\" name=\"projectWorkContent\" type=\"text\" class=\"form-control\" readonly=\"readonly\" rows=\"3\" ></textarea>\r\n");
      out.write("\t                    <br>\r\n");
      out.write("\t                    <div class=\"modal-footer\">\r\n");
      out.write("\t\t                    <div class=\"caButtonDiv\"><button type=\"button\" id=\"caModifyBtn\" class=\"btn btn-primary\" onclick=\"openModify()\" style=\"display:none;\" >수정</button></div>\r\n");
      out.write("\t\t                    <div class=\"caButtonDiv\"><button type=\"button\" id=\"calendarDeleteBtn\" class=\"btn btn-primary\" style=\"display:none;\" >삭제</button></div>\r\n");
      out.write("\t\t                    <div class=\"caButtonDiv\"><button id=\"closeBtn\" onclick=\"detailModalClose()\" class=\"btn btn-secondary\">닫기</button></div>\r\n");
      out.write("\t                    </div>\r\n");
      out.write("\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- 일정 수정 모달 -->\r\n");
      out.write("            <div id=\"modifyModal\" class=\"modifyModal\">\r\n");
      out.write("                <div id=\"modifyModalCont\" class=\"modifyModalCont\">\r\n");
      out.write("\t                <br>\r\n");
      out.write("                \t<form name=\"modifyForm\" id=\"modifyForm\" novalidate>\r\n");
      out.write("                \t\t<input id=\"calMoProjectId\" name=\"projectId\" class=\"modalInput\"  type=\"hidden\">\r\n");
      out.write("                \t\t<input id=\"projectWorkId1\" name=\"projectWorkId\" class=\"modalInput\" type=\"hidden\" >\r\n");
      out.write("                \t\t<input id=\"companyId1\" name=\"companyId\" class=\"modalInput\" type=\"hidden\" >\r\n");
      out.write("\r\n");
      out.write("\t                    <input id=\"projectWorkTitle1\" name=\"projectWorkTitle\" class=\"form-control\" type=\"text\" >\r\n");
      out.write("\t                    <hr>\r\n");
      out.write("\t\t                    <i class=\"icofont-clock-time\"></i> <span> 상  태 </span>\r\n");
      out.write("\t\t                    <select id=\"projectWorkStatusId1\" name=\"projectWorkStatusId\" class=\"form-select\">\r\n");
      out.write("\t\t                        <option value=\"1\">요청</option>\r\n");
      out.write("\t\t                        <option value=\"2\">진행</option>\r\n");
      out.write("\t\t                        <option value=\"3\">피드백</option>\r\n");
      out.write("\t\t                        <option value=\"4\">완료</option>\r\n");
      out.write("\t\t                        <option value=\"5\">보류</option>\r\n");
      out.write("                    \t\t</select>\r\n");
      out.write("                    \t\t<br>\r\n");
      out.write("\t\t                    <i class=\"icofont-user\"></i> <label> 담당자 </label>\r\n");
      out.write("\t\t                    <select class=\"form-select\" id=\"calProjectMemberList\"  name=\"picId\" >\r\n");
      out.write("\t\t                    \t<!-- <option value=\"0\" selected>담당자</option> -->\r\n");
      out.write("\t\t                    </select>\r\n");
      out.write("\t\t                    <br>\r\n");
      out.write("\t\t                    <i class=\"icofont-calendar\"> </i><lable> 시작날짜 </lable>\r\n");
      out.write("\t\t                    <input id=\"start1\" name=\"projectWorkStartDate\" class=\"form-control\" type=\"date\">\r\n");
      out.write("\t\t                    <br>\r\n");
      out.write("\t\t                    <i class=\"icofont-calendar\"></i> <lable> 종료날짜 </lable>\r\n");
      out.write("\t\t                    <input id=\"end1\" name=\"projectWorkEndDate\" class=\"form-control\" type=\"date\" >\r\n");
      out.write("\t\t                    <br>\r\n");
      out.write("\t\t                    <i class=\"icofont-flag\"></i> <lable> 우선순위 </lable>\r\n");
      out.write("\t\t                    <select id=\"projectPriorityId1\" name=\"projectPriorityId\" class=\"form-select\">\r\n");
      out.write("\t\t                        <option value=\"1\">긴급</option>\r\n");
      out.write("\t\t                        <option value=\"2\">높음</option>\r\n");
      out.write("\t\t                        <option value=\"3\">보통</option>\r\n");
      out.write("\t\t                        <option value=\"4\">낮음</option>\r\n");
      out.write("                    \t\t</select>\r\n");
      out.write("\t\t                    <br>\r\n");
      out.write("\t\t                    <i class=\"icofont-page\"></i> <label for=\"exampleFormControlTextarea786\" class=\"form-label\">내용</label>\t\t                    <textarea class=\"form-control\"  id=\"projectWorkContent1\" name=\"projectWorkContent\"  type=\"text\"  rows=\"3\" ></textarea>\r\n");
      out.write("\t\t                    <br>\r\n");
      out.write("\t\t                    <div class=\"modal-footer\">\r\n");
      out.write("\t\t                    \t<button type=\"button\" id=\"calSaveBtn\" class=\"btn btn-primary\" >등록하기</button>\r\n");
      out.write("\t\t                    \t<button type=\"button\" id=\"closeBtn\" onclick=\"caModifyModalClose()\" class=\"btn btn-secondary\" >닫기</button>\r\n");
      out.write("\t\t                    </div>\r\n");
      out.write("                    </form>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- <div id='calendar-container' class=\"calendarCenter\">\r\n");
      out.write("                <div\r\n");
      out.write("                    style='height: 30px; text-align: center; font-size: 50px; color: rgb(66, 75, 247); margin-bottom: 30px; font-weight: bolder;'>\r\n");
      out.write("                    예약일정</div>\r\n");
      out.write("                <div id='calendar'></div> 캘린더가 생성되는 곳\r\n");
      out.write("            </div> -->\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("\r\n");
      out.write("   \r\n");
      out.write("\r\n");
      out.write("<script >\r\n");
      out.write("\r\n");
      out.write("/* const loginMemberId = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${memberId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\r\n");
      out.write("console.log(\"loginMemberId\", loginMemberId)\r\n");
      out.write("\r\n");
      out.write("const projectRoleId = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${projectRoleId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\r\n");
      out.write("console.log(\"projectRoleId\",projectRoleId); */\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("//const caPicId = $(\"#writer\").val();\r\n");
      out.write("//console.log(\"caPicId\",caPicId);\r\n");
      out.write("\r\n");
      out.write("/* if (projectRoleId === 1) {\r\n");
      out.write("\tdocument.querySelector(\"#taskAddBtn\").style.display = \"block\";\r\n");
      out.write("\t//pwtaskAddBtn();\r\n");
      out.write("} */\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("//스프링 security CSRF를  설정하면 아래 토큰 값을 get이외의 방식에는 전송해야 한당\r\n");
      out.write("const header = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${_csrf.headerName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("const token =  '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${_csrf.token}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("\r\n");
      out.write("const Modal = $('#modal')\r\n");
      out.write("const modalClose = () => {\r\n");
      out.write("    modal.hide();\r\n");
      out.write("}\r\n");
      out.write("const detailModal = $('.detailModal')\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("const detailModalClose = () => {\r\n");
      out.write("\tconsole.log(\"닫기버튼클릭\");\r\n");
      out.write("\tdocument.querySelector(\"#caModifyBtn\").style.display = \"none\";\r\n");
      out.write("    document.querySelector(\"#calendarDeleteBtn\").style.display = \"none\";\r\n");
      out.write("\tdetailModal.hide();\r\n");
      out.write("\t//location.reload();\r\n");
      out.write("\t//detailModal.style.display=\"none\";\r\n");
      out.write("\t//detailModal.modal('hide');\r\n");
      out.write("}\r\n");
      out.write("const modifyModal = $('.modifyModal')\r\n");
      out.write("\r\n");
      out.write("// 모달창에서 일정 수정하기\r\n");
      out.write("const caModifyModal = $(\".modifyModal\");\r\n");
      out.write("const caModifyModalClose = () => {\r\n");
      out.write("\tcaModifyModal.hide();\r\n");
      out.write("\t//caModifyModal.style.display=\"none\";\r\n");
      out.write("}\r\n");
      out.write("// 수정 버튼 클릭\r\n");
      out.write("const openModify = () => {\r\n");
      out.write("\tmodifyModal.show();\r\n");
      out.write("\tdetailModalClose();\r\n");
      out.write("\r\n");
      out.write("\t$(\"#modifyModalCont\").find(\"[name=projectWorkTitle]\").val($(detailModal).find(\"#projectWorkTitle\").html());\r\n");
      out.write("\t$(\"#modifyModalCont\").find(\"[name=companyId]\").val($(detailModal).find(\"#companyId\").val());\r\n");
      out.write("\t$(\"#modifyModalCont\").find(\"[name=projectWorkStatusId]\").val($(detailModal).find(\"#projectWorkStatusId\").val());\r\n");
      out.write("\t$(\"#modifyModalCont\").find(\"[name=projectWorkStatus]\").val($(detailModal).find(\"#projectWorkStatus\").val());\r\n");
      out.write("\t$(\"#modifyModalCont\").find(\"[name=projectWorkPic]\").val($(detailModal).find(\"#writer\").val());\r\n");
      out.write("\t$(\"#modifyModalCont\").find(\"[name=projectWorkStartDate]\").val($(detailModal).find(\"#start\").val());\r\n");
      out.write("\t$(\"#modifyModalCont\").find(\"[name=projectWorkEndDate]\").val($(detailModal).find(\"#end\").val());\r\n");
      out.write("\t$(\"#modifyModalCont\").find(\"[name=projectPriorityId]\").val($(detailModal).find(\"#projectPriorityId\").val());\r\n");
      out.write("\t$(\"#modifyModalCont\").find(\"[name=projectPriorityName]\").val($(detailModal).find(\"#projectPriorityName\").val());\r\n");
      out.write("\t$(\"#modifyModalCont\").find(\"[name=projectWorkContent]\").val($(detailModal).find(\"#projectWorkContent\").val());\r\n");
      out.write("\t$(\"#modifyModalCont\").find(\"[name=projectWorkId]\").val($(detailModal).find(\"#projectWorkId\").val());\r\n");
      out.write("\t$(\"#modifyModalCont\").find(\"[name=picId]\").val($(detailModal).find(\"#calPicId\").val());\r\n");
      out.write("\t$(\"#modifyModalCont\").find(\"[name=projectId]\").val($(detailModal).find(\"#projectId\").val());\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// ============================ 멤버 리스트 ==============================\r\n");
      out.write("\r\n");
      out.write("const calPmList = document.querySelector(\"#calProjectMemberList\");\r\n");
      out.write("\r\n");
      out.write("const calPmemberList = function(resp){\r\n");
      out.write("\r\n");
      out.write("\tfor(let i=0; i<resp.length; i++){\r\n");
      out.write("\t\tlet calOption = document.createElement(\"option\");\r\n");
      out.write("\t\tcalOption.value = `${resp[i].memberId}`;\r\n");
      out.write("\t\tcalOption.innerHTML = `${resp[i].memberName}`;\r\n");
      out.write("\t\tcalPmList.appendChild(calOption);\r\n");
      out.write("\t\t//MoPmList.appendChild(pwOption);\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("const calProjectMemberList = function(){\r\n");
      out.write("console.log(\"멤버리스트\");\r\n");
      out.write("   $.ajax({\r\n");
      out.write("\t  type:\"get\",\r\n");
      out.write("\t  url:\"/ourmine/company/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${companyId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/project/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${projectId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/calendar/projectMemberList\",\r\n");
      out.write("\t  async:true,\r\n");
      out.write("\t  dataType:\"json\",\r\n");
      out.write("\t  success:function(resp){\r\n");
      out.write("\t      console.log(\"결과확인\",resp);  // 요기 코드가 길어지면  별도 함수로 처리/ 그래야 가독성이 유지됨\r\n");
      out.write("\t      calPmemberList(resp);\r\n");
      out.write("\t  },\r\n");
      out.write("\t  error: function (request, status, error) {\r\n");
      out.write("\t      console.log(\"code: \" + request.status)\r\n");
      out.write("\t      console.log(\"message: \" + request.responseText)\r\n");
      out.write("\t      console.log(\"error: \" + error);\r\n");
      out.write("\t  }\r\n");
      out.write("\r\n");
      out.write("\t})\r\n");
      out.write("};\r\n");
      out.write("\r\n");
      out.write("calProjectMemberList();\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("//======================== 수정 ================================================\r\n");
      out.write("    /*  const updateFormSubmit = function(e){ */\r\n");
      out.write("$(\"#calSaveBtn\").bind(\"click\",function(){\r\n");
      out.write("   \tconsole.log(\"등록하기버튼\")\r\n");
      out.write("\tlet data = {\r\n");
      out.write("\t\tprojectWorkId:modifyForm.projectWorkId.value,\r\n");
      out.write("\t\tprojectWorkTitle:modifyForm.projectWorkTitle.value,\r\n");
      out.write("\t\tprojectWorkContent:modifyForm.projectWorkContent.value,\r\n");
      out.write("\t\tprojectWorkPic:modifyForm.picId.options[modifyForm.picId.selectedIndex].innerHTML,\r\n");
      out.write("\t\tprojectWorkStartDate:modifyForm.projectWorkStartDate.value,\r\n");
      out.write("\t\tprojectWorkEndDate:modifyForm.projectWorkEndDate.value,\r\n");
      out.write("\t\tprojectWorkStatusId:modifyForm.projectWorkStatusId.value,\r\n");
      out.write("\t\tprojectPriorityId:modifyForm.projectPriorityId.value,\r\n");
      out.write("\t\tpicId:modifyForm.picId.value\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    $.ajax({\r\n");
      out.write("\r\n");
      out.write("         url: \"/ourmine/company/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${companyId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/project/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${projectId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/calendar/calendarUpdate\",\r\n");
      out.write("         data: JSON.stringify(data),\r\n");
      out.write("         contentType: \"application/json;charset=utf-8\",\r\n");
      out.write("         type: \"POST\",\r\n");
      out.write("         dataType: 'json',\r\n");
      out.write("         beforeSend : function(xhr){  // 헤더에 값 세팅, 항상 요따구로 씀\r\n");
      out.write("             xhr.setRequestHeader(header, token);\r\n");
      out.write("         },\r\n");
      out.write("              success: function (res) {\r\n");
      out.write("           \t  Swal.fire({\r\n");
      out.write("\t\t\t\t\ticon: 'success',\r\n");
      out.write("\t\t\t\t\ttitle:'수정완료',\r\n");
      out.write("\t\t\t\t\tshowConfirmButton: false,\r\n");
      out.write("\t\t\t\t\ttimer: 800\r\n");
      out.write("\t\t\t  })\r\n");
      out.write("\t          console.log(\"체킁: \",res)\r\n");
      out.write("\t          caModifyModalClose();\r\n");
      out.write("\t          calendar.refetchEvents();\r\n");
      out.write("\t          calendar.render();\r\n");
      out.write("          },\r\n");
      out.write("            error: function (request, status, error) {\r\n");
      out.write("\t            alert(\"일정 수정에 실패하였습니다.\")\r\n");
      out.write("\t            console.log(\"상태코드:\" + request.status + \"\\n\" + \"에러내용:\" + request.responseText + \"\\n\" + \"error:\" + error);\r\n");
      out.write("            }\r\n");
      out.write("        })\r\n");
      out.write("    });\r\n");
      out.write("// 수정 폼 이벤트\r\n");
      out.write("const modalSubmit = function(event) {\r\n");
      out.write("\tevent.preventDefault();\r\n");
      out.write("\tconsole.log(\"체킁: {}\",\"체킁\");\r\n");
      out.write("\t/* let form = this; */\r\n");
      out.write("\tupdateFormSubmit();\r\n");
      out.write("\r\n");
      out.write("    return false;\r\n");
      out.write("};\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("// 삭제 버튼 누를시\r\n");
      out.write("const calendarDelete = (projectWorkId) => {\r\n");
      out.write("\tconsole.log(\"projectWorkId :\", projectWorkId)\r\n");
      out.write("\t \r\n");
      out.write("\t $.ajax({\r\n");
      out.write("        url: \"/ourmine/company/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${companyId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/project/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${projectId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/calendar/calendarDelete\",\r\n");
      out.write("        data: JSON.stringify(projectWorkId),\r\n");
      out.write("        contentType : \"application/json;charset=utf-8\",\r\n");
      out.write("        type: \"post\",\r\n");
      out.write("        dataType:\"json\",\r\n");
      out.write("        beforeSend : function(xhr){  // 헤더에 값 세팅, 항상 요따구로 씀\r\n");
      out.write("            xhr.setRequestHeader(header, token);\r\n");
      out.write("        },\r\n");
      out.write("        success: function (res) {\r\n");
      out.write("        \tconsole.log(\"삭제 확인\", res);\r\n");
      out.write("            alert(\"삭제 완료\");\r\n");
      out.write("            //detailModalClose();\r\n");
      out.write("            location.href=location.href;\r\n");
      out.write("\r\n");
      out.write("        },\r\n");
      out.write("        error: function (request, status, error) {\r\n");
      out.write("        \tSwal.fire({\r\n");
      out.write("\t\t\t\ticon: 'warning',\r\n");
      out.write("\t\t\t\ttitle:'삭제실패',\r\n");
      out.write("\t\t\t\tshowConfirmButton: false,\r\n");
      out.write("\t\t\t\ttimer: 800\r\n");
      out.write("\t\t\t})\r\n");
      out.write("            console.log(\"상태코드:\" + request.status + \"\\n\" + \"에러내용:\" + request.responseText + \"\\n\" + \"error:\" + error);\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("   <!-- Add Event-->\r\n");
      out.write("    <div class=\"modal fade\" id=\"addevent\" tabindex=\"-1\"  aria-hidden=\"true\">\r\n");
      out.write("        <div class=\"modal-dialog modal-dialog-centered modal-md modal-dialog-scrollable\">\r\n");
      out.write("        <div class=\"modal-content\">\r\n");
      out.write("            <div class=\"modal-header\">\r\n");
      out.write("                <h5 class=\"modal-title  fw-bold\" id=\"eventaddLabel\">Add Event</h5>\r\n");
      out.write("                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-body\">\r\n");
      out.write("                <div class=\"mb-3\">\r\n");
      out.write("                    <label for=\"exampleFormControlInput99\" class=\"form-label\">Event Name</label>\r\n");
      out.write("                    <input type=\"text\" class=\"form-control\" id=\"exampleFormControlInput99\">\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"mb-3\">\r\n");
      out.write("                    <label for=\"formFileMultipleone\" class=\"form-label\">Event Images</label>\r\n");
      out.write("                    <input class=\"form-control\" type=\"file\" id=\"formFileMultipleone\">\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"deadline-form\">\r\n");
      out.write("                    <form>\r\n");
      out.write("                        <div class=\"row g-3 mb-3\">\r\n");
      out.write("                          <div class=\"col\">\r\n");
      out.write("                            <label for=\"datepickerded\" class=\"form-label\">Event Start Date</label>\r\n");
      out.write("                            <input type=\"date\" class=\"form-control\" id=\"datepickerded\">\r\n");
      out.write("                          </div>\r\n");
      out.write("                          <div class=\"col\">\r\n");
      out.write("                            <label for=\"datepickerdedone\" class=\"form-label\">Event End Date</label>\r\n");
      out.write("                            <input type=\"date\" class=\"form-control\" id=\"datepickerdedone\">\r\n");
      out.write("                          </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </form>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"mb-3\">\r\n");
      out.write("                    <label for=\"exampleFormControlTextarea78\" class=\"form-label\">Event Description (optional)</label>\r\n");
      out.write("                    <textarea class=\"form-control\" id=\"exampleFormControlTextarea78\" rows=\"3\" placeholder=\"Add any extra details about the request\"></textarea>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-footer\">\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Done</button>\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-primary\">Create</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- Plugin Js-->\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/main.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_security_005fauthentication_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  security:authentication
    org.springframework.security.taglibs.authz.AuthenticationTag _jspx_th_security_005fauthentication_005f0 = (org.springframework.security.taglibs.authz.AuthenticationTag) _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fvar_005fproperty_005fnobody.get(org.springframework.security.taglibs.authz.AuthenticationTag.class);
    boolean _jspx_th_security_005fauthentication_005f0_reused = false;
    try {
      _jspx_th_security_005fauthentication_005f0.setPageContext(_jspx_page_context);
      _jspx_th_security_005fauthentication_005f0.setParent(null);
      // /WEB-INF/jsp/project/calendar/calendarList.jsp(173,0) name = property type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_security_005fauthentication_005f0.setProperty("principal");
      // /WEB-INF/jsp/project/calendar/calendarList.jsp(173,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_security_005fauthentication_005f0.setVar("principal");
      int _jspx_eval_security_005fauthentication_005f0 = _jspx_th_security_005fauthentication_005f0.doStartTag();
      if (_jspx_th_security_005fauthentication_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fvar_005fproperty_005fnobody.reuse(_jspx_th_security_005fauthentication_005f0);
      _jspx_th_security_005fauthentication_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_security_005fauthentication_005f0, _jsp_getInstanceManager(), _jspx_th_security_005fauthentication_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/jsp/project/calendar/calendarList.jsp(174,0) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/jsp/project/calendar/calendarList.jsp(174,0) '${principal.realUser.proAttendRole }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${principal.realUser.proAttendRole }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/jsp/project/calendar/calendarList.jsp(174,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("roleList");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("    ");
            if (_jspx_meth_c_005fset_005f0(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write("\r\n");
            out.write("    ");
            if (_jspx_meth_c_005fset_005f1(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write('\r');
            out.write('\n');
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
      // /WEB-INF/jsp/project/calendar/calendarList.jsp(175,4) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("memberId");
      // /WEB-INF/jsp/project/calendar/calendarList.jsp(175,4) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/jsp/project/calendar/calendarList.jsp(175,4) '${roleList.memberId }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${roleList.memberId }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f1 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f1_reused = false;
    try {
      _jspx_th_c_005fset_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
      // /WEB-INF/jsp/project/calendar/calendarList.jsp(176,4) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f1.setVar("projectRoleId");
      // /WEB-INF/jsp/project/calendar/calendarList.jsp(176,4) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f1.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/jsp/project/calendar/calendarList.jsp(176,4) '${roleList.projectRoleId }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${roleList.projectRoleId }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f1 = _jspx_th_c_005fset_005f1.doStartTag();
      if (_jspx_th_c_005fset_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f1);
      _jspx_th_c_005fset_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f1_reused);
    }
    return false;
  }
}
