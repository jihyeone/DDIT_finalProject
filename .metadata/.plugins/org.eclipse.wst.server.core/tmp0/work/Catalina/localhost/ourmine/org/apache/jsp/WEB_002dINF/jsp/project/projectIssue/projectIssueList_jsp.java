/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2023-06-10 06:25:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.project.projectIssue;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class projectIssueList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/E:/A_TeachingMaterial/05_JSP_Spring/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/ourmine/WEB-INF/lib/spring-security-taglibs-5.7.8.jar!/META-INF/security.tld", Long.valueOf(1681713972000L));
    _jspx_dependants.put("/WEB-INF/lib/spring-security-taglibs-5.7.8.jar", Long.valueOf(1683020361417L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fvar_005fproperty_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fvar_005fproperty_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fvar_005fproperty_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("th.sortable {\r\n");
      out.write("\tcursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<div id=\"mytask-layout\" class=\"theme-indigo\">\r\n");
      out.write("\r\n");
      out.write("\t<!-- main body area -->\r\n");
      out.write("\t<div class=\"main px-lg-4 px-md-4\">\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- Body: Body -->\r\n");
      out.write("\t\t<div class=\"body d-flex py-lg-3 py-md-2\">\r\n");
      out.write("\t\t\t<div class=\"container-xxl\">\r\n");
      out.write("\t\t\t\t<div class=\"row align-items-center\">\r\n");
      out.write("\t\t\t\t\t<div class=\"border-0 mb-4\">\r\n");
      out.write("\t\t\t\t\t\t<div\r\n");
      out.write("\t\t\t\t\t\t\tclass=\"card-header py-3 no-bg bg-transparent d-flex align-items-center px-0 justify-content-between border-bottom flex-wrap\">\r\n");
      out.write("\t\t\t\t\t\t\t<h3 class=\"fw-bold mb-0\">이슈관리</h3>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"col-auto d-flex w-sm-100\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark btn-set-task w-sm-100\" data-bs-toggle=\"modal\" data-bs-target=\"#tickadd\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<i class=\"icofont-plus-circle me-2 fs-6\"></i> 이슈 추가\r\n");
      out.write("\t\t\t\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<!-- Row end  -->\r\n");
      out.write("\t\t\t\t<div class=\"row clearfix g-3\">\r\n");
      out.write("\t\t\t\t\t<div class=\"col-sm-12\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"card mb-3\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"card-body\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" placeholder=\"Search\" id=\"searchIssue\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t<table id=\"myProjectTable\" \tclass=\"table table-hover align-middle mb-0\" style=\"width: 100%\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<th data-key=\"projectIssueId\" data-order=\"asc\" class=\"sortable\">이슈 ID</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<th data-key=\"trackerName\" data-order=\"asc\" class=\"sortable\">종류</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<th data-key=\"issueTitle\" data-order=\"asc\" class=\"sortable\">이슈 제목</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<th data-key=\"issueWriter\" data-order=\"asc\" class=\"sortable\">작성자</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<th data-key=\"issueDate\" data-order=\"asc\" class=\"sortable\">이슈발행 날짜</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<th data-key=\"issueStatus\" data-order=\"asc\" class=\"sortable\" id=\"nowStatus\">진행상태</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<th>Actions</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<tbody id=\"issueList\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<tr style=\"display: none\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<th>이슈 ID</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<th>이슈 제목</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<th>작성자</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<th>이슈발행 날짜</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<th>진행상태</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<th>진행상태</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<th>Actions</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t\t\t<nav aria-label=\"Page navigation\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<ul style=\"display: flex\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tclass=\"pagination justify-content-center\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<li class=\"page-item disabled\"><a class=\"page-link\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">Previous</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<li class=\"page-item\" style=\"display: flex\" id=\"issuesContainer\"><a class=\"page-link\" href=\"#\">1</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<li class=\"page-item\"><a class=\"page-link\" href=\"#\">Next</a> </li>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</nav>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<!-- Row End -->\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"row taskboard g-3 py-xxl-4\">\r\n");
      out.write("\t\t\t<div\r\n");
      out.write("\t\t\t\tclass=\"col-xxl-4 col-xl-4 col-lg-4 col-md-12 mt-xxl-4 mt-xl-4 mt-lg-4 mt-md-4 mt-sm-4 mt-4\">\r\n");
      out.write("\t\t\t\t<h6 class=\"fw-bold py-3 mb-0\">상태: 긴급</h6>\r\n");
      out.write("\t\t\t\t<div class=\"progress_task\">\r\n");
      out.write("\t\t\t\t\t<div class=\"dd\" data-plugin=\"nestable\">\r\n");
      out.write("\t\t\t\t\t\t<ol class=\"dd-list\" id=\"statusHigh\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</ol>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div\r\n");
      out.write("\t\t\t\tclass=\"col-xxl-4 col-xl-4 col-lg-4 col-md-12 mt-xxl-4 mt-xl-4 mt-lg-4 mt-md-0 mt-sm-0 mt-0\">\r\n");
      out.write("\t\t\t\t<h6 class=\"fw-bold py-3 mb-0\">상태: 보통</h6>\r\n");
      out.write("\t\t\t\t<div class=\"review_task\">\r\n");
      out.write("\t\t\t\t\t<div class=\"dd\" data-plugin=\"nestable\">\r\n");
      out.write("\t\t\t\t\t\t<ol class=\"dd-list\" id=\"statusMid\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</ol>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div\r\n");
      out.write("\t\t\t\tclass=\"col-xxl-4 col-xl-4 col-lg-4 col-md-12 mt-xxl-4 mt-xl-4 mt-lg-4 mt-md-0 mt-sm-0 mt-0\">\r\n");
      out.write("\t\t\t\t<h6 class=\"fw-bold py-3 mb-0\">상태: 낮음</h6>\r\n");
      out.write("\t\t\t\t<div class=\"completed_task\">\r\n");
      out.write("\t\t\t\t\t<div class=\"dd\" data-plugin=\"nestable\">\r\n");
      out.write("\t\t\t\t\t\t<ol class=\"dd-list\" id=\"statusLow\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</ol>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- 이슈 등록 -->\r\n");
      out.write("\t\t<form class=\"insertIssueForm\" method=\"post\">\r\n");
      out.write("\t\t\t<div class=\"modal fade\" id=\"tickadd\" tabindex=\"-1\" aria-hidden=\"true\">\r\n");
      out.write("\t\t\t\t<div\r\n");
      out.write("\t\t\t\t\tclass=\"modal-dialog modal-dialog-centered modal-md modal-dialog-scrollable\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"modal-content\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"modal-header\">\r\n");
      out.write("\t\t\t\t\t\t\t<h5 class=\"modal-title  fw-bold\" id=\"leaveaddLabel\">이슈 추가</h5>\r\n");
      out.write("\t\t\t\t\t\t\t<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"\r\n");
      out.write("\t\t\t\t\t\t\t\taria-label=\"Close\"></button>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"modal-body\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"mb-3\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<label for=\"issueTitle\" class=\"form-label\">이슈제목</label> <input\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttype=\"text\" class=\"form-control\" id=\"issueTitle\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tplaceholder=\"제목입력\" />\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"mb-3\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<label for=\"issueContent\" class=\"form-label\">이슈내용</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t<textarea class=\"form-control\" id=\"issueContent\" rows=\"3\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tplaceholder=\"\"></textarea>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"deadline-form\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"row g-3 mb-3\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"col\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<label class=\"form-label\">이슈상태</label> <select\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tid=\"issueCodeList\" class=\"form-select \" multiple\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\taria-label=\"Default select Priority\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"col\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<label class=\"form-label\">이슈카테고리</label> <select\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tid=\"trackerCodeList\" class=\"form-select \" multiple\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\taria-label=\"Default select Priority\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"col-sm-12\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<label for=\"formFileMultipleone\" class=\"form-label\">이슈\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t알림 대상자</label> <select id=\"alarmReceiver\" class=\"form-select\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tmultiple aria-label=\"Default select Priority\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"deadline-form\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"row g-3 mb-3\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"col\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<label for=\"issueEndDate\" class=\"form-label\">예상 종료날짜</label> <input\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\ttype=\"date\" class=\"form-control\" id=\"issueEndDate\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"modal-footer\">\r\n");
      out.write("\t\t\t\t\t\t\t <button type=\"button\" id=\"autoBtn\" class=\"btn\" style=\"color:gray;\">자동완성</button>\r\n");
      out.write("\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-secondary\"\tdata-bs-dismiss=\"modal\">취소</button>\r\n");
      out.write("\t\t\t\t\t\t\t<button type=\"submit\" class=\"btn btn-primary\">등록</button>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- 이슈 상세보기 여기에서 진행중 -> 완료로 바꿀거임  -->\r\n");
      out.write("\t\t<div class=\"modal fade\" id=\"issueDetail\" tabindex=\"-1\"\r\n");
      out.write("\t\t\taria-hidden=\"true\">\r\n");
      out.write("\t\t\t<div\r\n");
      out.write("\t\t\t\tclass=\"modal-dialog modal-dialog-centered modal-md modal-dialog-scrollable\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div class=\"modal-content\">\r\n");
      out.write("\t\t\t\t\t<div class=\"modal-header\">\r\n");
      out.write("\t\t\t\t\t\t<h5 class=\"modal-title  fw-bold\">이슈 상세보기</h5>\r\n");
      out.write("\t\t\t\t\t\t<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"\r\n");
      out.write("\t\t\t\t\t\t\taria-label=\"Close\"></button>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"modal-body\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"mb-3\">\r\n");
      out.write("\t\t\t\t\t\t\t<label class=\"form-label\">이슈작성자</label> <input type=\"text\"\r\n");
      out.write("\t\t\t\t\t\t\t\tclass=\"form-control\" id=\"basicIssueWriter\" readonly=\"readonly\" />\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"mb-3\">\r\n");
      out.write("\t\t\t\t\t\t\t<label class=\"form-label\">이슈제목</label> <input type=\"text\"\r\n");
      out.write("\t\t\t\t\t\t\t\tclass=\"form-control\" id=\"basicIssueTitle\" readonly=\"readonly\" />\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"mb-3\">\r\n");
      out.write("\t\t\t\t\t\t\t<label class=\"form-label\">이슈내용</label>\r\n");
      out.write("\t\t\t\t\t\t\t<textarea class=\"form-control\" id=\"basicIssueContent\" rows=\"3\"\r\n");
      out.write("\t\t\t\t\t\t\t\treadonly=\"readonly\"></textarea>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"deadline-form\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"row g-3 mb-3\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<label class=\"form-label\">이슈상태</label> <input type=\"text\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"form-control\" id=\"basicIssueStatus\" readonly=\"readonly\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvalue=\"\">\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<label class=\"form-label\">이슈카테고리</label> <input type=\"text\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"form-control\" id=\"basicIssueTracker\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\treadonly=\"readonly\" value=\"\">\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"row g-3 mb-3\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<label for=\"issueEndDate\" class=\"form-label\">이슈 발생날짜</label> <input\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttype=\"date\" class=\"form-control\" id=\"basicIssueEventDate\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\treadonly=\"readonly\" value=\"\"> <label\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tfor=\"issueEndDate\" class=\"form-label\">예상 종료날짜</label> <input\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttype=\"date\" class=\"form-control\" id=\"basicIssueEndDate\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\treadonly=\"readonly\" value=\"\">\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"mb-3\">\r\n");
      out.write("\t\t\t\t\t\t\t<label class=\"form-label\">진행상태</label> <input type=\"text\"\r\n");
      out.write("\t\t\t\t\t\t\t\tclass=\"form-control\" id=\"basicIssueProcess\" readonly=\"readonly\" />\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"mb-3\">\r\n");
      out.write("\t\t\t\t\t\t\t<label class=\"form-label\" id=\"commentLabel\">이슈해결코멘트</label> <input\r\n");
      out.write("\t\t\t\t\t\t\t\ttype=\"text\" class=\"form-control\" id=\"basicIssueComment\"\r\n");
      out.write("\t\t\t\t\t\t\t\treadonly=\"readonly\" />\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_security_005fauthentication_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("<input id=\"projectIdHidden\" type=\"hidden\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${projectId }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("<input id=\"companyIdHidden\" type=\"hidden\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${companyId }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tlet searchIssue = document.querySelector(\"#searchIssue\");\r\n");
      out.write("\tconst selectIssueList = {\r\n");
      out.write("\r\n");
      out.write("\t}\r\n");
      out.write("\tconst add = (a,b) => a + b;\r\n");
      out.write("\tlet projectIdHidden = document.querySelector('#projectIdHidden');\r\n");
      out.write("\tlet companyIdHidden = document.querySelector('#companyIdHidden');\r\n");
      out.write("\tlet projectIdHiddenValue = projectIdHidden.value;\r\n");
      out.write("\tlet companyIdHiddenValue = companyIdHidden.value;\r\n");
      out.write("\tconsole.log(\"projectIdHiddenValue:\",projectIdHiddenValue)\r\n");
      out.write("\tconsole.log(\"companyIdHiddenValue:\",companyIdHiddenValue)\r\n");
      out.write("\t// ===========================이슈리스트 생성===========================\r\n");
      out.write("\tlet proList = document.querySelector(\"#issueList\");\r\n");
      out.write("\tconsole.log(\"proList\",proList);\r\n");
      out.write("\tlet statusLow = document.querySelector(\"#statusLow\");\r\n");
      out.write("\tlet statusMid = document.querySelector(\"#statusMid\");\r\n");
      out.write("\tlet statusHigh = document.querySelector(\"#statusHigh\");\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\theaders['Content-Type'] = 'application/json'\r\n");
      out.write("\theaders['accept'] = 'application/json'\r\n");
      out.write("\t function issueList() {\r\n");
      out.write("\t\tconsole.log(\"이슈리스트 오냐?\")\r\n");
      out.write("\t axios.get(`/ourmine/company/${companyIdHiddenValue}/project/${projectIdHiddenValue}/projectIssue/issueList`,{headers : headers})\r\n");
      out.write("\t\t\t\t.then(resp => {\r\n");
      out.write("\t\t\t\t\tlet data = resp.data\r\n");
      out.write("\t\t\t\t\tconsole.log(\"이슈리스트data:\",data)\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tproList.innerHTML+= data.map(item =>\r\n");
      out.write("\t\t\t\t\t\t\t`\r\n");
      out.write("\t\t\t\t\t\t<tr data-projectissueid =${item.projectIssueId} data-issuetitle=\"${item.issueTitle}\" data-issuewriter=${item.projectIssueWriter} data-issueeventdate =\t${item.issueEventDate} data-issuecomment = \"${item.projectIssueComment}\"\r\n");
      out.write("\t\t\t\t\t\t\tdata-issuecontent =\"${item.issueContent}\" data-issueenddate =${item.processEtDate} data-issuecodename=${item.projectIssueCodeName} data-issuetrackername = ${item.trackerName} data-issuestatusname=${item.projectStatusName} class=\"nowIssueList\">\r\n");
      out.write("\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"hidden\" value=\"${item.issueContent}\" class=\"issueContentHidden\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<a class=\"fw-bold text-secondary\">${item.projectIssueId}</a>\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t${item.trackerName ==='결함' ? `<span class=\"badge rounded-pill bg-danger\">${item.trackerName}</span>` \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t:item.trackerName === '이벤트' ? `<span class=\"badge rounded-pill bg-info\">${item.trackerName}</span>` \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t: `<span class=\"badge rounded-pill bg-primary\">${item.trackerName}</span>`}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td class=\"issueDetail\" data-issueiddata=${item.projectIssueId} data-bs-toggle=\"modal\" data-bs-target=\"#issueDetail\" >\r\n");
      out.write("\t\t\t\t\t\t\t\t${item.issueTitle}\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<img class=\"avatar rounded-circle\" src=\"${item.imageContents != null ? item.imageContents : '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/xs/마스코트_투명.png'}\" alt=\"\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<span class=\"fw-bold ms-1\">${item.projectIssueWriter}</span>\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t${item.issueEventDate}\r\n");
      out.write("\t\t\t\t\t\t   </td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t${item.projectStatusId===1 ? `<span class=\"badge bg-warning\" data-issueid=${item.projectStatusId}>${item.projectStatusName}</span>` : `<span class=\"badge bg-success\" data-issueid=${item.projectStatusId}>${item.projectStatusName}</span>`}\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t <td>\r\n");
      out.write("\t\t\t\t\t\t\t\t <div class=\"btn-group\" role=\"group\" aria-label=\"Basic outlined example\">\r\n");
      out.write("\t\t\t\t\t\t\t\t${item.projectStatusId===1 && item.myRoleId===1 ? `<button data-projectissueiddata =${item.projectIssueId} type=\"button\" class = \"btn btn-outline-success issueCheckBtn\" >체크</button>` : `<span></span>`}\r\n");
      out.write("\t\t\t\t\t\t\t\t </div>\r\n");
      out.write("\t\t\t\t\t\t\t </td>\r\n");
      out.write("\t\t\t\t\t\t </tr>\r\n");
      out.write("\r\n");
      out.write("           \t\t `\r\n");
      out.write("\t\t\t\t).reduce(add)\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\tissueDetail();\r\n");
      out.write("\t\t\t\t\tlet totalItems = data[0].totalData; // 총 데이터 개수\r\n");
      out.write("\t\t\t\t\tconsole.log(\"totalItems\",totalItems);\r\n");
      out.write("\t\t\t\t\tlet pageSize = 5; // 한 페이지에 보여줄 데이터 개수\r\n");
      out.write("\t\t\t\t\tlet totalPages = Math.ceil(totalItems / pageSize); // 총 페이지 개수\r\n");
      out.write("\t\t\t\t\tlet pageCon = document.querySelector('#issuesContainer');\r\n");
      out.write("\t\t\t\t\tlet pagesArray = Array.from({length: totalPages}, (_, i) => i + 1); // 페이지 번호 배열을 생성\r\n");
      out.write("\t\t\t\t\tlet paginationHTML = pagesArray.map(pageNumber => `<a href=\"#\" data-page=\"${pageNumber}\" class=\"page-link\">${pageNumber}</a>`).join('');\r\n");
      out.write("\t\t\t\t\tdocument.querySelector('#issuesContainer').innerHTML = paginationHTML;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tlet pageLinks = document.querySelectorAll('.page-link');\r\n");
      out.write("\t\t\t\t\tpageLinks.forEach((link, index) => {\r\n");
      out.write("\t\t\t\t\t\tlink.addEventListener('click', function(event){\r\n");
      out.write("\t\t\t\t\t\t\tconsole.log(\"클릭이벤트\")\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\tevent.preventDefault();\r\n");
      out.write("\t\t\t\t\t\t\tlet pageNumber = this.dataset.page;  // get page number from data-page attribute\r\n");
      out.write("\t\t\t\t\t\t\taxios.get(`/ourmine/company/${companyIdHiddenValue}/project/${projectIdHiddenValue}/projectIssue/issueList`,{\r\n");
      out.write("\t\t\t\t\t\t\t\tparams: {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tpage: pageNumber\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t},{headers : headers})\r\n");
      out.write("\t\t\t\t\t\t\t\t\t.then(resp => {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tlet data = resp.data;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tconsole.log(\"dataaaaa\",data);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tproList.innerHTML='';\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tproList.innerHTML+= data.map(item =>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t`\r\n");
      out.write("\t\t\t\t\t<tr data-projectissueid =${item.projectIssueId} data-issuetitle=\"${item.issueTitle}\" data-issuewriter=${item.projectIssueWriter} data-issueeventdate =\t${item.issueEventDate} data-issuecomment = \"${item.projectIssueComment}\"\r\n");
      out.write("\t\t\t\t\t\t\tdata-issuecontent =\"${item.issueContent}\" data-issueenddate =${item.processEtDate} data-issuecodename=${item.projectIssueCodeName} data-issuetrackername = ${item.trackerName} data-issuestatusname=${item.projectStatusName} class=\"nowIssueList\">\r\n");
      out.write("\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<a class=\"fw-bold text-secondary\">${item.projectIssueId}</a>\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t${item.trackerName ==='결함' ? `<span class=\"badge rounded-pill bg-danger\">${item.trackerName}</span>` \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t:item.trackerName === '이벤트' ? `<span class=\"badge rounded-pill bg-info\">${item.trackerName}</span>` \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t: `<span class=\"badge rounded-pill bg-primary\">${item.trackerName}</span>`}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td class=\"issueDetail\" data-issueiddata=${item.projectIssueId} data-bs-toggle=\"modal\" data-bs-target=\"#issueDetail\" >\r\n");
      out.write("\t\t\t\t\t\t\t\t${item.issueTitle}\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<img class=\"avatar rounded-circle\" src=\"${item.imageContents != null ? item.imageContents : '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/xs/마스코트_투명.png'}\" alt=\"\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<span class=\"fw-bold ms-1\">${item.projectIssueWriter}</span>\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t${item.issueEventDate}\r\n");
      out.write("\t\t\t\t\t\t   </td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t${item.projectStatusId===1 ? `<span class=\"badge bg-warning\" data-issueid=${item.projectStatusId}>${item.projectStatusName}</span>` : `<span class=\"badge bg-success\" data-issueid=${item.projectStatusId}>${item.projectStatusName}</span>`}\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t <td>\r\n");
      out.write("\t\t\t\t\t\t\t\t <div class=\"btn-group\" role=\"group\" aria-label=\"Basic outlined example\">\r\n");
      out.write("\t\t\t\t\t\t\t\t${item.projectStatusId===1 && item.myRoleId===1 ? `<button data-projectissueiddata =${item.projectIssueId} type=\"button\" class = \"btn btn-outline-success issueCheckBtn\" >체크</button>` : `<span></span>`}\r\n");
      out.write("\t\t\t\t\t\t\t\t </div>\r\n");
      out.write("\t\t\t\t\t\t\t </td>\r\n");
      out.write("\t\t\t\t\t\t </tr>\r\n");
      out.write("\r\n");
      out.write("           \t\t `\r\n");
      out.write("\t\t\t\t\t\t\t\t\t).reduce(add)\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}).then(test =>{\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tconsole.log(\"테스트콘솔\")\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tissueDetail();\r\n");
      out.write("\t\t\t\t\t\t\t})\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t})\r\n");
      out.write("\r\n");
      out.write("\t}\r\n");
      out.write("\t// 정렬 \r\n");
      out.write("\t$(document).ready(function(){\r\n");
      out.write("\t\t  $('#myProjectTable th').each(function (column) {\r\n");
      out.write("\t\t    $(this).click(function() {\r\n");
      out.write("\t\t    \tconsole.log(\"정렬클릭이벤트\");\r\n");
      out.write("\t\t      if($(this).is('.asc')) {\r\n");
      out.write("\t\t        $(this).removeClass('asc');\r\n");
      out.write("\t\t        $(this).addClass('desc');\r\n");
      out.write("\t\t        sortdir=-1;\r\n");
      out.write("\r\n");
      out.write("\t\t      } else {\r\n");
      out.write("\t\t        $(this).addClass('asc');\r\n");
      out.write("\t\t        $(this).removeClass('desc'); sortdir=1;\r\n");
      out.write("\t\t      }\r\n");
      out.write("\r\n");
      out.write("\t\t      $(this).siblings().removeClass('asc');\r\n");
      out.write("\t\t      $(this).siblings().removeClass('desc');\r\n");
      out.write("\r\n");
      out.write("\t\t      var rec = $('#myProjectTable').find('tbody>tr').get();\r\n");
      out.write("\r\n");
      out.write("\t\t      rec.sort(function (a, b) {\r\n");
      out.write("\t\t        var val1 = $(a).children('td').eq(column).text().toUpperCase();\r\n");
      out.write("\t\t        var val2 = $(b).children('td').eq(column).text().toUpperCase();\r\n");
      out.write("\t\t        return (val1 < val2)?-sortdir:(val1>val2)?sortdir:0;\r\n");
      out.write("\t\t      });\r\n");
      out.write("\r\n");
      out.write("\t\t      $.each(rec, function(index, row) {\r\n");
      out.write("\t\t          $('#myProjectTable tbody').append(row);\r\n");
      out.write("\t\t      });\r\n");
      out.write("\t\t    });\r\n");
      out.write("\t\t });\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\r\n");
      out.write("\tissueList();\r\n");
      out.write("\tissueListBottom ();\r\n");
      out.write("\tissueDetail();\r\n");
      out.write("\talarmReceiver();\r\n");
      out.write("\taddIssueCodeList();\r\n");
      out.write("\taddIssue();\r\n");
      out.write("\r\n");
      out.write("\tfunction issueListBottom (){\r\n");
      out.write("\t\taxios.get(`/ourmine/company/${companyIdHiddenValue}/project/${projectIdHiddenValue}/projectIssue/issueListBottom`,{\r\n");
      out.write("\t\t\tparams: {\r\n");
      out.write("\t\t\t\tprojectId: projectIdHiddenValue\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t},{headers : headers})\r\n");
      out.write("\t\t\t\t.then(resp => {\r\n");
      out.write("\t\t\t\t\tlet data = resp.data\r\n");
      out.write("\t\t\t\t\tconsole.log(\"bottomData:\", data)\r\n");
      out.write("\t\t\t\t\tdata.filter(item => item.projectIssueCodeName === '긴급' && item.projectStatusId === 1).map((user) =>{\r\n");
      out.write("\t\t\t\t\t\tstatusHigh.innerHTML+=\r\n");
      out.write("\t\t\t\t\t\t\t\t`\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("                          <li class=\"dd-item\" data-id=\"${user.issueId}\"> <!-- data-id에 이슈id를 찍으면? -->\r\n");
      out.write("                              <div class=\"dd-handle\">\r\n");
      out.write("\t                              <div class=\"task-info d-flex align-items-center justify-content-between\">\r\n");
      out.write("\t\t                              <h6 class=\"light-info-bg py-1 px-2 rounded-1 d-inline-block fw-bold small-14 mb-0\">제목: ${user.issueTitle}</h6>\r\n");
      out.write("\t\t\t                              <div class=\"task-priority d-flex flex-column align-items-center justify-content-center\">\r\n");
      out.write("\t\t\t                                  <div class=\"avatar-list avatar-list-stacked m-0\">\r\n");
      out.write("\t\t\t                                  <img class=\"avatar rounded-circle\" src=\"${user.imageContents != null ? user.imageContents : '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/xs/마스코트_투명.png'}\" alt=\"\">\r\n");
      out.write("\t\t\t                                  </div>\r\n");
      out.write("\t\t\t                                  <span class=\"badge bg-warning text-end mt-2\">작성자: ${user.projectIssueWriter}</span>\r\n");
      out.write("\t\t\t                              </div>\r\n");
      out.write("\t                          \t  </div>\r\n");
      out.write("                                  <p class=\"py-2 mb-0\">${user.issueContent}</p>\r\n");
      out.write("                                  <div class=\"tikit-info row g-3 align-items-center\">\r\n");
      out.write("                                      <div class=\"col-sm\">\r\n");
      out.write("                                          <ul class=\"d-flex list-unstyled align-items-center flex-wrap\">\r\n");
      out.write("                                              <li class=\"me-2\">\r\n");
      out.write("                                                  <div class=\"d-flex align-items-center\">\r\n");
      out.write("                                                      <i class=\"icofont-flag\"></i> <span class=\"ms-1\">${user.issueEventDate} ~ ${user.processEtDate} </span>\r\n");
      out.write("\r\n");
      out.write("                                                  </div>\r\n");
      out.write("                                              </li>\r\n");
      out.write("                                          </ul>\r\n");
      out.write("                                      </div>\r\n");
      out.write("                                      <div class=\"col-sm text-end\">\r\n");
      out.write("                                      ${user.trackerName ==='결함' ? `<span class=\"badge rounded-pill bg-danger\">${user.trackerName}</span>` \r\n");
      out.write("      \t\t\t\t\t\t\t\t\t\t:user.trackerName === '이벤트' ? `<span class=\"badge rounded-pill bg-info\">${user.trackerName}</span>` \r\n");
      out.write("      \t\t\t\t\t\t\t\t\t\t\t\t: `<span class=\"badge rounded-pill bg-primary\">${user.trackerName}</span>`}\r\n");
      out.write("      \t\t\t\t\t\t\t\r\n");
      out.write("                                      </div>\r\n");
      out.write("                                  </div>\r\n");
      out.write("                              </div>\r\n");
      out.write("\r\n");
      out.write("                          </li>\r\n");
      out.write("\t\t\t`\r\n");
      out.write("\t\t\t\t\t}\t)\r\n");
      out.write("\t\t\t\t\tdata.filter(item => item.projectIssueCodeName === '보통'&& item.projectStatusId === 1).map((user) =>{\r\n");
      out.write("\t\t\t\t\t\tstatusMid.innerHTML+=\r\n");
      out.write("\t\t\t\t\t\t\t\t`\r\n");
      out.write("                          <li class=\"dd-item\" data-id=\"${user.issueId}\"> <!-- data-id에 이슈id를 찍으면? -->\r\n");
      out.write("                              <div class=\"dd-handle\">\r\n");
      out.write("                                  <div class=\"task-info d-flex align-items-center justify-content-between\">\r\n");
      out.write("                                      <h6 class=\"light-info-bg py-1 px-2 rounded-1 d-inline-block fw-bold small-14 mb-0\">제목: ${user.issueTitle}</h6>\r\n");
      out.write("                                      <div class=\"task-priority d-flex flex-column align-items-center justify-content-center\">\r\n");
      out.write("                                          <div class=\"avatar-list avatar-list-stacked m-0\">\r\n");
      out.write("                                          <img class=\"avatar rounded-circle\" src=\"${user.imageContents != null ? user.imageContents : '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/xs/마스코트_투명.png'}\" alt=\"\">\r\n");
      out.write("                                          </div>\r\n");
      out.write("                                          <span class=\"badge bg-warning text-end mt-2\">작성자: ${user.projectIssueWriter}</span>\r\n");
      out.write("                                      </div>\r\n");
      out.write("                                  </div>\r\n");
      out.write("                                  <p class=\"py-2 mb-0\">${user.issueContent}</p>\r\n");
      out.write("                                  <div class=\"tikit-info row g-3 align-items-center\">\r\n");
      out.write("                                      <div class=\"col-sm\">\r\n");
      out.write("                                          <ul class=\"d-flex list-unstyled align-items-center flex-wrap\">\r\n");
      out.write("                                              <li class=\"me-2\">\r\n");
      out.write("                                                  <div class=\"d-flex align-items-center\">\r\n");
      out.write("                                                      <i class=\"icofont-flag\"></i> <span class=\"ms-1\">${user.issueEventDate} ~ ${user.processEtDate} </span>\r\n");
      out.write("\r\n");
      out.write("                                                  </div>\r\n");
      out.write("                                              </li>\r\n");
      out.write("                                          </ul>\r\n");
      out.write("                                      </div>\r\n");
      out.write("                                      <div class=\"col-sm text-end\">\r\n");
      out.write("                                      ${user.trackerName ==='결함' ? `<span class=\"badge rounded-pill bg-danger\">${user.trackerName}</span>` \r\n");
      out.write("        \t\t\t\t\t\t\t\t\t\t:user.trackerName === '이벤트' ? `<span class=\"badge rounded-pill bg-info\">${user.trackerName}</span>` \r\n");
      out.write("        \t\t\t\t\t\t\t\t\t\t\t\t: `<span class=\"badge rounded-pill bg-primary\">${user.trackerName}</span>`}\r\n");
      out.write("                                      </div>\r\n");
      out.write("                                  </div>\r\n");
      out.write("                              </div>\r\n");
      out.write("\r\n");
      out.write("                          </li>\r\n");
      out.write("\t\t\t`\r\n");
      out.write("\t\t\t\t\t}\t)\r\n");
      out.write("\t\t\t\t\tdata.filter(item => item.projectIssueCodeName === '낮음'&& item.projectStatusId === 1).map((user) =>{\r\n");
      out.write("\t\t\t\t\t\tstatusLow.innerHTML+=\r\n");
      out.write("\t\t\t\t\t\t\t\t`\r\n");
      out.write("                          <li class=\"dd-item\" data-id=\"${user.issueId}\"> <!-- data-id에 이슈id를 찍으면? -->\r\n");
      out.write("                              <div class=\"dd-handle\">\r\n");
      out.write("                                  <div class=\"task-info d-flex align-items-center justify-content-between\">\r\n");
      out.write("                                      <h6 class=\"light-info-bg py-1 px-2 rounded-1 d-inline-block fw-bold small-14 mb-0\">제목: ${user.issueTitle}</h6>\r\n");
      out.write("                                      <div class=\"task-priority d-flex flex-column align-items-center justify-content-center\">\r\n");
      out.write("                                          <div class=\"avatar-list avatar-list-stacked m-0\">\r\n");
      out.write("                                          <img class=\"avatar rounded-circle\" src=\"${user.imageContents != null ? user.imageContents : '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/xs/마스코트_투명.png'}\" alt=\"\">\r\n");
      out.write("                                          </div>\r\n");
      out.write("                                          <span class=\"badge bg-warning text-end mt-2\">작성자: ${user.projectIssueWriter}</span>\r\n");
      out.write("                                      </div>\r\n");
      out.write("                                  </div>\r\n");
      out.write("                                  <p class=\"py-2 mb-0\">${user.issueContent}</p>\r\n");
      out.write("                                  <div class=\"tikit-info row g-3 align-items-center\">\r\n");
      out.write("                                      <div class=\"col-sm\">\r\n");
      out.write("                                          <ul class=\"d-flex list-unstyled align-items-center flex-wrap\">\r\n");
      out.write("                                              <li class=\"me-2\">\r\n");
      out.write("                                                  <div class=\"d-flex align-items-center\">\r\n");
      out.write("                                                      <i class=\"icofont-flag\"></i> <span class=\"ms-1\">${user.issueEventDate} ~ ${user.processEtDate} </span>\r\n");
      out.write("\r\n");
      out.write("                                                  </div>\r\n");
      out.write("                                              </li>\r\n");
      out.write("                                          </ul>\r\n");
      out.write("                                      </div>\r\n");
      out.write("                                      <div class=\"col-sm text-end\">\r\n");
      out.write("                                      ${user.trackerName ==='결함' ? `<span class=\"badge rounded-pill bg-danger\">${user.trackerName}</span>` \r\n");
      out.write("        \t\t\t\t\t\t\t\t\t\t:user.trackerName === '이벤트' ? `<span class=\"badge rounded-pill bg-info\">${user.trackerName}</span>` \r\n");
      out.write("        \t\t\t\t\t\t\t\t\t\t\t\t: `<span class=\"badge rounded-pill bg-primary\">${user.trackerName}</span>`}\r\n");
      out.write("                                      </div>\r\n");
      out.write("                                  </div>\r\n");
      out.write("                              </div>\r\n");
      out.write("\r\n");
      out.write("                          </li>\r\n");
      out.write("\t\t\t`\r\n");
      out.write("\t\t\t\t\t}\t)\r\n");
      out.write("\t\t\t\t})\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tlet createIssueData = {\r\n");
      out.write("\t\tprojectId:'',\r\n");
      out.write("\t\tissueTitle :'',\r\n");
      out.write("\t\tissueContent :'',\r\n");
      out.write("\t\tprocessEtDate:'',\r\n");
      out.write("\t\tprojectIssueCodeId :'',\r\n");
      out.write("\t\ttrackerId :'',\r\n");
      out.write("\t\talarms : [{\r\n");
      out.write("\t\t\tprojectIssueId: '',\r\n");
      out.write("\t\t\talarmContent: '',\r\n");
      out.write("\t\t\talarmSender: '',\r\n");
      out.write("\t\t\tsenderId:'',\r\n");
      out.write("\t\t\treceiverId:'',\r\n");
      out.write("\t\t\talarmReceiver: ''\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t]\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction clearInsertModal(){\r\n");
      out.write("\t\t$(\"issueTitle\").val('');\r\n");
      out.write("\t\t$(\"issueContent\").val('');\r\n");
      out.write("\t\t$(\"issueEndDate\").val('');\r\n");
      out.write("\t}\r\n");
      out.write("\t// ======================================이슈생성 알림대상자 리스트 뽑기\r\n");
      out.write("\t\tfunction alarmReceiver(){\r\n");
      out.write("\t\tconsole.log(\"오냐?리시버 리스트로 \")\r\n");
      out.write("\t// alarmReceiver\r\n");
      out.write("\t\t// let issueCode = document.querySelector(\"#issueCode\");\r\n");
      out.write("\t\t// let trackerCode = document.querySelector(\"#trackerCode\");\r\n");
      out.write("\r\n");
      out.write("\t\theaders['Content-Type'] = 'application/json'\r\n");
      out.write("\t\theaders['accept'] = 'application/json'\r\n");
      out.write("\t\tlet alarmReceiver = document.querySelector(\"#alarmReceiver\");\r\n");
      out.write("\t\taxios.get(`/ourmine/company/${companyIdHiddenValue}/project/${projectIdHiddenValue}/projectIssue/issueReceiverList`, {\r\n");
      out.write("\t\t\tparams: {\r\n");
      out.write("\t\t\t\tprojectId: projectIdHiddenValue\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t},{headers : headers})\r\n");
      out.write("\t\t\t\t.then(resp =>{\r\n");
      out.write("\t\t\t\t\tlet data = resp.data\r\n");
      out.write("\t\t\t\t\tconsole.log(\"리시버리스트:\",data)\r\n");
      out.write("\t\t\t\t\talarmReceiver.innerHTML+= data.map(item =>\r\n");
      out.write("\t\t\t\t\t\t\t`\r\n");
      out.write("\t\t\t\t\t<option selected value=\"${item.memberId}\" label=\"${item.memberName}\" >${item.memberName}</option>\r\n");
      out.write("\t\t\t\t` \r\n");
      out.write("\t\t\t\t\t).reduce(add)\r\n");
      out.write("\t\t\t\t})\r\n");
      out.write("\t\t}\t\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\t// =======================================이슈생성=======================================\r\n");
      out.write("\tfunction addIssue()  {\r\n");
      out.write("\t\tlet insertForm = document.querySelector(\".insertIssueForm\");\r\n");
      out.write("\t\tinsertForm.addEventListener('submit', function(e){\r\n");
      out.write("\t\t\te.preventDefault();\r\n");
      out.write("\t\t\tconsole.log(\"이슈인써트 오냐?\");\r\n");
      out.write("\t\t\tlet istitledata = $(\"#issueTitle\").val();\r\n");
      out.write("\t\t\tlet iscontentdata = $(\"#issueContent\").val();\r\n");
      out.write("\t\t\tlet isenddatedata = $(\"#issueEndDate\").val();\r\n");
      out.write("\t\t\tlet projectiddata = document.querySelector('#projectIdHidden');\r\n");
      out.write("\t\t\tconst selectIsCode = document.getElementById(\"issueCodeList\");\r\n");
      out.write("\t\t\tconst selectedIsCodeValue = selectIsCode.value;\r\n");
      out.write("\t\t\tconsole.log(\"selectedValue: \", selectedIsCodeValue);\r\n");
      out.write("\t\t\tconsole.log(\"isenddatedata: \", isenddatedata);\r\n");
      out.write("\t\t\tconst selectIsTrackerCode = document.getElementById(\"trackerCodeList\");\r\n");
      out.write("\t\t\tconst selectedIsTrackerCode = selectIsTrackerCode.value;\r\n");
      out.write("\t\t\tconsole.log(\"selectedselectIsTrackerCode: \", selectedIsTrackerCode);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tconst alarmReceiver = document.getElementById(\"alarmReceiver\"); // 이슈 알림 대상자 <select> 요소\r\n");
      out.write("\t\t\tconst selectedOptions = alarmReceiver.selectedOptions; // 선택된 <option> 요소들의 유사 배열 객체\r\n");
      out.write("\r\n");
      out.write("\t\t\tconst selectedValues = [];\r\n");
      out.write("\t\t\tArray.prototype.forEach.call(selectedOptions, (option) => {\r\n");
      out.write("\t\t\t  selectedValues.push(option.value); // 선택된 <option> 요소의 값을 배열에 추가\r\n");
      out.write("\t\t\t  selectedValues.push(option.label); // 선택된 <option> 요소의 값을 배열에 추가\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tconsole.log(\"selectedValues\", selectedValues); // 선택된 값들이 저장된 배열 출력\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tcreateIssueData.issueTitle = istitledata;\r\n");
      out.write("\t\t\tcreateIssueData.issueContent = iscontentdata;\r\n");
      out.write("\t\t\tcreateIssueData.processEtDate = isenddatedata;\r\n");
      out.write("\t\t\tcreateIssueData.projectIssueCodeId = selectedIsCodeValue;\r\n");
      out.write("\t\t\tcreateIssueData.trackerId = selectedIsTrackerCode;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar alarms = new Array();\r\n");
      out.write("\t\t\tvar selectedObj = $(\"#alarmReceiver\").find(\"option:selected\");\r\n");
      out.write("\r\n");
      out.write("\t\t\t$(selectedObj).each(function(index, obj){\r\n");
      out.write("\t\t\t       var data = {\r\n");
      out.write("\t\t\t    \t\t   \r\n");
      out.write("\t\t\t    \t\treceiverId: $(obj).val(),\r\n");
      out.write("\t\t\t\t\t\talarmReceiver: $(obj).text()\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t    alarms.push(data); \r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tcreateIssueData.alarms = alarms;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tconsole.log(\"title : \",createIssueData.issueTitle);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// 선택된 값 배열에 저장하기 \r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t \r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tconsole.log(\"마지막createIssueData: \", createIssueData);\r\n");
      out.write("\t\t\theaders['Content-Type'] = 'application/json'\r\n");
      out.write("\t\t\theaders['accept'] = 'application/json'\r\n");
      out.write("\t\t\taxios.post(`/ourmine/company/${companyIdHiddenValue}/project/${projectIdHiddenValue}/projectIssue/projectIssueCreate`,createIssueData,{headers : headers})\r\n");
      out.write("\t\t\t\t\t.then(resp => {\r\n");
      out.write("\t\t\t\t\t\tlet data = resp.data\r\n");
      out.write("\t\t\t\t\t\tconsole.log(\"createIssueData\", data)\r\n");
      out.write("\t\t\t\t\t\tclearInsertModal();\r\n");
      out.write("\t\t\t\t\t\t$(\"#tickadd\").modal(\"hide\");\r\n");
      out.write("\t\t\t\t\t\tclearIssueList();\r\n");
      out.write("\t\t\t\t\t\tissueList();\r\n");
      out.write("\t\t\t\t\t\tissueListBottom ();\r\n");
      out.write("\t\t\t\t\t\tissueDetail();\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\tSwal.fire({\r\n");
      out.write("\t\t\t\t\t\t\ticon: 'success',\r\n");
      out.write("\t\t\t\t\t\t\ttitle:'등록완료',\r\n");
      out.write("\t\t\t\t\t\t\tshowConfirmButton: false,\r\n");
      out.write("\t\t\t\t\t\t\ttimer: 800\r\n");
      out.write("\t\t\t\t\t})\r\n");
      out.write("\t\t\t\t\t})\r\n");
      out.write("\r\n");
      out.write("\t\t})\r\n");
      out.write("\t}\r\n");
      out.write("\t// ===================이슈추가에서 이슈코드 트래커코드 리스트 뿌리기 ===================\r\n");
      out.write("\tfunction addIssueCodeList(){\r\n");
      out.write("\t\tconsole.log(\"오냐?코드선택리스트로?\")\r\n");
      out.write("// issueCode,  trackerCode 리스트 /issueCode\r\n");
      out.write("\t\tlet issueCode = document.querySelector(\"#issueCodeList\");\r\n");
      out.write("\t\tlet trackerCode = document.querySelector(\"#trackerCodeList\");\r\n");
      out.write("\r\n");
      out.write("\t\theaders['Content-Type'] = 'application/json'\r\n");
      out.write("\t\theaders['accept'] = 'application/json'\r\n");
      out.write("\t\taxios.get(`/ourmine/company/${companyIdHiddenValue}/project/${projectIdHiddenValue}/projectIssue/issueCode`,{headers : headers})\r\n");
      out.write("\t\t\t\t.then(resp =>{\r\n");
      out.write("\t\t\t\t\tlet data = resp.data\r\n");
      out.write("\t\t\t\t\tconsole.log(\"data:\",data)\r\n");
      out.write("\t\t\t\t\tissueCode.innerHTML+= data.map(item =>\r\n");
      out.write("\t\t\t\t\t\t\t`\r\n");
      out.write("\t\t\t\t\t<option value=\"${item.projectIssueCodeId}\">${item.projectIssueCodeName}</option>\r\n");
      out.write("\t\t\t\t`\r\n");
      out.write("\t\t\t\t\t).reduce(add)\r\n");
      out.write("\t\t\t\t})\r\n");
      out.write("\r\n");
      out.write("\t\taxios.get(`/ourmine/company/${companyIdHiddenValue}/project/${projectIdHiddenValue}/projectIssue/trackerCode`,{headers : headers})\r\n");
      out.write("\t\t\t\t.then(resp =>{\r\n");
      out.write("\t\t\t\t\tlet data = resp.data\r\n");
      out.write("\t\t\t\t\tconsole.log(\"data:\",data)\r\n");
      out.write("\t\t\t\t\ttrackerCode.innerHTML+= data.map(item =>\r\n");
      out.write("\t\t\t\t\t\t\t`\r\n");
      out.write("\t\t\t\t\t<option value=\"${item.trackerId}\">${item.trackerName}</option>\r\n");
      out.write("\t\t\t\t`\r\n");
      out.write("\t\t\t\t\t).reduce(add)\r\n");
      out.write("\t\t\t\t})\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t// ===================검색 기능===================\r\n");
      out.write("\tsearchIssue.addEventListener('input', () => {\r\n");
      out.write("\r\n");
      out.write("\t\tconsole.log('실행되나?');\r\n");
      out.write("\t\theaders['Content-Type'] = 'application/json'\r\n");
      out.write("\t\theaders['accept'] = 'application/json'\r\n");
      out.write("\t\tlet search = searchIssue.value;\r\n");
      out.write("\t\tif (search.trim() === '') {\r\n");
      out.write("\t\t\tconsole.log(\"트림트림\")\r\n");
      out.write("\t\t\tclearIssueList();\r\n");
      out.write("\t\t\tissueList();\r\n");
      out.write("\t\t\tissueListBottom ();\r\n");
      out.write("\t\t\tissueDetail();\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\r\n");
      out.write("\t\t\taxios.get(`/ourmine/company/${companyIdHiddenValue}/project/${projectIdHiddenValue}/projectIssue/issueList`, {\r\n");
      out.write("\t\t\t\t\t\tparams: {\r\n");
      out.write("\t\t\t\t\t\t\tsearch: search\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}, {headers: headers},\r\n");
      out.write("\t\t\t).then(resp => {\r\n");
      out.write("\t\t\t\tlet data = resp.data;\r\n");
      out.write("\t\t\t\tconsole.log(\"searchData\", data);\r\n");
      out.write("\t\t\t\tclearIssueListMain();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tproList.innerHTML+= data.map(item =>\r\n");
      out.write("\t\t\t\t\t\t`\r\n");
      out.write("           \t\t\t\t\t\t<tr data-projectissueid =${item.projectIssueId} data-issuetitle=${item.issueTitle} data-issuewriter=${item.projectIssueWriter} data-issueeventdate =\t${item.issueEventDate}\r\n");
      out.write("\t\t\t\t\t\t\tdata-issuecontent =${item.issueContent} data-issueenddate =${item.processEtDate} data-issuecodename=${item.projectIssueCodeName} data-issuetrackername = ${item.trackerName} data-issuestatusname=${item.projectStatusName} class=\"nowIssueList\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<a class=\"fw-bold text-secondary\">${item.projectIssueId}</a>\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td class=\"issueDetail\" data-issueiddata=${item.projectIssueId} data-bs-toggle=\"modal\" data-bs-target=\"#issueDetail\" >\r\n");
      out.write("\t\t\t\t\t\t\t\t${item.issueTitle}\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t<img class=\"avatar rounded-circle\" src=\"${item.imageContents != null ? item.imageContents : '#'}\" alt=\"\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<span class=\"fw-bold ms-1\">${item.projectIssueWriter}</span>\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t${item.issueEventDate}\r\n");
      out.write("\t\t\t\t\t\t   </td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t${item.projectStatusId===1 ? `<span class=\"badge bg-warning\" data-issueid=${item.projectStatusId}>${item.projectStatusName}</span>` : `<span class=\"badge bg-success\" data-issueid=${item.projectStatusId}>${item.projectStatusName}</span>`}\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t <td>\r\n");
      out.write("\t\t\t\t\t\t\t\t <div class=\"btn-group\" role=\"group\" aria-label=\"Basic outlined example\">\r\n");
      out.write("\t\t\t\t\t\t\t\t ${item.projectStatusId===1 && item.projectRoleId===1 ? `<button data-projectissueiddata =${item.projectIssueId} type=\"button\" class = \"btn btn-outline-success issueCheckBtn\" >체크</button>` : `<span></span>`}\r\n");
      out.write("\t\t\t\t\t\t\t\t </div>\r\n");
      out.write("\t\t\t\t\t\t\t </td>\r\n");
      out.write("\t\t\t\t\t\t </tr>\r\n");
      out.write("\r\n");
      out.write("            `\r\n");
      out.write("\t\t\t).reduce(add)\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t}).then(test=>{\r\n");
      out.write("\t\t\t\tissueDetail();\r\n");
      out.write("\t\t\t})\r\n");
      out.write("\t\t}\r\n");
      out.write("\t})\r\n");
      out.write("\r\n");
      out.write("\t//=================== 이슈리스트 전부 클리어===================\r\n");
      out.write("\tfunction clearIssueList() {\r\n");
      out.write("\t\tlet element = document.querySelector(\"#issueList\");\r\n");
      out.write("\t\telement.innerHTML = '';\r\n");
      out.write("\t\tstatusLow.innerHTML ='';\r\n");
      out.write("\t\tstatusMid.innerHTML ='';\r\n");
      out.write("\t\tstatusHigh.innerHTML ='';\r\n");
      out.write("\t}\r\n");
      out.write("\t// ===================이슈리스트 상위부분만 클리어 ===================\r\n");
      out.write("\tfunction clearIssueListMain(){\r\n");
      out.write("\t\tlet element = document.querySelector(\"#issueList\");\r\n");
      out.write("\t\telement.innerHTML = '';\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tlet updateIssueStatusData = {\r\n");
      out.write("\t\tprojectIssueId :''\r\n");
      out.write("\t}\r\n");
      out.write("\tissueDetail();\r\n");
      out.write("\tfunction issueDetail() {\r\n");
      out.write("\r\n");
      out.write("\t\t$(\".nowIssueList\").on('click', function (){\r\n");
      out.write("// \t\t\tdebugger;\r\n");
      out.write("\t\t\tlet issueTitle = $(this).data(\"issuetitle\");\r\n");
      out.write("\t\t\tlet issueId = $(this).data(\"projectissueid\");\r\n");
      out.write("\t\t\tlet issueContent = $(this).data(\"issuecontent\");\r\n");
      out.write("// \t\t\tlet issueContent = $(this).find(\".issueContentHidden\").val();\r\n");
      out.write("\t\t\tlet issueWriter = $(this).data(\"issuewriter\");\r\n");
      out.write("\t\t\tlet issueEventDate = $(this).data(\"issueeventdate\");\r\n");
      out.write("\t\t\tlet processEtDate = $(this).data(\"issueenddate\");\r\n");
      out.write("\t\t\tlet projectIssueCodeName = $(this).data(\"issuecodename\")\r\n");
      out.write("\t\t\tlet trackerName = $(this).data(\"issuetrackername\")\r\n");
      out.write("\t\t\tlet projectStatusName = $(this).data(\"issuestatusname\")\r\n");
      out.write("\t\t\tlet projectIssueComment = $(this).data(\"issuecomment\")\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tconsole.log(\"issueId : \",issueId);\r\n");
      out.write("\t\t\tconsole.log(\"issueTitle : \",issueTitle);\r\n");
      out.write("\t\t\tconsole.log(\"issueContent : \",issueContent);\r\n");
      out.write("\t\t\tconsole.log(\"issueWriter : \", issueWriter);\r\n");
      out.write("\t\t\tconsole.log(\"issueEventDate : \", issueEventDate);\r\n");
      out.write("\t\t\tconsole.log(\"processEtDate : \", processEtDate);\r\n");
      out.write("\t\t\tconsole.log(\"projectIssueCodeName : \", projectIssueCodeName);\r\n");
      out.write("\t\t\tconsole.log(\"trackerName : \", trackerName);\r\n");
      out.write("\t\t\tconsole.log(\"projectStatusName : \", projectStatusName);\r\n");
      out.write("\t\t\tconsole.log(\"projectIssueComment : \", projectIssueComment);\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t$(\"#basicIssueWriter\").val(issueWriter);\r\n");
      out.write("\t\t\t$(\"#basicIssueTitle\").val(issueTitle);\r\n");
      out.write("\t\t\t$(\"#basicIssueContent\").val(issueContent);\r\n");
      out.write("\t\t\t$(\"#basicIssueStatus\").val(projectIssueCodeName);\r\n");
      out.write("\t\t\t$(\"#basicIssueTracker\").val(trackerName);\r\n");
      out.write("\t\t\t$(\"#basicIssueEventDate\").val(issueEventDate);\r\n");
      out.write("\t\t\t$(\"#basicIssueEndDate\").val(processEtDate);\r\n");
      out.write("\t\t\t$(\"#basicIssueProcess\").val(projectStatusName);\r\n");
      out.write("\t\t\t$(\"#basicIssueComment\").val(projectIssueComment);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif($(\"#basicIssueProcess\").val()==\"STARTED\"){\r\n");
      out.write("\t\t\t\t$(\"#basicIssueComment\").css(\"display\",\"none\")\r\n");
      out.write("\t\t\t\t$(\"#commentLabel\").css(\"display\",\"none\")\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif($(\"#basicIssueProcess\").val()==\"COMPLETED\"){\r\n");
      out.write("\t\t\t\t$(\"#basicIssueComment\").css(\"display\",\"block\")\r\n");
      out.write("\t\t\t\t$(\"#commentLabel\").css(\"display\",\"block\")\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tupdateIssueStatus();\r\n");
      out.write("\t\t\tupdateIssueStatusData.projectIssueId = issueId;\r\n");
      out.write("\t\t\tfunction updateIssueStatus(){\r\n");
      out.write("\t\t\t\tlet updateStatusForm = document.querySelector(\".updateIssueStatusForm\");\r\n");
      out.write("\t\t\t\tlet completeButton = document.querySelector(\".completeBtn\");\r\n");
      out.write("\t\t\t\tcompleteButton.addEventListener('click', function (e){\r\n");
      out.write("\t\t\t\t\te.preventDefault();\r\n");
      out.write("\t\t\t\t\theaders['Content-Type'] = 'application/json'\r\n");
      out.write("\t\t\t\t\theaders['accept'] = 'application/json'\r\n");
      out.write("\t\t\t\t\taxios.get(`/ourmine/company/${companyIdHiddenValue}/project/${projectIdHiddenValue}/projectIssue/issueView`,{\r\n");
      out.write("\t\t\t\t\t\tparams: {\r\n");
      out.write("\t\t\t\t\t\t\tprojectIssueId: updateIssueStatusData.projectIssueId\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t},{headers : headers})\r\n");
      out.write("\t\t\t\t\t\t\t.then(resp => {\r\n");
      out.write("\t\t\t\t\t\t\t\tlet data = resp.data\r\n");
      out.write("\t\t\t\t\t\t\t\tconsole.log(\"projectIssueStatusUpdate\", data)\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t})\r\n");
      out.write("\t\t\t\t})\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t})\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t// =========================================== 이슈상태 변경 complete으로 ===========================================\r\n");
      out.write("$(document).on('click', '.issueCheckBtn', function(e) {\r\n");
      out.write("  let issueId = $(this).data(\"projectissueiddata\");\r\n");
      out.write("  console.log(\"스윗안issueId: \", issueId);\r\n");
      out.write("  console.log(\"스윗알랏오냐?\");\r\n");
      out.write("\r\n");
      out.write("  e.preventDefault();\r\n");
      out.write("\r\n");
      out.write("  Swal.fire({\r\n");
      out.write("    icon: 'question',\r\n");
      out.write("    title: '이슈를 확인처리 하시겠습니까?',\r\n");
      out.write("    showCancelButton: true,\r\n");
      out.write("    confirmButtonText: 'COMPLETED',\r\n");
      out.write("    cancelButtonText: 'CANCEL'\r\n");
      out.write("  }).then(function(result) {\r\n");
      out.write("    if (result.isConfirmed) {\r\n");
      out.write("      Swal.fire({\r\n");
      out.write("        title: '이슈확인 코멘트 남기기',\r\n");
      out.write("//         input: 'text',\r\n");
      out.write("        input: 'select',\r\n");
      out.write("        inputPlaceholder: '텍스트를 입력하세요',\r\n");
      out.write("        inputOptions: {\r\n");
      out.write("        \t'코드 수정 완료했습니다.': '코드 수정 완료했습니다.',\r\n");
      out.write("        \t'일정 변경 완료했습니다.': '일정 변경 완료했습니다.'\r\n");
      out.write("        },\r\n");
      out.write("        showCancelButton: true,\r\n");
      out.write("        confirmButtonText: '등록',\r\n");
      out.write("        cancelButtonText: '취소',\r\n");
      out.write("        inputValidator: (value) => {\r\n");
      out.write("          // 입력값 유효성 검사\r\n");
      out.write("          if (!value) {\r\n");
      out.write("            return '텍스트를 입력해야 합니다.';\r\n");
      out.write("          }\r\n");
      out.write("        }\r\n");
      out.write("      }).then(function(result) {\r\n");
      out.write("        if (result.isConfirmed) {\r\n");
      out.write("          const userInput = result.value;\r\n");
      out.write("            headers['Content-Type'] = 'application/json'\r\n");
      out.write("  \t\t\theaders['accept'] = 'application/json'\r\n");
      out.write("  \t\t\tlet updateStatusData = {\r\n");
      out.write("            \tprojectIssueId:'',\r\n");
      out.write("            \tprojectIssueComment:''\r\n");
      out.write("            }\r\n");
      out.write("            updateStatusData.projectIssueComment = userInput;\r\n");
      out.write("            updateStatusData.projectIssueId = issueId;\r\n");
      out.write("            console.log(\"projectIssueComment\",updateStatusData.projectIssueComment);\r\n");
      out.write("            console.log(\"업데이트projectIssueId\",updateStatusData.projectIssueId);\r\n");
      out.write("            \r\n");
      out.write("          const request1 = axios.post(`/ourmine/company/${companyIdHiddenValue}/project/${projectIdHiddenValue}/projectIssue/projectIssueComment`,updateStatusData,{headers : headers});\r\n");
      out.write("          headers['Content-Type'] = 'application/json'\r\n");
      out.write("    \t  headers['accept'] = 'application/json'\r\n");
      out.write("          const request2 = axios.get(`/ourmine/company/${companyIdHiddenValue}/project/${projectIdHiddenValue}/projectIssue/projectIssueStatusUpdate`, {\r\n");
      out.write("            params: {\r\n");
      out.write("              projectIssueId: issueId\r\n");
      out.write("            },\r\n");
      out.write("            headers: { headers} });\r\n");
      out.write("         \r\n");
      out.write("\r\n");
      out.write("          Promise.all([request1, request2])\r\n");
      out.write("            .then(responses => {\r\n");
      out.write("              // 두 개의 요청이 모두 성공한 경우\r\n");
      out.write("              const response1 = responses[0];\r\n");
      out.write("              const response2 = responses[1];\r\n");
      out.write("              // 각 응답 데이터 처리\r\n");
      out.write("              console.log('텍스트에 관련된 Ajax 요청 성공:', response1.data);\r\n");
      out.write("              console.log('완료 처리에 대한 Ajax 요청 성공:', response2.data);\r\n");
      out.write("              // 추가 로직 실행\r\n");
      out.write("              clearIssueList();\r\n");
      out.write("              issueList();\r\n");
      out.write("              issueListBottom();\r\n");
      out.write("              issueDetail();\r\n");
      out.write("            })\r\n");
      out.write("            .catch(error => {\r\n");
      out.write("              // 두 개의 요청 중 하나라도 실패한 경우\r\n");
      out.write("              console.log('Ajax 요청 실패:', error);\r\n");
      out.write("              // 오류 처리 로직 실행\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("      });\r\n");
      out.write("    }\r\n");
      out.write("  });\r\n");
      out.write("});\r\n");
      out.write("function getCurrentDate() {\r\n");
      out.write("    var today = new Date();\r\n");
      out.write("    var yyyy = today.getFullYear();\r\n");
      out.write("    var mm = String(today.getMonth() + 1).padStart(2, '0'); // 0부터 시작하므로 1을 더함\r\n");
      out.write("    var dd = String(today.getDate()).padStart(2, '0');\r\n");
      out.write("    return yyyy + '-' + mm + '-' + dd;\r\n");
      out.write("}\r\n");
      out.write("$('#autoBtn').on('click',function(){\r\n");
      out.write("\tconsole.log(\"자동완성클릭\");\r\n");
      out.write("$(\"#issueTitle\").val(\"이슈이름\");\r\n");
      out.write("$(\"#issueContent\").val(\"이슈내용\");\r\n");
      out.write("document.getElementById(\"issueCodeList\").value = 3;\r\n");
      out.write("document.getElementById(\"trackerCodeList\").value = 3;\r\n");
      out.write("document.getElementById(\"issueEndDate\").value = getCurrentDate();\r\n");
      out.write("})\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_security_005fauthentication_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  security:authentication
    org.springframework.security.taglibs.authz.AuthenticationTag _jspx_th_security_005fauthentication_005f0 = (org.springframework.security.taglibs.authz.AuthenticationTag) _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fvar_005fproperty_005fnobody.get(org.springframework.security.taglibs.authz.AuthenticationTag.class);
    boolean _jspx_th_security_005fauthentication_005f0_reused = false;
    try {
      _jspx_th_security_005fauthentication_005f0.setPageContext(_jspx_page_context);
      _jspx_th_security_005fauthentication_005f0.setParent(null);
      // /WEB-INF/jsp/project/projectIssue/projectIssueList.jsp(256,0) name = property type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_security_005fauthentication_005f0.setProperty("principal");
      // /WEB-INF/jsp/project/projectIssue/projectIssueList.jsp(256,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_security_005fauthentication_005f0.setVar("principal");
      int _jspx_eval_security_005fauthentication_005f0 = _jspx_th_security_005fauthentication_005f0.doStartTag();
      if (_jspx_th_security_005fauthentication_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fvar_005fproperty_005fnobody.reuse(_jspx_th_security_005fauthentication_005f0);
      _jspx_th_security_005fauthentication_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_security_005fauthentication_005f0, _jsp_getInstanceManager(), _jspx_th_security_005fauthentication_005f0_reused);
    }
    return false;
  }
}
