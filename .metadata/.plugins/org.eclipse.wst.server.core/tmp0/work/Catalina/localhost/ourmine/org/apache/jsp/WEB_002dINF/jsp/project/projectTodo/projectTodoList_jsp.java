/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2023-06-11 09:11:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.project.projectTodo;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class projectTodoList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(6);
    _jspx_dependants.put("jar:file:/E:/A_TeachingMaterial/05_JSP_Spring/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/ourmine/WEB-INF/lib/spring-security-taglibs-5.7.8.jar!/META-INF/security.tld", Long.valueOf(1681713972000L));
    _jspx_dependants.put("/WEB-INF/lib/spring-security-taglibs-5.7.8.jar", Long.valueOf(1683020361417L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1679567181629L));
    _jspx_dependants.put("jar:file:/E:/A_TeachingMaterial/05_JSP_Spring/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/ourmine/WEB-INF/lib/spring-webmvc-5.3.6.jar!/META-INF/spring.tld", Long.valueOf(1618279800000L));
    _jspx_dependants.put("jar:file:/E:/A_TeachingMaterial/05_JSP_Spring/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/ourmine/WEB-INF/lib/jstl-1.2.jar!/META-INF/c-1_0.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/spring-webmvc-5.3.6.jar", Long.valueOf(1680657633229L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fvar_005fproperty_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fvar_005fproperty_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fvar_005fproperty_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("    #todoDiv {\r\n");
      out.write("        display: none;\r\n");
      out.write("    }\r\n");
      out.write("    .con {\r\n");
      out.write("    \tmargin-top: 7px;\r\n");
      out.write("    \ttext-decoration: none;\r\n");
      out.write("    }\r\n");
      out.write("    .btnMargin {\r\n");
      out.write("    \tmargin-right: 20px;\r\n");
      out.write("    }\r\n");
      out.write("    .modal {\r\n");
      out.write("    \tdisplay: none;\r\n");
      out.write("    }\r\n");
      out.write("    .insert {\r\n");
      out.write("    \tfloat: right;\r\n");
      out.write("    }\r\n");
      out.write("    .newBtn {\r\n");
      out.write("    \tmargin-right: 30px;\r\n");
      out.write("    }\r\n");
      out.write("    #completeDiv {\r\n");
      out.write("    \tfloat: right;\r\n");
      out.write("    }\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\tconst autoTodo1 = () => {\r\n");
      out.write("\t\tvar todoTitleInput = document.getElementById(\"todoTitle\");\r\n");
      out.write("\t\ttodoTitleInput.value = \"코드게시판\";\r\n");
      out.write("\t\tvar todoContentInput = document.getElementById(\"todoContent\");\r\n");
      out.write("\t\ttodoContentInput.value = \"코드오류 이슈 확인 후 코드 수정/등록\";\r\n");
      out.write("\t}\n");
      out.write("\tconst autoTodo2 = () => {\r\n");
      out.write("\t\tvar todoTitleInput = document.getElementById(\"todoTitle\");\r\n");
      out.write("\t\ttodoTitleInput.value = \"코드게시판\";\r\n");
      out.write("\t\tvar todoContentInput = document.getElementById(\"todoContent\");\r\n");
      out.write("\t\ttodoContentInput.value = \"공통으로 사용하는 모달 코드를 올리기\";\r\n");
      out.write("\t}\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<div class=\"body d-flex py-lg-3 py-md-2\">\r\n");
      out.write("    <div class=\"container-xxl\">\r\n");
      out.write("\t    <div class=\"border-0 mb-4\">\r\n");
      out.write("\t        <div class=\"card-header py-3 no-bg bg-transparent d-flex align-items-center px-0 justify-content-between border-bottom flex-wrap\">\r\n");
      out.write("\t            <h3 class=\"fw-bold mb-0\">나의 일감</h3>\r\n");
      out.write("\t        </div>\r\n");
      out.write("\t    </div>\r\n");
      out.write("        \r\n");
      out.write("        <!-- TodoList 목록 -->\r\n");
      out.write("        <div class=\"row mb-3\" id=\"todoDiv\" >\r\n");
      out.write("            <div class=\"col-12\">\r\n");
      out.write("                <div class=\"card\">\r\n");
      out.write("\t\t\t\t\t<div class=\"card-header py-3 d-flex justify-content-between bg-transparent border-bottom-0\">\r\n");
      out.write("\t\t\t\t\t\t<h4 class=\"mb-0 fw-bold\">Todo List</h4>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-auto d-flex\">\r\n");
      out.write("\t\t\t\t\t\t\t<button type=\"button\" class=\"btn-close\" aria-label=\"Close\" onclick=\"todoDivHidden()\"></button>\r\n");
      out.write("\t\t\t\t\t\t</div> \r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"card-body p-2\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"btn-group me-2 insert\">\r\n");
      out.write("\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark newBtn\" data-bs-toggle=\"modal\" onclick=\"addModalOpen()\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<i class=\"icofont-plus-circle me-2 fs-6\"></i> 글등록\r\n");
      out.write("\t\t\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"card-body p-4\">\r\n");
      out.write("                        <ul class=\"list-unstyled mb-0\" id=\"todoList\" >\r\n");
      out.write("                        \r\n");
      out.write("                        </ul>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div> \r\n");
      out.write("        \r\n");
      out.write("\t    <!-- todo 등록 모달-->\r\n");
      out.write("\t    <form id=\"insertForm\" method=\"post\">\r\n");
      out.write("\t        <div class=\"modal\" id=\"todoAddModal\" tabindex=\"-1\" aria-hidden=\"true\">\r\n");
      out.write("\t            <div class=\"modal-dialog modal-dialog-centered modal-md modal-dialog-scrollable\">\r\n");
      out.write("\t                <div class=\"modal-content\">\r\n");
      out.write("\t                    <div class=\"modal-header\">\r\n");
      out.write("\t                        <h5 class=\"modal-title  fw-bold\" id=\"leaveaddLabel\"> 글등록 </h5>\r\n");
      out.write("\t                    </div>\r\n");
      out.write("\t                    <div class=\"modal-body\">\r\n");
      out.write("\t                        <div class=\"deadline-form\">\r\n");
      out.write("                                <div class=\"row g-3 mb-3\">\r\n");
      out.write("                                    <div class=\"col\">\r\n");
      out.write("                                        <label class=\"form-label\">제목</label>\r\n");
      out.write("                                        <input type=\"text\" class=\"form-control\" id=\"todoTitle\" name=\"todoTitle\" required>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                    <div class=\"col\">\r\n");
      out.write("                                        <label class=\"form-label\">작성자</label>\r\n");
      out.write("                                        <input type=\"text\" class=\"form-control\" id=\"todoWriter\" name=\"todoWriter\" value=\"\" readonly>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                </div>\r\n");
      out.write("\t                        </div>\r\n");
      out.write("\t                        <div class=\"mb-3\">\r\n");
      out.write("\t                            <label for=\"todoContent\" class=\"form-label\">내용</label>\r\n");
      out.write("\t                            <textarea rows=\"3\" cols=\"50\" class=\"form-control\" id=\"todoContent\" name=\"todoContent\" required></textarea>\r\n");
      out.write("\t                        </div>\r\n");
      out.write("\t                        <div class=\"mb-3\">\r\n");
      out.write("                            \t<input type=\"hidden\" class=\"form-control\" id=\"projectWorkId\" name=\"projectWorkId\" value=\"\">\r\n");
      out.write("                            \t<input type=\"hidden\" class=\"form-control\" id=\"todoId\" name=\"todoId\" value=\"\" >\r\n");
      out.write("                            </div>\r\n");
      out.write("\t                    </div>\r\n");
      out.write("\t                    <div class=\"modal-footer\">\r\n");
      out.write("\t                    \t<button type=\"button\" class=\"btn\" style=\"color:gray;\" onclick=\"autoTodo1()\">자동완성1</button>\r\n");
      out.write("\t                        <button type=\"button\" class=\"btn\" style=\"color:gray;\" onclick=\"autoTodo2()\">자동완성2</button>\r\n");
      out.write("\t                        <button type=\"button\" class=\"btn btn-secondary\" onclick=\"addModalClose()\">취소</button>\r\n");
      out.write("\t                        <button type=\"submit\" class=\"btn btn-primary\" id=\"addButton\">등록</button>\r\n");
      out.write("\t                    </div>\r\n");
      out.write("\t                </div>\r\n");
      out.write("\t            </div>\r\n");
      out.write("\t        </div>\r\n");
      out.write("        </form>\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- 나의 일감 리스트 -->\r\n");
      out.write("        <div class=\"row clearfix g-3\">\r\n");
      out.write("            <div class=\"col-sm-12\">\r\n");
      out.write("                <div class=\"card mb-3\">\r\n");
      out.write("                    <div class=\"card-body\">\r\n");
      out.write("                    <input type=\"text\" class=\"form-control\" placeholder=\"검색...\" id=\"searchProjectWork\" >\r\n");
      out.write("                        <table id=\"myProjectTable\" class=\"table table-hover align-middle mb-0\" style=\"width:100%\">\r\n");
      out.write("                            <thead>\r\n");
      out.write("                                <tr>\r\n");
      out.write("                                    <th>번호</th>\r\n");
      out.write("                                    <th>상태</th>\r\n");
      out.write("                                    <th>우선순위</th> \r\n");
      out.write("                                    <th>제목</th> \r\n");
      out.write("                                    <th>시작일</th>\r\n");
      out.write("                                    <th>마감일</th>  \r\n");
      out.write("                                </tr>\r\n");
      out.write("                                </thead>\r\n");
      out.write("                            <tbody id=\"mypwList\">\r\n");
      out.write("                            \t<tr style=\"display: none;\">\r\n");
      out.write("                                    <th>번호</th>\r\n");
      out.write("                                    <th>상태</th>\r\n");
      out.write("                                    <th>우선순위</th> \r\n");
      out.write("                                    <th>제목</th> \r\n");
      out.write("                                    <th>시작일</th>  \r\n");
      out.write("                                    <th>마감일</th>  \r\n");
      out.write("                                </tr>\r\n");
      out.write("                            </tbody>\r\n");
      out.write("                        </table>\r\n");
      out.write("                        <nav aria-label=\"Page navigation\">\r\n");
      out.write("\t\t\t\t\t\t    <div>\r\n");
      out.write("\t\t\t\t\t\t\t    <ul style=\"display: flex\" class=\"pagination justify-content-center\">\r\n");
      out.write("\t\t\t\t\t\t\t        <li class=\"page-item disabled\" >  <a class=\"page-link\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">Previous</a>  </li>\r\n");
      out.write("\t\t\t\t\t\t\t        <li class=\"page-item\" style=\"display: flex\" id=\"pwContainer\"><a class=\"page-link\" href=\"#\">1</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t        <li class=\"page-item\">  <a class=\"page-link\" href=\"#\">Next</a> </li>\r\n");
      out.write("\t\t\t\t\t\t\t    </ul>\r\n");
      out.write("\t\t\t\t\t\t    </div>\r\n");
      out.write("\t\t\t\t\t\t</nav>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div><!-- Row End -->\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      if (_jspx_meth_security_005fauthentication_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("<input id=\"projectIdHidden\" type=\"hidden\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${projectId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("<input id=\"companyIdHidden\" type=\"hidden\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${companyId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("\r\n");
      out.write("<!-- ================================================================================================= -->\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t// 검색\r\n");
      out.write("\tlet searchProjectWork = document.querySelector(\"#searchProjectWork\");\r\n");
      out.write("\t\r\n");
      out.write("\tconst selectmypwList = {\r\n");
      out.write("\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("    let reset =  document.querySelector('.reset');\r\n");
      out.write("\tlet projectWorkId =  document.querySelector('#projectWorkId');\r\n");
      out.write("\tlet todoId =  document.querySelector('#todoId');\r\n");
      out.write("\tlet todoWriter =  document.querySelector('#todoWriter');\r\n");
      out.write("\r\n");
      out.write("\tconst todo = {\r\n");
      out.write("\t    projectWorkId : '',\r\n");
      out.write("        todoId : '',\r\n");
      out.write("\t    memberName : '',\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tconst add = (a,b) => a + b;\r\n");
      out.write("\t\r\n");
      out.write("\tlet projectIdHidden = document.querySelector('#projectIdHidden');\r\n");
      out.write("\tlet projectIdHiddenValue = projectIdHidden.value;\r\n");
      out.write("\tconsole.log(\"projectIdHiddenValue: \", projectIdHiddenValue);\r\n");
      out.write("    \r\n");
      out.write("\tlet companyIdHidden = document.querySelector('#companyIdHidden');\r\n");
      out.write("\tlet companyIdHiddenValue = companyIdHidden.value;\r\n");
      out.write("\tconsole.log(\"companyIdHiddenValue: \", companyIdHiddenValue);\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("//<!-- ================================================================================================= -->\t\r\n");
      out.write("\t// 글작성 버튼 클릭 이벤트(모달)\r\n");
      out.write("    const addModal = document.querySelector(\"#todoAddModal\");\r\n");
      out.write("\t\r\n");
      out.write("\tconst addModalClose = () => {\r\n");
      out.write("\t\taddModal.style.display = \"none\";    // 안보이게\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tconst addModalOpen = () => {\r\n");
      out.write("\t\t$('#insertForm')[0].reset();\r\n");
      out.write("\t\taddModal.style.display = \"block\";    // 보이게\r\n");
      out.write("\t\t\r\n");
      out.write("        projectWorkId.value = todo.projectWorkId;\r\n");
      out.write("        todoId.value = todo.todoId;\r\n");
      out.write("        todoWriter.value = todo.memberName;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("//<!-- ================================================================================================= -->\t\r\n");
      out.write("\t// 글등록\r\n");
      out.write("\t$(function() {\r\n");
      out.write("\t    $('#insertForm').submit(function(e){\r\n");
      out.write("\t        console.log(\"todo 등록\");\r\n");
      out.write("\t        e.preventDefault();\r\n");
      out.write("\t\r\n");
      out.write("\t        let data = {\r\n");
      out.write("\t        \ttodoId: this.todoId.value,\r\n");
      out.write("\t            todoTitle: this.todoTitle.value,\r\n");
      out.write("\t            todoContent: this.todoContent.value,\r\n");
      out.write("\t            todoWriter: this.todoWriter.value,\r\n");
      out.write("                projectWorkId : this.projectWorkId.value,\r\n");
      out.write("\t        }\r\n");
      out.write("\t        console.log(\"데이터 확인 : \", data);\r\n");
      out.write("\t        \r\n");
      out.write("\t        headers['accept'] = 'application/json';\r\n");
      out.write("\t\r\n");
      out.write("\t        $.ajax({\r\n");
      out.write("\t            type: 'POST',\r\n");
      out.write("\t            url: '/ourmine/company/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${companyId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/project/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${projectId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/projectTodoList/projectTodoListForm',\r\n");
      out.write("\t            data: JSON.stringify(data),\r\n");
      out.write("\t            contentType: 'application/json;charset=UTF-8',\r\n");
      out.write("\t            headers: headers,\r\n");
      out.write("\t            success: function(res) {\r\n");
      out.write("\t                console.log(\"확인 : \", res);\r\n");
      out.write("\t                \r\n");
      out.write("\t                addModalClose();  // 모달 닫기\r\n");
      out.write("\t                reload();\r\n");
      out.write("\t            },\r\n");
      out.write("\t            error: function(error) {\r\n");
      out.write("\t                console.log(\"error : \", error);\r\n");
      out.write("\t            }\r\n");
      out.write("\t        })\r\n");
      out.write("\t    });\r\n");
      out.write("\t  \r\n");
      out.write("// <!-- ================================================================================================= -->\t\r\n");
      out.write("\t// todo 삭제\r\n");
      out.write("    $(document).on(\"click\", \"#deleteRow\", function(e) {\r\n");
      out.write("        console.log(\"삭제버튼 클릭\");\r\n");
      out.write("        \r\n");
      out.write("        e.preventDefault();\r\n");
      out.write("        \r\n");
      out.write("        let projectTodoList = document.querySelector('#todoList');\r\n");
      out.write("        \r\n");
      out.write("        let todoId = $(this).data(\"todoid\");\r\n");
      out.write("        console.log(\"todoId :\" , todoId);\r\n");
      out.write("        \r\n");
      out.write("        headers['accept'] = 'application/json';\r\n");
      out.write("\r\n");
      out.write("        axios.post(`/ourmine/company/${companyIdHiddenValue}/project/${projectIdHiddenValue}/projectTodoList/projectTodoListDelete`, todoId, {headers: headers})\r\n");
      out.write("            .then(resp => {\r\n");
      out.write("            \tconsole.log('DB 업데이트 성공');\r\n");
      out.write("            \tprojectTodoList.innerHTML = ''; // todoList 목록 비우기\r\n");
      out.write("                reload();\r\n");
      out.write("            })\r\n");
      out.write("            .catch(error => {\r\n");
      out.write("\t\t\t\tconsole.log('DB 업데이트 실패 : ', error);\r\n");
      out.write("\t\t\t});\r\n");
      out.write("    });\r\n");
      out.write("\t\r\n");
      out.write("// <!-- ================================================================================================= -->\t\r\n");
      out.write("\t\t// todoList 다시 불러오는 함수\r\n");
      out.write("\t\tfunction reload() {\r\n");
      out.write("\t\t\tconsole.log(\"확인!\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tconst projectTodoList = document.querySelector('#todoList');\r\n");
      out.write("\t\t\tconst todoDiv = document.querySelector('#todoDiv');\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tlet workId = todo.projectWorkId;\r\n");
      out.write("\t\t\tconsole.log(\"workId: \", workId);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\theaders['accept'] = 'application/json';\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\turl: `/ourmine/company/${companyIdHiddenValue}/project/${projectIdHiddenValue}/projectTodoList/todoList`,\r\n");
      out.write("\t\t\t\ttype: 'GET',\r\n");
      out.write("\t\t\t\tdataType: 'json',\r\n");
      out.write("\t\t\t\tdata: {\r\n");
      out.write("\t                projectWorkId: workId\r\n");
      out.write("\t            },\r\n");
      out.write("\t\t\t\theaders:headers,\r\n");
      out.write("\t\t\t\tsuccess: function(data){\r\n");
      out.write("\t\t\t\t\tprojectTodoList.innerHTML = '';\r\n");
      out.write("\t\t\t\t\tconsole.log(\"todoData : \", data);\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tif(data.length === 0) {\r\n");
      out.write("\t\t\t\t\t\tprojectTodoList.innerHTML = '<li class=\"noDataMsg\">등록된 글이 없습니다.</li>';\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\tprojectTodoList.innerHTML = '';\t// 이전 내용 초기화\r\n");
      out.write("\t\t\t\t\t\tprojectTodoList.innerHTML += data.map(item =>\r\n");
      out.write("\t\t\t\t\t\t\t`\r\n");
      out.write("\t\t\t\t\t\t\t<li class=\"d-flex justify-content-between delCont\" data-todoid=${item.todoId} >\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"content con\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t${item.completeWhether === null ? `<span class=\"todoCon todoContent\" id=\"todoCon_${item.todoId}\" style=\"text-decoration: none;\" data-todocontent=${item.todoContent} data-completewhether=\\{item.completeWhether}>${item.todoContent}</span>`\r\n");
      out.write("\t\t\t\t\t\t\t\t\t: `<span class=\"todoCon todoContent\" id=\"todoCon_${item.todoId}\" style=\"text-decoration: line-through;\" data-todocontent=${item.todoContent} data-completewhether=\\{item.completeWhether}>${item.todoContent}</span>`}\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"btnMargin\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t${item.completeWhether === null ? \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t`<button type=\"button\" class=\"btn checkBtn checkRow\" id=\"checkRow\" data-todoid =${item.todoId} data-todocontent=${item.todoContent} >\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<i class=\"icofont-checked text-success\"></i>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</button>` : \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t`<button type=\"button\" class=\"btn checkBtn checkRow\" id=\"checkRow\" data-todoid =${item.todoId} data-todocontent=${item.todoContent} >\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<i class=\"icofont-checked text-secondary\"></i>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</button>`}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn checkBtn deleteRow\" id=\"deleteRow\" data-todoid =${item.todoId} >\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<i class=\"icofont-ui-delete text-danger\"></i>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t\t\t<hr>\r\n");
      out.write("\t\t\t\t\t\t\t`\r\n");
      out.write("\t\t\t\t\t\t).reduce(add);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\terror: function (error) {\r\n");
      out.write("\t\t\t\t\tconsole.log(\"error : \", error);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("        \r\n");
      out.write("//<!-- ================================================================================================= -->\r\n");
      out.write("\t// todoDiv닫기 버튼 \r\n");
      out.write("\tlet todoDiv = document.querySelector(\"#todoDiv\");\r\n");
      out.write("\t\r\n");
      out.write("\tconst todoDivHidden = () => {\r\n");
      out.write("\t\ttodoDiv.style.display = \"none\";\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("//<!-- ================================================================================================= -->\t\r\n");
      out.write("\t// tr클릭 이벤트\r\n");
      out.write("\tfunction clickTrEvent(trObj) {\r\n");
      out.write("\t\tconsole.log(\"trObj : \", trObj);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tlet todoDiv = document.querySelector(\"#todoDiv\");\r\n");
      out.write("\t\tlet todoDivDisplayStyle = todoDiv.style.display;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tlet newWorkId = trObj.dataset.workid;\r\n");
      out.write("\t\tconsole.log(\"newWorkId : \", newWorkId)\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(todoDivDisplayStyle === \"block\") {\r\n");
      out.write("\t\t\tlet currentWorkId = todo.projectWorkId;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(currentWorkId !== newWorkId) {\r\n");
      out.write("\t\t\t\t// todoDiv가 열려있는 경우\r\n");
      out.write("\t\t\t\tSwal.fire({\r\n");
      out.write("\t\t            title: '알림',\r\n");
      out.write("\t\t            text: '현재 창을 닫으시겠습니까?',\r\n");
      out.write("\t\t            icon: 'question',\r\n");
      out.write("\t\t            showCancelButton: true,\r\n");
      out.write("\t\t            confirmButtonText: '닫기',\r\n");
      out.write("\t\t            cancelButtonText: '취소'\r\n");
      out.write("\t\t        }).then((result) => {\r\n");
      out.write("\t\t        \tif(result.isConfirmed) {\r\n");
      out.write("\t\t        \t\t// todoDiv 닫기\r\n");
      out.write("\t\t        \t\ttodoDiv.style.display = \"none\";\r\n");
      out.write("\t\t        \t\t\r\n");
      out.write("\t\t        \t\t// todoList 가져오기\r\n");
      out.write("\t\t        \t\tgetTodoList(newWorkId);\r\n");
      out.write("\t\t        \t}\r\n");
      out.write("\t\t        });\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\t// todoDiv 열기\r\n");
      out.write("\t\t\ttodoDiv.style.display = \"block\";\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// todoList 가져오기\r\n");
      out.write("    \t\tgetTodoList(newWorkId);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction getTodoList(newWorkId) {\r\n");
      out.write("\t   \tlet projectTodoList = document.querySelector('#todoList');\r\n");
      out.write("\t\t\r\n");
      out.write("        let workId = newWorkId;\r\n");
      out.write("\t\tconsole.log(\"workId: \", workId);\r\n");
      out.write("\t\t\r\n");
      out.write("\t   \theaders['accept'] = 'application/json';\r\n");
      out.write("\t   \t\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl: '/ourmine/company/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${companyId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/project/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${projectId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/projectTodoList/todoList',\r\n");
      out.write("            type: 'GET',\r\n");
      out.write("            dataType: 'json',\r\n");
      out.write("            data: {\r\n");
      out.write("                projectWorkId: workId\r\n");
      out.write("            },\r\n");
      out.write("            headers: headers,\r\n");
      out.write("            success: function(data) {\r\n");
      out.write("                console.log(\"todoData : \", data);\t\r\n");
      out.write("//             \tlet projectTodoList = document.querySelector('#todoList');\r\n");
      out.write("            \t\r\n");
      out.write("            \tprojectTodoList.innerHTML = '';\r\n");
      out.write("\t   \t\r\n");
      out.write("\t\t\t\tif(data.length === 0 ) {\r\n");
      out.write("\t\t\t\t\tprojectTodoList.innerHTML = '<li class=\"noDataMsg\">등록된 글이 없습니다.</li>';\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("// \t\t\t\t\tprojectTodoList.innerHTML += data.map(item => \r\n");
      out.write("\t\t\t\t\thtml = data.map(item => \r\n");
      out.write("\t\t\t\t\t\t`\r\n");
      out.write("\t\t\t\t\t\t<li class=\"d-flex justify-content-between delCont\" data-todoid=${item.todoId} >\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"content con\">\r\n");
      out.write("\t\t\t             \t\t${item.completeWhether === null ? `<span class=\"todoCon todoContent\" id=\"todoCon_${item.todoId}\" style=\"text-decoration: none;\" data-todocontent=${item.todoContent} data-completewhether=\\{item.completeWhether}>${item.todoContent}</span>`\r\n");
      out.write("\t\t\t             \t\t: `<span class=\"todoCon todoContent\" id=\"todoCon_${item.todoId}\" style=\"text-decoration: line-through;\" data-todocontent=${item.todoContent} data-completewhether=\\{item.completeWhether}>${item.todoContent}</span>`}\r\n");
      out.write("\t\t                \t</div>\r\n");
      out.write("\t\t                \t<div class=\"btnMargin\">\r\n");
      out.write("\t\t                \t\t${item.completeWhether === null ? \r\n");
      out.write("\t\t              \t\t\t`<button type=\"button\" class=\"btn checkBtn checkRow\" id=\"checkRow\" data-todoid =${item.todoId} data-todocontent=${item.todoContent} >\r\n");
      out.write("\t\t                \t\t\t<i class=\"icofont-checked text-success\"></i>\r\n");
      out.write("\t\t                \t\t</button>` : \r\n");
      out.write("\t\t                \t\t`<button type=\"button\" class=\"btn checkBtn checkRow\" id=\"checkRow\" data-todoid =${item.todoId} data-todocontent=${item.todoContent} >\r\n");
      out.write("\t\t               \t\t\t\t<i class=\"icofont-checked text-secondary\"></i>\r\n");
      out.write("\t\t               \t\t\t</button>`}\r\n");
      out.write("\t\t                \t<button type=\"button\" class=\"btn checkBtn deleteRow\" id=\"deleteRow\" data-todoid =${item.todoId} >\r\n");
      out.write("\t\t                \t\t<i class=\"icofont-ui-delete text-danger\"></i>\r\n");
      out.write("\t\t               \t\t</button>\r\n");
      out.write("\t\t                </div>\r\n");
      out.write("\t\t             </li>\r\n");
      out.write("\t\t             <hr>\r\n");
      out.write("\t\t             `\r\n");
      out.write("// \t\t           \t).reduce(add)\r\n");
      out.write("\t\t           \t).join('');\r\n");
      out.write("\t\t           \t\r\n");
      out.write("\t\t             projectTodoList.innerHTML = html;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("           \t},\r\n");
      out.write("           \terror: function (error) {\r\n");
      out.write("\t\t\t\tconsole.log(\"error : \", error);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("// <!-- ================================================================================================= -->\t\r\n");
      out.write("    // todo 체크\r\n");
      out.write("\t$(document).on(\"click\", \".checkRow\",function (e) {\r\n");
      out.write("\t    console.log(\"체크버튼 홀수 클릭\");\r\n");
      out.write("\t    e.preventDefault();\r\n");
      out.write("\t    \r\n");
      out.write("\t    let projectTodoList = document.querySelector('#todoList');\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tlet todoId = $(this).data(\"todoid\");\r\n");
      out.write("\t\tlet todoContent = $(this).data(\"todocontent\");\r\n");
      out.write("\t\tconsole.log(\"todoId: \", todoId);\r\n");
      out.write("\t\tconsole.log(\"todoContent: \", todoContent);\r\n");
      out.write("\r\n");
      out.write("\t\tlet schId = `#todoCon_${todoId}`;\r\n");
      out.write("\t\tlet con = $(this).closest(\"li\").find(schId)[0];\r\n");
      out.write("\t\tconsole.log(\"selectLi : \", con);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\theaders['accept'] = 'application/json';\r\n");
      out.write("\r\n");
      out.write("\t\tlet axiosPromise;\r\n");
      out.write("\t\tlet button = $(this);\r\n");
      out.write("\t\tlet icon = button.find('i');\r\n");
      out.write("\r\n");
      out.write("\t\tif (icon.hasClass('text-success')) {\r\n");
      out.write("\t\t    console.log(\"체크버튼 클릭\");\r\n");
      out.write("\t\t    axiosPromise = axios.post(`/ourmine/company/${companyIdHiddenValue}/project/${projectIdHiddenValue}/projectTodoList/projecTodoListComplete`, todoId, {headers: headers});\r\n");
      out.write("\t\t    icon.removeClass('text-success').addClass('text-secondary');\r\n");
      out.write("\t\t    con.style.textDecoration = 'line-through'; // 취소선 추가\r\n");
      out.write("\t\t}else if(icon.hasClass('text-secondary')) {\r\n");
      out.write("\t\t    console.log(\"체크버튼 클릭\");\r\n");
      out.write("\t\t    axiosPromise = axios.post(`/ourmine/company/${companyIdHiddenValue}/project/${projectIdHiddenValue}/projectTodoList/projecTodoListReturn`, todoId, {headers: headers});\r\n");
      out.write("\t\t    icon.removeClass('text-secondary').addClass('text-success');\r\n");
      out.write("\t\t    con.style.textDecoration = 'none'; // 취소선 제거 \r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\taxiosPromise\r\n");
      out.write("\t\t\t.then(resp => {\r\n");
      out.write("\t\t\t\tconsole.log('DB 업데이트 성공');\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tcreateCompleteButton();\r\n");
      out.write("\r\n");
      out.write("\t            // 모든 체크된 목록이 completeWhether = 'C'인지 확인\r\n");
      out.write("\t            let allCompleted = true;\r\n");
      out.write("\t            $(\"#todoList\").find(\".checkRow\").each(function() {\r\n");
      out.write("\t                if (!$(this).find('i').hasClass('text-secondary')) {\r\n");
      out.write("\t                    allCompleted = false;\r\n");
      out.write("\t                    return false; // 반복문 종료\r\n");
      out.write("\t                }\r\n");
      out.write("\t            });\r\n");
      out.write("\r\n");
      out.write("\t            // 모든 체크된 목록이 completeWhether = 'C'일 경우 완료 버튼 유지, 그렇지 않은 경우 제거\r\n");
      out.write("\t            if (!allCompleted) {\r\n");
      out.write("\t                $(\"#completeButton\").remove();\r\n");
      out.write("\t            }\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t})\r\n");
      out.write("\t\t\t.catch(error => {\r\n");
      out.write("\t\t\t\tconsole.log('DB 업데이트 실패 : ', error);\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t});\t\r\n");
      out.write("\r\n");
      out.write("// <!-- ================================================================================================= -->\r\n");
      out.write("\t// 완료버튼 생성\r\n");
      out.write("\tfunction createCompleteButton() {\r\n");
      out.write("\t    // 이미 완료 버튼이 존재하는 경우 중복 생성 방지\r\n");
      out.write("\t    if ($(\"#completeButton\").length > 0) {\r\n");
      out.write("\t        return;\r\n");
      out.write("\t    }\r\n");
      out.write("\t\r\n");
      out.write("\t    let completeDiv = document.createElement('div');\r\n");
      out.write("\t    completeDiv.id = 'completeDiv';\r\n");
      out.write("\t    completeDiv.classList.add('btnMargin');\r\n");
      out.write("\t    \r\n");
      out.write("\t    let completeButton = document.createElement('button');\r\n");
      out.write("\t    completeButton.textContent = '완료';\r\n");
      out.write("\t    completeButton.id = 'completeButton';\r\n");
      out.write("\t    completeButton.classList.add('completeButton');\r\n");
      out.write("\t    completeButton.classList.add('btn');\r\n");
      out.write("\t    completeButton.classList.add('btn-outline-success');\r\n");
      out.write("\t    completeDiv.appendChild(completeButton);\r\n");
      out.write("\t    \r\n");
      out.write("\t    // 완료 버튼을 원하는 위치에 추가 (예: todoList 밑에 추가)\r\n");
      out.write("\t    document.querySelector('#todoList').parentElement.appendChild(completeDiv);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("// <!-- ================================================================================================= -->\r\n");
      out.write("\t// 완료버튼 클릭\r\n");
      out.write("\t$(document).on(\"click\", \".completeButton\", function(){\r\n");
      out.write("\t\tconsole.log('완료 버튼 클릭');\r\n");
      out.write("\t        \r\n");
      out.write("\t\tlet mypwList = document.querySelector('#mypwList');\r\n");
      out.write("\t      \r\n");
      out.write("\t\tlet workId = todo.projectWorkId;\r\n");
      out.write("\t\tconsole.log(\"workId: \", workId);\r\n");
      out.write("\t      \r\n");
      out.write("\t\theaders['accept'] = 'application/json';\r\n");
      out.write("\t\r\n");
      out.write("\t\taxios.post(`/ourmine/company/${companyIdHiddenValue}/project/${projectIdHiddenValue}/projectTodoList/updateStatus`, workId, {headers: headers})\r\n");
      out.write("\t\t\t.then(resp => {\r\n");
      out.write("\t\t\t\tconsole.log('DB 업데이트 성공');\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t// Remove the complete button\r\n");
      out.write("\t            let completeButton = document.querySelector('.completeButton');\r\n");
      out.write("\t            if (completeButton) {\r\n");
      out.write("\t                completeButton.parentNode.removeChild(completeButton);\r\n");
      out.write("\t            }\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tmypwList.innerHTML=''; // mypwList 목록 비우기\r\n");
      out.write("\t\t\t\ttodoDivHidden();\r\n");
      out.write("\t\t\t\tprojectWorkList();\r\n");
      out.write("\t\t\t})\r\n");
      out.write("\t\t\t.catch(error => {\r\n");
      out.write("\t\t\t\tconsole.log('DB 업데이트 실패 : ', error);\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t})\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("// <!-- ================================================================================================= -->\t\r\n");
      out.write("\t// 나의 일감 리스트\r\n");
      out.write("\tasync function projectWorkList() {\r\n");
      out.write("\t\tlet mypwList = document.querySelector('#mypwList');\r\n");
      out.write("\t\r\n");
      out.write("\t    headers['accept'] = 'application/json';\r\n");
      out.write("\r\n");
      out.write("\t    await axios.get(`/ourmine/company/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${companyId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/project/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${projectId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/projectTodoList/projectWorkList`, {headers: headers})\r\n");
      out.write("            .then(resp => {\r\n");
      out.write("                let data = resp.data;\r\n");
      out.write("                console.log(\"data: \", data);\r\n");
      out.write("\r\n");
      out.write("                todo.memberName = data[0].projectWorkPic; // todo.memberName에 pwdata의 projectWorkPic넣어주기(글 등록 시 이름 넣어주기 위해서)\r\n");
      out.write("\r\n");
      out.write("//                 mypwList.innerHTML = '';\r\n");
      out.write("                \r\n");
      out.write("                mypwList.innerHTML += data.map(item => \r\n");
      out.write("                    `\r\n");
      out.write("\t\t\t\t\t<tr class=\"clickTr\" onclick=\"clickTrEvent(this)\"   \r\n");
      out.write("\t\t\t\t\t\t\tdata-workid=${item.projectWorkId} data-pwstatus=${item.projectWorkStatus} data-pwstatusid=${item.projectWorkStatusId}\r\n");
      out.write("\t\t\t\t\t\t\tdata-ppname=${item.projectPriorityName} data-pwtitle=${item.projectWorkTitle} \r\n");
      out.write("\t\t\t\t\t\t\tdata-pwsdate=${item.projectWorkStartDate} data-pwedate=${item.projectWorkEndDate}>\r\n");
      out.write("                        <td data-workid=${item.projectWorkId}>\r\n");
      out.write("                            <span class=\"fw-bold text-secondary\" id=\"projectWorkId\">${item.projectWorkId}</span>\r\n");
      out.write("                        </td>\r\n");
      out.write("                        <td data-workid=${item.projectWorkId}>\r\n");
      out.write("                        \t${item.projectWorkStatusId===1 ? `<span class=\"badge bg-warning\" id=\"projectWorkStatus\" data-pwstatusid=${item.projectWorkStatusId}>${item.projectWorkStatus}</span>` :item.projectWorkStatusId===2\r\n");
      out.write("\t\t\t\t\t\t\t\t? `<span class=\"badge bg-primary\" id=\"projectWorkStatus\" data-pwstatusid=${item.projectWorkStatusId}>${item.projectWorkStatus}</span>`:item.projectWorkStatusId===3\r\n");
      out.write("\t \t\t\t\t\t\t\t? `<span class=\"badge bg-info\" id=\"projectWorkStatus\" data-pwstatusid=${item.projectWorkStatusId}>${item.projectWorkStatus}</span>`:item.projectWorkStatusId===4\r\n");
      out.write("\t \t\t\t\t\t\t\t? `<span class=\"badge bg-success\" id=\"projectWorkStatus\" data-pwstatusid=${item.projectWorkStatusId}>${item.projectWorkStatus}</span>`:`<span class=\"badge bg-danger\" id=\"projectWorkStatus\" data-pwstatusid=${item.projectWorkStatusId}>${item.projectWorkStatus}</span>`}\r\n");
      out.write("                        </td>\r\n");
      out.write("                        <td data-workid=${item.projectWorkId}>\r\n");
      out.write("                        \t${item.projectPriorityName}\r\n");
      out.write("                        </td>\r\n");
      out.write("                        <td data-workid=${item.projectWorkId}>\r\n");
      out.write("                            ${item.projectWorkTitle}\r\n");
      out.write("                        </td>\r\n");
      out.write("                        <td data-workid=${item.projectWorkId}>\r\n");
      out.write("                    \t\t${item.projectWorkStartDate}\r\n");
      out.write("\t                    </td>\r\n");
      out.write("\t                    <td data-workid=${item.projectWorkId}>\r\n");
      out.write("\t                    \t${item.projectWorkEndDate}\r\n");
      out.write("\t                    </td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("                    `\r\n");
      out.write("                ).reduce(add)\r\n");
      out.write("                \r\n");
      out.write("                // 페이징\r\n");
      out.write("\t\t\t\tlet totalItems = data[0].totalWorkData; // 총 데이터 개수\r\n");
      out.write("\t\t\t\tconsole.log(\"totalItems\", totalItems);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tlet pageSize = 5; // 한 페이지에 보여줄 데이터 개수\r\n");
      out.write("\t\t\t\tlet totalPages = Math.ceil(totalItems / pageSize); // 총 페이지 개수\r\n");
      out.write("\t\t\t\tlet pageCon = document.querySelector('#pwContainer');\r\n");
      out.write("\t\t\t\tlet pagesArray = Array.from({length: totalPages}, (_, i) => i + 1); // 페이지 번호 배열을 생성\r\n");
      out.write("\t\t\t\tlet paginationHTML = pagesArray.map(pageNumber => `<a href=\"#\" data-page=\"${pageNumber}\" class=\"page-link\">${pageNumber}</a>`).join('');\r\n");
      out.write("\t\t\t\tdocument.querySelector('#pwContainer').innerHTML = paginationHTML;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tlet pageLinks = document.querySelectorAll('.page-link');\r\n");
      out.write("\t\t\t\tpageLinks.forEach((link, index) => {\r\n");
      out.write("\t\t\t\t\tlink.addEventListener('click', function(event){\r\n");
      out.write("\t\t\t\t\t\tconsole.log(\"클릭이벤트\")\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\tevent.preventDefault();\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\tlet pageNumber = this.dataset.page; \r\n");
      out.write("\t\t\t\t\t\taxios.get(`/ourmine/company/${companyIdHiddenValue}/project/${projectIdHiddenValue}/projectTodoList/projectWorkList`,{\r\n");
      out.write("\t\t\t\t\t\t\tparams: {\r\n");
      out.write("\t\t\t\t\t\t\t\tpage: pageNumber\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t},{headers : headers})\r\n");
      out.write("\t\t\t\t\t\t\t.then(resp => {\r\n");
      out.write("\t\t\t\t\t\t\t\tlet data = resp.data;\r\n");
      out.write("\t\t\t\t\t\t\t\tconsole.log(\"pwData\",data);\r\n");
      out.write("\t\t\t\t\t\t\t\tmypwList.innerHTML='';\t// 이전의 내용 초기화\r\n");
      out.write("\t\t\t\t\t\t\t\tmypwList.innerHTML+= data.map(item =>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t`\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<tr class=\"clickTr\" onclick=\"clickTrEvent(this)\"  \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tdata-workid=${item.projectWorkId} data-pwstatus=${item.projectWorkStatus}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tdata-ppname=${item.projectPriorityName} data-pwtitle=${item.projectWorkTitle} \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tdata-pwsdate=${item.projectWorkStartDate} data-pwedate=${item.projectWorkEndDate}>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td data-workid=${item.projectWorkId}>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<span class=\"fw-bold text-secondary\" id=\"projectWorkId\">${item.projectWorkId}</span>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td data-workid=${item.projectWorkId}>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t${item.projectWorkStatusId===1 ? `<span class=\"badge bg-warning\" id=\"projectWorkStatus\" data-pwstatus=${item.projectWorkStatusId}>${item.projectWorkStatus}</span>` :item.projectWorkStatusId===2\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t? `<span class=\"badge bg-primary\" id=\"projectWorkStatus\" data-pwstatus=${item.projectWorkStatusId}>${item.projectWorkStatus}</span>`:item.projectWorkStatusId===3\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t? `<span class=\"badge bg-info\" id=\"projectWorkStatus\" data-pwstatus=${item.projectWorkStatusId}>${item.projectWorkStatus}</span>`:item.projectWorkStatusId===4\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t? `<span class=\"badge bg-success\" id=\"projectWorkStatus\" data-pwstatus=${item.projectWorkStatusId}>${item.projectWorkStatus}</span>`:`<span class=\"badge bg-danger\" id=\"projectWorkStatus\" data-pwstatus=${item.projectWorkStatusId}>${item.projectWorkStatus}</span>`}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td data-workid=${item.projectWorkId}>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t${item.projectPriorityName}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td data-workid=${item.projectWorkId}>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t${item.projectWorkTitle}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td data-workid=${item.projectWorkId}>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t${item.projectWorkStartDate}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td data-workid=${item.projectWorkId}>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t${item.projectWorkEndDate}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t`\r\n");
      out.write("\t\t\t\t\t\t\t\t).reduce(add)\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t})\r\n");
      out.write("\t\t\t\t\t})\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t})\r\n");
      out.write("            })\r\n");
      out.write("    }\r\n");
      out.write("\t\r\n");
      out.write("// <!-- =============================================================================================== -->\r\n");
      out.write("\t// 검색\r\n");
      out.write("\tsearchProjectWork.addEventListener('input', () => {\r\n");
      out.write("\t\tconsole.log('실행되나?');\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tlet mypwList = document.getElementById('mypwList');\r\n");
      out.write("\r\n");
      out.write("\t\theaders['accept'] = 'application/json'\r\n");
      out.write("\r\n");
      out.write("\t\tlet search = searchProjectWork.value;\r\n");
      out.write("\t\tif (search.trim() === '') {\r\n");
      out.write("\t\t\tconsole.log(\"트림트림\")\r\n");
      out.write("\t\t\tmypwList.innerHTML='';\r\n");
      out.write("\t\t\tprojectWorkList();\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\taxios.get(`/ourmine/company/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${companyId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/project/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${projectId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/projectTodoList/projectWorkList`, {\r\n");
      out.write("\t\t\t\tparams: {\r\n");
      out.write("\t\t\t\t\tsearch: search\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}, {headers: headers})\r\n");
      out.write("\t\t\t\t.then(resp => {\r\n");
      out.write("\t\t\t\t\tlet data = resp.data;\r\n");
      out.write("\t\t\t\t\tconsole.log(\"searchData\", data);\r\n");
      out.write("\t\t\t\t\tmypwList.innerHTML='';\r\n");
      out.write("\t\r\n");
      out.write("\t\t\t\t\tmypwList.innerHTML+= data.map(item =>\r\n");
      out.write("\t\t\t\t\t\t`\r\n");
      out.write("\t\t\t\t\t\t<tr class=\"clickTr\" onclick=\"clickTrEvent(this)\"  \r\n");
      out.write("\t\t\t\t\t\t\tdata-workid=${item.projectWorkId} data-pwstatus=${item.projectWorkStatus}\r\n");
      out.write("\t\t\t\t\t\t\tdata-ppname=${item.projectPriorityName} data-pwtitle=${item.projectWorkTitle} \r\n");
      out.write("\t\t\t\t\t\t\tdata-pwsdate=${item.projectWorkStartDate} data-pwedate=${item.projectWorkEndDate}>\r\n");
      out.write("\t\t\t\t\t\t\t<td data-workid=${item.projectWorkId}>\r\n");
      out.write("\t\t\t\t\t\t\t\t<span class=\"fw-bold text-secondary\" id=\"projectWorkId\">${item.projectWorkId}</span>\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td data-workid=${item.projectWorkId}>\r\n");
      out.write("\t\t\t\t\t\t\t\t${item.projectWorkStatusId===1 ? `<span class=\"badge bg-warning\" id=\"projectWorkStatus\" data-pwstatus=${item.projectWorkStatusId}>${item.projectWorkStatus}</span>` :item.projectWorkStatusId===2\r\n");
      out.write("\t\t\t\t\t\t\t\t\t? `<span class=\"badge bg-primary\" id=\"projectWorkStatus\" data-pwstatus=${item.projectWorkStatusId}>${item.projectWorkStatus}</span>`:item.projectWorkStatusId===3\r\n");
      out.write("\t\t\t\t\t\t\t\t\t? `<span class=\"badge bg-info\" id=\"projectWorkStatus\" data-pwstatus=${item.projectWorkStatusId}>${item.projectWorkStatus}</span>`:item.projectWorkStatusId===4\r\n");
      out.write("\t\t\t\t\t\t\t\t\t? `<span class=\"badge bg-success\" id=\"projectWorkStatus\" data-pwstatus=${item.projectWorkStatusId}>${item.projectWorkStatus}</span>`:`<span class=\"badge bg-danger\" id=\"projectWorkStatus\" data-pwstatus=${item.projectWorkStatusId}>${item.projectWorkStatus}</span>`}\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td data-workid=${item.projectWorkId}>\r\n");
      out.write("\t\t\t\t\t\t\t\t${item.projectPriorityName}\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td data-workid=${item.projectWorkId}>\r\n");
      out.write("\t\t\t\t\t\t\t\t${item.projectWorkTitle}\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td data-workid=${item.projectWorkId}>\r\n");
      out.write("\t\t\t\t\t\t\t\t${item.projectWorkStartDate}\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td data-workid=${item.projectWorkId}>\r\n");
      out.write("\t\t\t\t\t\t\t\t${item.projectWorkEndDate}\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t`\r\n");
      out.write("\t\t\t\t\t).reduce(add)\r\n");
      out.write("\t\t\t\t})\r\n");
      out.write("\t\t\tmypwList.innerHTML='';\r\n");
      out.write("\t\t}\t\r\n");
      out.write("\t})\r\n");
      out.write("\r\n");
      out.write("// <!-- ================================================================================================= -->\t\r\n");
      out.write("    // 일감 목록 조회 성공 시\r\n");
      out.write("    projectWorkList().then((e) => {\r\n");
      out.write("        let click =  document.querySelectorAll('.clickTr');\r\n");
      out.write("        console.log(\"클릭클릭 = \", click);\r\n");
      out.write("\r\n");
      out.write("        click.forEach(item => {\r\n");
      out.write("            item.addEventListener('click', (e) => {\r\n");
      out.write("                todo.projectWorkId = e.target.dataset.workid;\r\n");
      out.write("                \r\n");
      out.write("                console.log(\"todo.projectWorkId = \",todo.projectWorkId);\r\n");
      out.write("                console.log(\"todo.memberName = \",todo.memberName);\r\n");
      out.write("               \r\n");
      out.write("                clickTrEvent();  // tr태그 클릭이벤트 실행\r\n");
      out.write("            })\r\n");
      out.write("        })\r\n");
      out.write("\t})\r\n");
      out.write("\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_security_005fauthentication_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  security:authentication
    org.springframework.security.taglibs.authz.AuthenticationTag _jspx_th_security_005fauthentication_005f0 = (org.springframework.security.taglibs.authz.AuthenticationTag) _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fvar_005fproperty_005fnobody.get(org.springframework.security.taglibs.authz.AuthenticationTag.class);
    boolean _jspx_th_security_005fauthentication_005f0_reused = false;
    try {
      _jspx_th_security_005fauthentication_005f0.setPageContext(_jspx_page_context);
      _jspx_th_security_005fauthentication_005f0.setParent(null);
      // /WEB-INF/jsp/project/projectTodo/projectTodoList.jsp(167,0) name = property type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_security_005fauthentication_005f0.setProperty("principal");
      // /WEB-INF/jsp/project/projectTodo/projectTodoList.jsp(167,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_security_005fauthentication_005f0.setVar("principal");
      int _jspx_eval_security_005fauthentication_005f0 = _jspx_th_security_005fauthentication_005f0.doStartTag();
      if (_jspx_th_security_005fauthentication_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fvar_005fproperty_005fnobody.reuse(_jspx_th_security_005fauthentication_005f0);
      _jspx_th_security_005fauthentication_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_security_005fauthentication_005f0, _jsp_getInstanceManager(), _jspx_th_security_005fauthentication_005f0_reused);
    }
    return false;
  }
}
