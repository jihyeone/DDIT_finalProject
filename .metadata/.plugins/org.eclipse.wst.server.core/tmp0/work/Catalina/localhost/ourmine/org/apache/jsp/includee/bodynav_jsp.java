/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2023-06-09 10:54:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.includee;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class bodynav_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("<style>\r\n");
      out.write(".contextmenu {\r\n");
      out.write("  display: none;\r\n");
      out.write("  position: absolute;\r\n");
      out.write("  width: 200px;\r\n");
      out.write("  margin: 0;\r\n");
      out.write("  padding: 0;\r\n");
      out.write("  background: #FFFFFF;\r\n");
      out.write("  border-radius: 5px;\r\n");
      out.write("  list-style: none;\r\n");
      out.write("  box-shadow:\r\n");
      out.write("    0 15px 35px rgba(50,50,90,0.1),\r\n");
      out.write("    0 5px 15px rgba(0,0,0,0.07);\r\n");
      out.write("  overflow: hidden;\r\n");
      out.write("  z-index: 999999;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".contextmenu li {\r\n");
      out.write("  border-left: 3px solid transparent;\r\n");
      out.write("  transition: ease .2s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".contextmenu li a {\r\n");
      out.write("  display: block;\r\n");
      out.write("  padding: 10px;\r\n");
      out.write("  color: #B0BEC5;\r\n");
      out.write("  text-decoration: none;\r\n");
      out.write("  transition: ease .2s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".contextmenu li:hover {\r\n");
      out.write("  background: #484c7f;\r\n");
      out.write("  border-left: 3px solid #9C27B0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".contextmenu li:hover a {\r\n");
      out.write("  color: #FFFFFF;\r\n");
      out.write("}\r\n");
      out.write("</style>    \r\n");
      out.write("\r\n");
      out.write("<div>\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<ul class=\"nav nav-tabs tab-card\" role=\"tablist\">\r\n");
      out.write("\t    <li class=\"nav-item\"><a class=\"nav-link\" href=\"/ourmine/company/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${companyId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/project/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${projectId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/dashBoard\">대시보드</a></li>\r\n");
      out.write("\t    <li class=\"nav-item\"><a class=\"nav-link\" href=\"/ourmine/company/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${companyId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/project/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${projectId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/projectWork\">일감</a></li>\r\n");
      out.write("\t    <security:authorize access=\"hasRole('MEMBER')\">\r\n");
      out.write("\t    <li class=\"nav-item\"><a class=\"nav-link\" href=\"/ourmine/company/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${companyId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/project/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${projectId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/projectTodoList\">TODO</a></li>\r\n");
      out.write("\t    </security:authorize>\r\n");
      out.write("\t    <li class=\"nav-item\"><a class=\"nav-link\" href=\"/ourmine/company/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${companyId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/project/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${projectId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/projectGantt\">간트차트</a></li>\r\n");
      out.write("\t    <li class=\"nav-item\"><a class=\"nav-link\" href=\"/ourmine/company/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${companyId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/project/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${projectId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/calendar\">캘린더</a></li>\r\n");
      out.write("\t    <li class=\"nav-item\"><a class=\"nav-link\" href=\"/ourmine/company/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${companyId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/project/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${projectId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/projectIssue\">이슈</a></li>\r\n");
      out.write("\t    <li class=\"nav-item\"><a class=\"nav-link\" href=\"/ourmine/company/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${companyId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/project/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${projectId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/codeWall\">코드게시판</a></li>\r\n");
      out.write("\t    <li class=\"nav-item\"><a class=\"nav-link\" href=\"/ourmine/company/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${companyId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/project/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${projectId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/git/gitList\">GITHUB</a></li>\r\n");
      out.write("\t\t<li class=\"nav-item\" >\r\n");
      out.write("\t\t\t<select name=\"jidisp\" class=\"dropdown-item py-2 rounded nav-link\" style=\"border:none;position:relative;\" id=\"jidisp\" onchange=\"fselChange(this)\">\r\n");
      out.write("\t\t\t\t<option value=\"0\" class=\"dropdown-item py-2 rounded\" selected>게시판</option>\r\n");
      out.write("\t\t\t</select>\r\n");
      out.write("\t    </li>\r\n");
      out.write("\t</ul>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("const jiDisp = document.querySelector(\"#jidisp\");\r\n");
      out.write("\r\n");
      out.write("function fselChange(p_this){\r\n");
      out.write("\r\n");
      out.write("    if(p_this.value == 0) return; // 선택을 안함\r\n");
      out.write("\tlet boardTypeNum = p_this.value;\r\n");
      out.write("\tif($(\"#myGrid\").length>0){\r\n");
      out.write("\t    fgetData(boardTypeNum);\r\n");
      out.write("\t}else{\r\n");
      out.write("// \t\t$.ajax({\r\n");
      out.write("// \t\t\turl : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/company/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${companyId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/project/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${projectId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/board/boardList\",\r\n");
      out.write("// \t\t\tmethod : \"\",\r\n");
      out.write("// \t\t\tdata : {typeNumber:boardTypeNum},\r\n");
      out.write("// \t\t\tdataType : \"html\"\r\n");
      out.write("// \t\t}).done(function(resp, textStatus, jqXHR) {\r\n");
      out.write("// \t\t\t$(\"#contentBody\").html(resp);\r\n");
      out.write("// \t\t}).fail(function(jqXHR, status, error) {\r\n");
      out.write("// \t\t\tconsole.log(`상태코드 : ${status}, 에러메시지 : ${error}`);\r\n");
      out.write("// \t\t});;\r\n");
      out.write("\tlocation.href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/company/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${companyId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/project/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${projectId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/board/boardList?typeNumber=\"+boardTypeNum;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("const fboardList = function(resp){\r\n");
      out.write("\tfor(let i=0; i<resp.length; i++){\r\n");
      out.write("\t\tlet jOption = document.createElement(\"option\");\r\n");
      out.write("\t\tjOption.value = `${resp[i].boardTypeId}`;\r\n");
      out.write("\t\tjOption.innerHTML = `${resp[i].boardType}`;\r\n");
      out.write("// \t\tif(jOption.value == ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.typeNumber}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(")\r\n");
      out.write("// \t\t\tjOption.selected=\"selected\";\r\n");
      out.write("\t\tjiDisp.appendChild(jOption);\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("const boardTypeList =function(){\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t  type:\"get\",\r\n");
      out.write("\t  url:\"/ourmine/company/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${companyId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/project/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${projectId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/boardType/boardTypeList\",\r\n");
      out.write("\t  async:true,\r\n");
      out.write("\t  dataType:\"json\",\r\n");
      out.write("\t  success:function(resp){\r\n");
      out.write("\t      console.log(\"결과확인\",resp);  // 요기 코드가 길어지면  별도 함수로 처리/ 그래야 가독성이 유지됨\r\n");
      out.write("\t      fboardList(resp);\r\n");
      out.write("\t  },\r\n");
      out.write("\t  error: function (request, status, error) {\r\n");
      out.write("\t      console.log(\"code: \" + request.status)\r\n");
      out.write("\t      console.log(\"message: \" + request.responseText)\r\n");
      out.write("\t      console.log(\"error: \" + error);\r\n");
      out.write("\t  }\r\n");
      out.write("\r\n");
      out.write("\t})\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("boardTypeList();   // 바로 실행하기 위해서 ㅣ호출\r\n");
      out.write("\r\n");
      out.write("$(document).ready(function() {\r\n");
      out.write("\t  // 현재 페이지 URL 가져오기\r\n");
      out.write("\t  var currentUrl = window.location.pathname;\r\n");
      out.write("\r\n");
      out.write("\t  // 모든 링크 검사하여 현재 URL과 일치하는 링크에 active 클래스 추가\r\n");
      out.write("\t  $('.nav-link').each(function() {\r\n");
      out.write("\t    var linkUrl = $(this).attr('href');\r\n");
      out.write("\r\n");
      out.write("\t    if (linkUrl === currentUrl) {\r\n");
      out.write("\t      $(this).addClass('active');\r\n");
      out.write("\t    }\r\n");
      out.write("\t  });\r\n");
      out.write("\t});\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
