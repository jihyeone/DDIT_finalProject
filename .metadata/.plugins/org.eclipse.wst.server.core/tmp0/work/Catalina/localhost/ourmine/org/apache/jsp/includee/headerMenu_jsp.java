/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2023-06-11 11:05:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.includee;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class headerMenu_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("jar:file:/E:/A_TeachingMaterial/05_JSP_Spring/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/ourmine/WEB-INF/lib/spring-security-taglibs-5.7.8.jar!/META-INF/security.tld", Long.valueOf(1681713972000L));
    _jspx_dependants.put("/WEB-INF/lib/spring-security-taglibs-5.7.8.jar", Long.valueOf(1683020361417L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1679567181629L));
    _jspx_dependants.put("jar:file:/E:/A_TeachingMaterial/05_JSP_Spring/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/ourmine/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fvar_005fproperty_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsecurity_005fauthorize_0026_005faccess;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fproperty_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsecurity_005fcsrfInput_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fvar_005fproperty_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fsecurity_005fauthorize_0026_005faccess = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fproperty_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fsecurity_005fcsrfInput_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fvar_005fproperty_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
    _005fjspx_005ftagPool_005fsecurity_005fauthorize_0026_005faccess.release();
    _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fproperty_005fnobody.release();
    _005fjspx_005ftagPool_005fsecurity_005fcsrfInput_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/sweetalert2/sweetalert2.min.css\">\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("    /* CSS */\r\n");
      out.write("    #simple-tree-sidebar {\r\n");
      out.write("        transform: translateX(100%);\r\n");
      out.write("        transition: transform 0.5s ease-out;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    #simple-tree-sidebar.visible {\r\n");
      out.write("        transform: translateX(0);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    #simple-tree-sidebar {\r\n");
      out.write("        position: fixed;\r\n");
      out.write("        right: 0;\r\n");
      out.write("        top: 0;\r\n");
      out.write("        height: 100%;\r\n");
      out.write("        width: 300px;\r\n");
      out.write("        overflow-y: auto;\r\n");
      out.write("        background: white;\r\n");
      out.write("        border-left: 1px solid #ccc;\r\n");
      out.write("        transform: translateX(100%);\r\n");
      out.write("        transition: transform 0.3s ease-out;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    #simple-tree-sidebar.visible {\r\n");
      out.write("        transform: translateX(0);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .folder {\r\n");
      out.write("        border: 1px solid #000;\r\n");
      out.write("        margin: 10px;\r\n");
      out.write("        padding: 10px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .folder-toggle {\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("        font-weight: bold;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .folder-details {\r\n");
      out.write("        display: none; /* 초기에는 감춰져 있습니다. */\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .folder.open .folder-details {\r\n");
      out.write("        display: block; /* folder가 open 클래스를 가지면 보입니다. */\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .orgchartBtn:hover {\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    @keyframes pulse {\r\n");
      out.write("        0% {\r\n");
      out.write("            background-color: #fff; /* 시작색 */\r\n");
      out.write("        }\r\n");
      out.write("        50% {\r\n");
      out.write("            background-color: orange; /* 중간색 */\r\n");
      out.write("        }\r\n");
      out.write("        100% {\r\n");
      out.write("            background-color: #fff; /* 종료색 */\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .orange {\r\n");
      out.write("        border-radius: 50%;  /* 동그랗게 만들기 */\r\n");
      out.write("        overflow: hidden;  /* 내부의 모든 요소도 동그랗게 만들기 */\r\n");
      out.write("    }\r\n");
      out.write("/*      .modal{\r\n");
      out.write("\t \tposition: fixed;\r\n");
      out.write("\t\ttop: 50%;\r\n");
      out.write("\t\tleft: 50%;\r\n");
      out.write("\t\ttransform: translate(-50%, -50%);\r\n");
      out.write("\t\tbackground: rgba(0, 0, 0, 0.8);\r\n");
      out.write("\t} */\r\n");
      out.write("\r\n");
      out.write("\t#hmList{\r\n");
      out.write("\t\tlist-style-type: none;\r\n");
      out.write("\t\tpadding-left: 0rem\r\n");
      out.write("\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t.swal2-container {\r\n");
      out.write("\t\tz-index: 9999999999999;\r\n");
      out.write("\t}\r\n");
      out.write("    .myToastContainer {\r\n");
      out.write("        position: fixed;\r\n");
      out.write("        top: 1rem;\r\n");
      out.write("        right: 1rem;\r\n");
      out.write("        z-index: 9999;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .myToast {\r\n");
      out.write("        display: none; /* initially hidden */\r\n");
      out.write("        position: fixed;\r\n");
      out.write("        top: 2%; /* adjust as per requirement */\r\n");
      out.write("        right: 30%; /* adjust as per requirement */\r\n");
      out.write("        min-width: 200px;\r\n");
      out.write("        max-width: 350px;\r\n");
      out.write("        background-color: white;\r\n");
      out.write("        box-shadow: 0 0.25rem 0.75rem rgba(0, 0, 0, .1);\r\n");
      out.write("        color: black;\r\n");
      out.write("        z-index: 1050;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .myToast.show {\r\n");
      out.write("        display: block; /* displayed when .show class added */\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .myToast-header {\r\n");
      out.write("        display: flex;\r\n");
      out.write("        align-items: center;\r\n");
      out.write("        padding: 0.5rem 1rem;\r\n");
      out.write("        color: black;\r\n");
      out.write("        background-color: rgba(0, 0, 0, .03);\r\n");
      out.write("        border-bottom: 1px solid rgba(0, 0, 0, .05);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .myToast-body {\r\n");
      out.write("        padding: 0.5rem 1rem;\r\n");
      out.write("        color: black;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .myToast-btn-close {\r\n");
      out.write("        background: none;\r\n");
      out.write("        border: none;\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("        padding: 0;\r\n");
      out.write("        float: right;\r\n");
      out.write("        font-size: 1.5rem;\r\n");
      out.write("        font-weight: 700;\r\n");
      out.write("        line-height: 1;\r\n");
      out.write("        color: black;\r\n");
      out.write("        text-shadow: 0 1px 0 #fff;\r\n");
      out.write("        opacity: .5;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      if (_jspx_meth_security_005fauthentication_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write('\r');
      out.write('\n');
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- Body: Header -->\r\n");
      out.write("<!-- <div class=\"container-xxl\"> -->\r\n");
      out.write("\r\n");
      out.write("    <!-- header rightbar icon -->\r\n");
      out.write("    <div class=\"h-right d-flex align-items-center mr-5 mr-lg-0 order-1\">\r\n");
      out.write("        <div class=\"d-flex\">\r\n");
      out.write("\r\n");
      out.write("            <!-- 채팅 -->\r\n");
      out.write("            <a class=\"nav-link collapsed\" href=\"/ourmine/company/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${companyId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/chat/chat\" title=\"Chat\">\r\n");
      out.write("                <i class=\"icofont-chat fs-4\"></i>\r\n");
      out.write("            </a>\r\n");
      out.write("\r\n");
      out.write("            <!-- 조직도 --><!-- text-primary : 글자색 -->\r\n");
      out.write("            <a type=\"a\" href=\"/ourmine/company/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${companyId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/orgchart/orgchartList\" class=\"nav-link collapsed orgchartBtn\" title=\"Organization chart\">\r\n");
      out.write("                <i class=\"icofont-company fs-4\"></i>\r\n");
      out.write("            </a>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<!-- 알림(종) 아이콘 -->\r\n");
      out.write("\t\t\t<div class=\"dropdown notifications zindex-popover\">\r\n");
      out.write("\t\t\t\t<a class=\"nav-link dropdown-toggle pulse\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\">\r\n");
      out.write("\t\t\t\t\t<i class=\"icofont-alarm fs-4 orange\"></i>\r\n");
      out.write("\t\t\t\t\t<span class=\"pulse-ring\"></span>\r\n");
      out.write("\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t<div id=\"notification-icon\">\r\n");
      out.write("\t\t\t\t\t<span class=\"badge\" id=\"notification-badge\"></span>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div id=\"NotificationsDiv\" class=\"dropdown-menu rounded-lg shadow border-0 dropdown-animation dropdown-menu-sm-end p-0 m-0\">\r\n");
      out.write("\t\t\t\t\t<div class=\"card border-0 w380\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"card-header border-0 p-3\">\r\n");
      out.write("\t\t\t\t\t\t\t<h5 class=\"mb-0 font-weight-light d-flex justify-content-between alarmCount\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t</h5>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<!-- 알림 내용 -->\r\n");
      out.write("\t\t\t\t\t\t<div class=\"tab-content card-body\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"tab-pane fade show active\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<ul class=\"list-unstyled list mb-0\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<li class=\"py-2 mb-1 border-bottom alarmList\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<a class=\"card-footer text-center border-top-0\" href=\"#\"> View all notifications</a>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <!-- 프로필 -->\r\n");
      out.write("        <!-- Manager -->\r\n");
      out.write("        ");
      if (_jspx_meth_security_005fauthorize_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <!-- Member -->\r\n");
      out.write("        ");
      if (_jspx_meth_security_005fauthorize_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("        <!-- 프로필 끝 -->\r\n");
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("<!-- </div> -->\r\n");
      out.write("           <!-- 상세모달 -->\r\n");
      out.write("\r\n");
      out.write("                <div class=\"modal\" id=\"modifyModal\" style=\"display: none\" >\r\n");
      out.write("                    <div class=\"modal-dialog\">\r\n");
      out.write("                        <div class=\"modal-content card mb-3\">\r\n");
      out.write("                            <div class=\"card-body\">\r\n");
      out.write("                                <div class=\"row g-3 align-items-center\">\r\n");
      out.write("                                    <div class=\"col-md-12\">\r\n");
      out.write("                                        <div class=\"form-group\">\r\n");
      out.write("                                            <label>내용</label>\r\n");
      out.write("                                            <textarea id=\"alarmTitle\" name=\"noticeBoardTitle\" class=\"myModal-title form-control\"></textarea>\r\n");
      out.write("                                        </div>\r\n");
      out.write("                                    </div>\r\n");
      out.write("\r\n");
      out.write("                                    <div class=\"col-md-12\">\r\n");
      out.write("                                        <div class=\"form-group\">\r\n");
      out.write("                                            <label>보낸이</label>\r\n");
      out.write("                                            <input type=\"text\" id=\"alarmWriter\" name=\"noticeBoardWriter\" class=\"form-control\" readonly>\r\n");
      out.write("                                        </div>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                    <div class=\"col-md-12\">\r\n");
      out.write("                                        <div class=\"form-group\">\r\n");
      out.write("                                            <label>작성일자</label>\r\n");
      out.write("                                            <input type=\"text\" id=\"alarmDate\" name=\"noticeBoardWriteDate\" class=\"form-control\" readonly>\r\n");
      out.write("                                        </div>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"modal-footer\">\r\n");
      out.write("                                    <button type=\"button\" class=\"btn btn-secondary ararmekerl\" data-bs-dismiss=\"modal\">닫기</button>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("<!-- 조직도 트리 형태 -->\r\n");
      out.write("    <div id=\"simple-tree-sidebar\" class=\"sidebar px-4 py-4 py-md-5 me-0\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- menu toggler -->\r\n");
      out.write("    <button class=\"navbar-toggler p-0 border-0 menu-toggle order-3\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#mainHeader\">\r\n");
      out.write("        <span class=\"fa fa-bars\"></span>\r\n");
      out.write("    </button>\r\n");
      out.write("\r\n");
      out.write("    <!-- 메인 검색창 -->\r\n");
      out.write("    <div class=\"order-0 col-lg-4 col-md-4 col-sm-12 col-12 mb-3 mb-md-0 \">\r\n");
      out.write("        <div class=\"input-group flex-nowrap input-group-lg\">\r\n");
      out.write("<!--             <button type=\"button\" class=\"input-group-text\" id=\"addon-wrapping\"><i class=\"fa fa-search\"></i></button> -->\r\n");
      out.write("            <input type=\"hidden\" class=\"form-control\" placeholder=\"Search\" aria-label=\"search\" aria-describedby=\"addon-wrapping\">\r\n");
      out.write("<!--             <button type=\"button\" class=\"input-group-text add-member-top\" id=\"addon-wrappingone\" data-bs-toggle=\"modal\" data-bs-target=\"#addUser\"><i class=\"fa fa-plus\"></i></button> -->\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- ======================= 마이페이지 상세조회 모달  =============================================-->\r\n");
      out.write("<div class=\"modal fade\" id=\"detailProfile\" tabindex=\"-1\" aria-labelledby=\"detailModalCenterTitle\" style=\"display: none;\" aria-hidden=\"true\">\r\n");
      out.write("    <div class=\"modal-dialog modal-dialog-centered\">\r\n");
      out.write("        <div class=\"modal-content\">\r\n");
      out.write("            <div class=\"modal-header\">\r\n");
      out.write("                <h4 class=\"modal-title\" id=\"detailModalCenterTitle\">내 프로필</h4>\r\n");
      out.write("                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-body\" id=\"myPage\">\r\n");
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-footer\">\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"btn btn-outline-secondary\" data-bs-toggle=\"modal\" data-bs-target=\"#editProfile\"><i class=\"icofont-edit text-success\"></i> 수정</button>\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-outline-secondary\" data-bs-toggle=\"modal\" data-bs-target=\"#deleteProfile\"><i class=\"icofont-ui-delete text-danger\"></i> 삭제</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- ======================= 마이페이지 수정 모달  =============================================-->\r\n");
      out.write("<form id=\"sub\" enctype=\"multipart/form-data\" method=\"post\" action=\"/ourmine/member/memberUpdate\">\r\n");
      out.write("\t<div class=\"modal fade\" id=\"editProfile\" tabindex=\"-1\" aria-hidden=\"true\">\r\n");
      out.write("\r\n");
      out.write("\t    <div class=\"modal-dialog modal-dialog-centered modal-md modal-dialog-scrollable\">\r\n");
      out.write("\r\n");
      out.write("\t        <div class=\"modal-content\">\r\n");
      out.write("\t            <div class=\"modal-header\">\r\n");
      out.write("\t                <h5 class=\"modal-title  fw-bold\" id=\"editProfileLabel\">내 프로필 수정</h5>\r\n");
      out.write("\t                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n");
      out.write("\t            </div>\r\n");
      out.write("\r\n");
      out.write("\t            <div class=\"modal-body\" id=\"modiMpModalbody\">\r\n");
      out.write("\r\n");
      out.write("\t            </div>\r\n");
      out.write("\t        </div>\r\n");
      out.write("\t    </div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("<!-- ======================= 마이페이지  삭제모달  =============================================-->\r\n");
      out.write("<div id=\"Page\" >\r\n");
      out.write("  \t<form class=\"mpDelForm\" onsubmit=\"deleteSubmit(event)\" enctype=\"multipart/form-data\">\r\n");
      out.write("\t   \t<div class=\"modal fade deleteModal\" id=\"deleteProfile\" tabindex=\"-1\" aria-hidden=\"true\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div class=\"modal-dialog modal-dialog-centered modal-md modal-dialog-scrollable\">\r\n");
      out.write("\t\t\t\t<div class=\"modal-content\">\r\n");
      out.write("\t\t\t\t\t<div id=\"project-id\" class=\"form-label\"></div>\r\n");
      out.write("\t\t\t\t\t<div class=\"modal-header\">\r\n");
      out.write("\t\t\t\t\t\t<h5 class=\"modal-title  fw-bold\" id=\"deleteProfileLabel\">본인 확인을 위해 비밀번호를 입력해주세요!</h5>\r\n");
      out.write("\t\t\t\t\t\t<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"modal-body justify-content-center flex-column d-flex\">\r\n");
      out.write("\t\t\t\t\t\t<input name=\"memberPassword\" type=\"password\" class=\"form-control nameInput memberPass\" id=\"exampleFormControlInput78\" value=\"\" onchange=\"passChange(event)\">\r\n");
      out.write("\t\t\t\t\t\t<p class=\"mt-4 fs-5 text-center passTag\"></p>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"modal-footer\">\r\n");
      out.write("\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-secondary deleteCancel\" data-bs-dismiss=\"modal\" onclick=\"handleCancel()\">Cancel</button>\r\n");
      out.write("\t\t\t\t\t\t<button type=\"submit\" id=\"delBtn\" class=\"btn btn-danger color-fff\">Delete</button>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t   \t</div>\r\n");
      out.write("\t</form>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div id=\"myToast\" class=\"myToast\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\r\n");
      out.write("    <div class=\"myToast-header\">\r\n");
      out.write("        <img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/lg/마스코트_투명.png\" class=\"avatar sm rounded me-1\" alt=\"\" />\r\n");
      out.write("        <strong class=\"me-auto\">Bootstrap</strong>\r\n");
      out.write("        <small class=\"text-muted\">just now</small>\r\n");
      out.write("        <button type=\"button\" class=\"myToast-btn-close\" aria-label=\"Close\">\r\n");
      out.write("            <span aria-hidden=\"true\">&times;</span>\r\n");
      out.write("        </button>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"myToast-body\">\r\n");
      out.write("        Hello, world! This is a toast message.\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("headers['Content-Type'] = 'application/json'\r\n");
      out.write("headers['accept'] = 'application/json'\r\n");
      out.write("let meAuto = document.querySelector('.me-auto');\r\n");
      out.write("let myToastBody = document.querySelector('.myToast-body');\r\n");
      out.write("let textMuted = document.querySelector('.text-muted');\r\n");
      out.write("\r\n");
      out.write("let orgchartBtn = document.querySelector('.orgchartBtn');\r\n");
      out.write("const sidebar = document.getElementById(\"simple-tree-sidebar\");\r\n");
      out.write("let memberImage = document.querySelector('.memberImage');\r\n");
      out.write("let memberImage2 = document.querySelector('.memberImage2');\r\n");
      out.write("let alarmForm = document.querySelector('#alarmForm');\r\n");
      out.write("let alarmTitle = document.querySelector('#alarmTitle');\r\n");
      out.write("let alarmWriter = document.querySelector('#alarmWriter');\r\n");
      out.write("let alarmDate = document.querySelector('#alarmDate');\r\n");
      out.write("let alarmContent = document.querySelector('#alarmContent');\r\n");
      out.write("let ararmekerl = document.querySelector('.ararmekerl');\r\n");
      out.write("\r\n");
      out.write("async function memberImageList(){\r\n");
      out.write("await axios.get('/ourmine/member/memberViewJson',{headers:headers})\r\n");
      out.write("\t\t.then(resp => {\r\n");
      out.write("\t\t\tlet data = resp.data;\r\n");
      out.write("\t\t\tconsole.log('data = ',data)\r\n");
      out.write("\t\t\tmemberImage.innerHTML = '';\r\n");
      out.write("\t\t\tmemberImage2.innerHTML = '';\r\n");
      out.write("\t\t\tlet array = []\r\n");
      out.write("\t\t\tarray.push(data);\r\n");
      out.write("\t\t\tarray.map(item => {\r\n");
      out.write("\t\t\t\tif(item.imageContents === null){\r\n");
      out.write("\t\t\t\t\tconsole.log('이미지없음')\r\n");
      out.write("                    memberImage.innerHTML +=  `<img class=\"avatar lg rounded-circle img-thumbnail\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/mytask/documentation/assets/images/profile_av.png\" alt=\"profile\">`\r\n");
      out.write("\t\t\t\t\tmemberImage2.innerHTML += `<img class=\"avatar lg rounded-circle img-thumbnail\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/mytask/documentation/assets/images/profile_av.png\" alt=\"profile\">`\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\tconsole.log('이미지있음')\r\n");
      out.write("\t\t\t\t\tmemberImage.innerHTML +=  `<img class=\"avatar lg rounded-circle img-thumbnail\" src=\"${item.imageContents}\" alt=\"profile\">`\r\n");
      out.write("\t\t\t\t\tmemberImage2.innerHTML += `<img class=\"avatar lg rounded-circle img-thumbnail\" src=\"${item.imageContents}\" alt=\"profile\">`\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t})\r\n");
      out.write("\t\t})\r\n");
      out.write("}\r\n");
      out.write("memberImageList();\r\n");
      out.write("// Toast 메시지를 생성하는 함수\r\n");
      out.write("// 토스트를 표시하는 함수\r\n");
      out.write("function showToast() {\r\n");
      out.write("\tlet toast = document.getElementById(\"myToast\");\r\n");
      out.write("\r\n");
      out.write("\t// 토스트 보이기\r\n");
      out.write("\ttoast.style.display = \"block\";\r\n");
      out.write("\r\n");
      out.write("\t// 약간의 딜레이 후 .show 클래스 추가\r\n");
      out.write("\tsetTimeout(function() {\r\n");
      out.write("\t\ttoast.classList.add(\"show\");\r\n");
      out.write("\t}, 200);\r\n");
      out.write("\r\n");
      out.write("\t// 토스트 닫기 버튼 이벤트 리스너\r\n");
      out.write("\tlet closeButton = document.querySelector('.myToast-btn-close');\r\n");
      out.write("\tcloseButton.addEventListener('click', function() {\r\n");
      out.write("\t\ttoast.style.display = 'none';\r\n");
      out.write("\t});\r\n");
      out.write("\t// 일정 시간(5초) 후 토스트 숨기기\r\n");
      out.write("\tsetTimeout(function() {\r\n");
      out.write("\t\ttoast.style.display = 'none';\r\n");
      out.write("\t}, 5000);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("let alarmList = document.querySelector('.alarmList');\r\n");
      out.write("let alarmCount = document.querySelector('.alarmCount');\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("async function alarmListMember(){\r\n");
      out.write("\tawait axios.get('/ourmine/alarm/alarmList',{headers: headers})\r\n");
      out.write("\t\t.then(resp => {\r\n");
      out.write("\t\t\tlet data = resp.data;\r\n");
      out.write("\t\t\tconsole.log(\"알림 리스트\", data)\r\n");
      out.write("\t\t\tlet html = '';\r\n");
      out.write("\t\t\tlet count = '';\r\n");
      out.write("\t\t\tcount += `<span>알림</span>`\r\n");
      out.write("\t\t\tcount += `<span>${data[0]?.alarmCount || 0}</span>`\r\n");
      out.write("\t\t\tdata.forEach((item, index) => {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t$(\".useMemberRoom\").each(function() {\r\n");
      out.write("\t\t\t\t\t$(this).find(\"#chatNewBedge\").css(\"display\", \"block\");\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\thtml += `  <a href=\"javascript:void(0);\" class=\"d-flex\" id=\"item${index}\">\r\n");
      out.write("                        <div class=\"flex-fill ms-2\">\r\n");
      out.write("                            <p class=\"d-flex justify-content-between mb-0 \">\r\n");
      out.write("                                <span class=\"font-weight-bold\">${item.alarmSender}</span>\r\n");
      out.write("                                <small>${item.alarmDate}</small>\r\n");
      out.write("                            </p>\r\n");
      out.write("                            <span class=\"\">${item.alarmContent}<span class=\"badge bg-success\">${item.review}<span></span>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </a>`\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\talarmList.innerHTML = html;\r\n");
      out.write("\t\t\talarmCount.innerHTML = count;\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\tdata.forEach((item, index) => {\r\n");
      out.write("\t\t\t\t// 각 아이템에 클릭 이벤트 리스너를 추가\r\n");
      out.write("\t\t\t\tdocument.getElementById(`item${index}`).addEventListener('click', () => modelView(item));\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\tchatListArea.html('');\r\n");
      out.write("\t\t\tchatGroupListArea.html('');\r\n");
      out.write("\t\t\tselectChatList();\r\n");
      out.write("\t\t\tselectGroupChatList();\r\n");
      out.write("\r\n");
      out.write("\t\t})\r\n");
      out.write("}\r\n");
      out.write("\t\talarmListMember();\r\n");
      out.write("\t\theaders['accept'] = 'application/json';\r\n");
      out.write("\t\theaders['Content-Type'] = 'application/json'\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t// 웹소켓 서버에 연결\r\n");
      out.write("\t\tlet socket = new WebSocket('ws://192.168.36.2/ourmine/aws/echo');\r\n");
      out.write("\r\n");
      out.write("\t\t// 연결이 열리면 서버에 메시지를 보낼 수 있습니다.\r\n");
      out.write("\t\tsocket.onopen = function(event) {\r\n");
      out.write("\r\n");
      out.write("\t\t};\r\n");
      out.write("\r\n");
      out.write("\t\t// 서버로부터 메시지를 받으면 이 함수가 호출됩니다.\r\n");
      out.write("\t\tlet orange = document.querySelector('.orange');\r\n");
      out.write("\r\n");
      out.write("\t\torange.addEventListener('click', function() {\r\n");
      out.write("\t\t\tthis.style.animation = '';\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tfunction modelView(item){\r\n");
      out.write("\t\t\tconsole.log(\"modelView Item, \",item);\r\n");
      out.write("\t\t\talarmTitle.value = item.alarmContent;\r\n");
      out.write("\t\t\talarmDate.value = item.alarmDate;\r\n");
      out.write("\t\t\talarmWriter.value = item.alarmSender;\r\n");
      out.write("\t\t\tlet modalElement = document.getElementById('modifyModal');\r\n");
      out.write("\t\t\tmodalElement.style.display = 'block';\r\n");
      out.write("\t\t\taxios.post('/ourmine/alarm/alarmUpdate',item,{headers:headers})\r\n");
      out.write("                .then(resp => {\r\n");
      out.write("\t\t\t\t\tlet data = resp.data;\r\n");
      out.write("\t                console.log('업데이트성공여부', data);\r\n");
      out.write("\t                alarmListMember();\r\n");
      out.write("                })\r\n");
      out.write("\t\t}\r\n");
      out.write("ararmekerl.addEventListener('click', () => {\r\n");
      out.write("\tlet modalElement = document.getElementById('modifyModal');\r\n");
      out.write("\tmodalElement.style.display = 'none';\r\n");
      out.write("})\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        let myUserId = '85'\r\n");
      out.write("\t\tsocket.onmessage = function(e) {\r\n");
      out.write("\t\t\tlet receivedData = JSON.parse(e.data);\r\n");
      out.write("\t\t\tconsole.log(\"receivedData = \", receivedData)\r\n");
      out.write("\t\t\tlet message = JSON.parse(receivedData.message);\r\n");
      out.write("\t\t\tif (message.userId === myUserId) {\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\tlet now = new Date();\r\n");
      out.write("\t\t\t// 날짜 정보를 가져옴\r\n");
      out.write("\t\t\tlet date = now.getDate(); // 일\r\n");
      out.write("\t\t\tlet month = now.getMonth() + 1; // 월 (0부터 시작하므로 +1을 해줌)\r\n");
      out.write("\t\t\tlet year = now.getFullYear(); // 연도\r\n");
      out.write("\r\n");
      out.write("\t\t\t// 시간 정보를 가져옴\r\n");
      out.write("\t\t\tlet hours = now.getHours(); // 시\r\n");
      out.write("\t\t\tlet minutes = now.getMinutes(); // 분\r\n");
      out.write("\r\n");
      out.write("\t\t\t// 한자리 숫자 앞에 0을 붙임\r\n");
      out.write("\t\t\tif (date < 10) {date = \"0\" + date}\r\n");
      out.write("\t\t\tif (month < 10) {month = \"0\" + month}\r\n");
      out.write("\t\t\tif (hours < 10) {hours = \"0\" + hours}\r\n");
      out.write("\t\t\tif (minutes < 10) {minutes = \"0\" + minutes}\r\n");
      out.write("\r\n");
      out.write("\t\t\t// 원하는 형식으로 날짜와 시간을 결합함\r\n");
      out.write("\t\t\tlet dateString = year + \"-\" + month + \"-\" + date; // YYYY-MM-DD 형식\r\n");
      out.write("\t\t\tlet timeString = hours + \":\" + minutes; // HH:MM 형식\r\n");
      out.write("\r\n");
      out.write("\t\t\tmeAuto.innerHTML = message.sander;\r\n");
      out.write("\t\t\tmyToastBody.innerHTML = message.message;\r\n");
      out.write("\t\t\ttextMuted.innerHTML = dateString + \" \" + timeString; // 날짜와 시간을 표시\r\n");
      out.write("\t\t\tshowToast();\r\n");
      out.write("\t\t\talarmListMember();\r\n");
      out.write("\t\t\torange.style.animation = \"pulse 1s infinite\";\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\t// 연결이 닫히거나 에러가 발생하면 이 함수가 호출됩니다.\r\n");
      out.write("\t\tsocket.onerror = function(error) {\r\n");
      out.write("\t\t\tconsole.log('WebSocket Error: ', error);\r\n");
      out.write("\t\t};\r\n");
      out.write("\r\n");
      out.write("\t\tsocket.onclose = function(event) {\r\n");
      out.write("\t\t\tconsole.log('WebSocket connection closed: ', event.code);\r\n");
      out.write("\t\t};\r\n");
      out.write("\r\n");
      out.write(" // =============================================================================\r\n");
      out.write("let memberPass =  document.querySelector('.memberPass');\r\n");
      out.write("let delForm = document.querySelector('.delForm');\r\n");
      out.write("let deleteCancel =  document.querySelector('.deleteCancel')\r\n");
      out.write("let passTag = document.querySelector('.passTag');\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("console.log(memberPass);\r\n");
      out.write("console.log(deleteCancel);\r\n");
      out.write("\r\n");
      out.write("const member = {\r\n");
      out.write("\tmemberPassword : ''\r\n");
      out.write("}\r\n");
      out.write("const handleCancel = () => {\r\n");
      out.write("\tmemberPass.value =  '';\r\n");
      out.write("\tpassTag.innerHTML = '';\r\n");
      out.write("\tdeleteCancel.click();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("const passChange = (e) => {\r\n");
      out.write("\tconst {name,value} = e.target;\r\n");
      out.write("\tadd1(name,value)\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("const add1 = (name,value) => {\r\n");
      out.write("\tmember[name] = value;\r\n");
      out.write("\tconsole.log(member)\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\theaders['Content-Type'] = 'application/json'\r\n");
      out.write("    headers['accept'] = 'application/json'\r\n");
      out.write("        const deleteSubmit = (e) => {\r\n");
      out.write("            e.preventDefault();\r\n");
      out.write("            fetch('/ourmine/member/memberDelete',{\r\n");
      out.write("                method : 'POST',\r\n");
      out.write("                headers : headers,\r\n");
      out.write("                body: JSON.stringify(member)\r\n");
      out.write("            }).then(resp => resp.json())\r\n");
      out.write("                .then(data => {\r\n");
      out.write("                \tconsole.log(passTag);\r\n");
      out.write("                    if(data === -1){\r\n");
      out.write("           \t\t\t passTag.innerHTML = '비밀번호가 맞지 않습니다.';\r\n");
      out.write("           \t\t\t passTag.style.display = 'block';\r\n");
      out.write("           \t\t\t passTag.style.color = 'red';\r\n");
      out.write("       \t\t }else{\r\n");
      out.write("       \t\t\t\t\tdeleteCancel.click();\r\n");
      out.write("\t\t\t\t\t\tmemberPass.value =  '';\r\n");
      out.write("\t\t\t\t\t\tpassTag.innerHTML = '';\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(" let myPage = document.querySelector('#myPage');\r\n");
      out.write(" let modiMpModalbody = document.querySelector('#modiMpModalbody');\r\n");
      out.write(" const myMember = {\r\n");
      out.write("\t\t memberEmail : '',\r\n");
      out.write("\t\t memberTel : '',\r\n");
      out.write("\t\t memberPassword : '',\r\n");
      out.write("\t\t memberPasswordResult : '',\r\n");
      out.write(" }\r\n");
      out.write("\r\n");
      out.write("async function myPageLoad() {\r\n");
      out.write("\tawait fetch('/ourmine/member/memberViewJson', {\r\n");
      out.write("\t\tmethod: 'GET',\r\n");
      out.write("\t\theaders: {\r\n");
      out.write("\t\t\t'accept': 'application/json',\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}).then(resp => resp.json())\r\n");
      out.write("\t\t\t.then(data => {\r\n");
      out.write("\t\t\t\tconsole.log(\"회원정보\", data);\r\n");
      out.write("\t\t\t\tmyMember.memberEmail = data.memberEmail;\r\n");
      out.write("\t\t\t\tmyMember.memberTel = data.memberTel;\r\n");
      out.write("\t\t\t\tmyMember.memberPassword = data.memberPassword;\r\n");
      out.write("\t\t\t\tconsole.log(myMember);\r\n");
      out.write("\t\t\t\tmyPage.innerHTML +=\r\n");
      out.write("\t\t\t\t\t`\r\n");
      out.write("\t\t\t\t\t <div class=\"card-body d-flex teacher-fulldeatil\">\r\n");
      out.write("                             <div class=\"profile-teacher pe-xl-4 pe-md-2 pe-sm-4 pe-4 text-center w220\">\r\n");
      out.write("                                 <a href=\"#\">\r\n");
      out.write("                          <!-- 회원이미지 쓸곳 -->   <img src=\"${data.imageContents !== null ? data.imageContents : '/ourmine/resources/mytask/documentation/assets/images/profile_av.png'}\" alt=\"\" class=\"avatar xl rounded-circle img-thumbnail shadow-sm\">\r\n");
      out.write("                                 </a>\r\n");
      out.write("                                 <div class=\"about-info d-flex align-items-center mt-3 justify-content-center flex-column\">\r\n");
      out.write("                                     <h6 class=\"mb-0 fw-bold d-block \" style=\"font-size: 20px;\">${data.memberName}</h6>\r\n");
      out.write("                                     <span class=\"text-muted \" style=\"font-size: 18px;\">${data.memberGrade}</span>\r\n");
      out.write("                                 </div>\r\n");
      out.write("                             </div>\r\n");
      out.write("                             <div class=\"teacher-info border-start ps-xl-4 ps-md-4 ps-sm-4 ps-4 w-100\">\r\n");
      out.write("\r\n");
      out.write("                                 <h6  class=\"mb-0 mt-2  fw-bold d-block \" style=\"font-size: 20px;\">${data.companyName === null ? '등록된 회사가 없습니다.' : '회사명 : ' + data.companyName}</h6>\r\n");
      out.write("\r\n");
      out.write("                                 <span class=\"py-1 fw-bold mb-0 mt-1 text-muted\" style=\"font-size: 14px;\"><span>CEO : </span>${data.companyCeo === null ? '등록된 회사가 없습니다.' : data.companyCeo}</span>\r\n");
      out.write("                                 <hr>\r\n");
      out.write("                                 <div class=\"row g-2 pt-2\">\r\n");
      out.write("                                     <div >\r\n");
      out.write("                                         <div class=\"d-flex align-items-center\" >\r\n");
      out.write("                                             <i class=\"icofont-ui-touch-phone\" style=\"font-size: 18px;\"></i>\r\n");
      out.write("                                             <span class=\"ms-2 \" style=\"font-size: 18px;\">${data.memberTel}</span>\r\n");
      out.write("                                         </div>\r\n");
      out.write("                                     </div>\r\n");
      out.write("                                     <hr>\r\n");
      out.write("                                     <div>\r\n");
      out.write("                                         <div class=\"d-flex align-items-center\">\r\n");
      out.write("                                             <i class=\"icofont-email\" style=\"font-size: 18px;\"></i>\r\n");
      out.write("                                             <span class=\"ms-2 \" style=\"font-size: 18px;\">${data.memberEmail}</span>\r\n");
      out.write("                                         </div>\r\n");
      out.write("                                     </div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<hr>\r\n");
      out.write("\r\n");
      out.write("                                 </div>\r\n");
      out.write("                             </div>\r\n");
      out.write("                         </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t`\r\n");
      out.write("\r\n");
      out.write("\t\t\t})\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write(" async function modiMyPageLoad() {\r\n");
      out.write("\t\tawait fetch('/ourmine/member/memberViewJson', {\r\n");
      out.write("\t\t\tmethod: 'GET',\r\n");
      out.write("\t\t\theaders: {\r\n");
      out.write("\t\t\t\t'accept': 'application/json',\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t}).then(resp => resp.json())\r\n");
      out.write("\t\t\t\t.then(data => {\r\n");
      out.write("\t\t\t\t\tconsole.log(\"회원정보\", data);\r\n");
      out.write("\t\t\t\t\tmyMember.memberEmail = data.memberEmail;\r\n");
      out.write("\t\t\t\t\tmyMember.memberTel = data.memberTel;\r\n");
      out.write("\t\t\t\t\tmyMember.memberPassword = data.memberPassword;\r\n");
      out.write("\t\t\t\t\tconsole.log(myMember);\r\n");
      out.write("\t\t\t\t\tmodiMpModalbody.innerHTML +=\r\n");
      out.write("\t\t\t\t\t`\r\n");
      out.write("\r\n");
      out.write("                        <div class=\"mb-3\"  style=\"font-size:14px;\">\r\n");
      out.write("\t\t\t\t\t \t\t<i class=\"icofont-user\"></i> <label for=\"exampleFormControlInput78\" class=\"form-label\">이름</label>\r\n");
      out.write("                            <input name=\"memberName\" type=\"text\" class=\"form-control nameInput\" id=\"exampleFormControlInput78\" value=\"${data.memberName}\" readonly>\r\n");
      out.write("                        </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                            <div class=\"mb-3\" style=\"font-size:14px;\">\r\n");
      out.write("                                <i class=\"icofont-email\" ></i> <label for=\"exampleFormControlInput78\" class=\"form-label\">이메일</label>\r\n");
      out.write("                                <input name=\"memberEmail\" type=\"text\" class=\"form-control mailInput\" id=\"exampleFormControlInput78\" value=\"${data.memberEmail}\" >\r\n");
      out.write("                                <span id=\"mail\"></span>\r\n");
      out.write("                            </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                            <div class=\"mb-3\" style=\"font-size:14px;\">\r\n");
      out.write("                                <i class=\"icofont-mobile-phone\" ></i> <label for=\"exampleFormControlInput78\" class=\"form-label\">전화번호</label>\r\n");
      out.write("                                <input  name=\"memberTel\" type=\"text\" class=\"form-control telInput\" id=\"exampleFormControlInput78\" value=\"${data.memberTel}\" >\r\n");
      out.write("                                <input  name=\"memberId\" type=\"hidden\" class=\"form-control IdInput\" id=\"exampleFormControlInput78\" value=\"${data.memberId}\" >\r\n");
      out.write("                                <span id=\"tel\"></span>\r\n");
      out.write("                            </div>\r\n");
      out.write("\r\n");
      out.write("                \t\t\t <div class=\"mb-3\" style=\"font-size:14px;\">\r\n");
      out.write("                \t\t\t    <i class=\"icofont-image\" ></i> <label for=\"exampleFormControlInput78\" class=\"form-label\">내 이미지</label>\r\n");
      out.write("                                <input  name=\"file\" type=\"file\" class=\"form-control telInput\" id=\"exampleFormControlInput78\" value=\"${data.memberTel}\" >\r\n");
      out.write("                            </div>\r\n");
      out.write("\r\n");
      out.write("                            <div class=\"mb-3\"  style=\"font-size:14px;\">\r\n");
      out.write("                                <i class=\"icofont-check\" ></i> <label for=\"exampleFormControlInput78\" class=\"form-label\">비밀번호 확인</label>\r\n");
      out.write("                                <input  name=\"memberPassword\" type=\"password\" class=\"form-control passInput\" id=\"exampleFormControlInput78\" value=\"\" >\r\n");
      out.write("                                <span id=\"pass\"></span>\r\n");
      out.write("                            </div>\r\n");
      out.write("\r\n");
      out.write("                            <div class=\"modal-footer\">\r\n");
      out.write("                                <button type=\"button\" class=\"btn btn-secondary clo\" data-bs-dismiss=\"modal\">취소</button>\r\n");
      out.write("                                <button type=\"submit\" class=\"btn btn-primary\">완료</button>\r\n");
      out.write("                            </div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t`;\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t})\r\n");
      out.write("\r\n");
      out.write(" }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" async function MyPageJs() {\r\n");
      out.write("\t let regex = new RegExp(\"([!#-'*+/-9=?A-Z^-~-]+(\\.[!#-'*+/-9=?A-Z^-~-]+)*|\\\"\\(\\[\\]!#-[^-~ \\t]|(\\\\[\\t -~]))+\\\")@([!#-'*+/-9=?A-Z^-~-]+(\\.[!#-'*+/-9=?A-Z^-~-]+)*|\\[[\\t -Z^-~]*])\"); // 이메일 정규식\r\n");
      out.write("\t let reg = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/; // 비밀번호 정규식\r\n");
      out.write("\t let regPone = /^01([0|1|6|7|8|9]?)-?([0-9]{3,4})-?([0-9]{4})$/; // 전화번호 정규식\r\n");
      out.write("\t let mailInput = document.querySelector('.mailInput');\r\n");
      out.write("\t let telInput = document.querySelector('.telInput');\r\n");
      out.write("\t let passInput = document.querySelector('.passInput');\r\n");
      out.write("\t let IdInput = document.querySelector('.IdInput');\r\n");
      out.write("\t let nameInput = document.querySelector('.nameInput');\r\n");
      out.write("\t let clo = document.querySelector('.clo');\r\n");
      out.write("\t let pass = document.querySelector('#pass');\r\n");
      out.write("\t let mail = document.querySelector('#mail');\r\n");
      out.write("\t let tel = document.querySelector('#tel');\r\n");
      out.write("\t let sub = document.querySelector('#sub');\r\n");
      out.write("\t let formData = new FormData();\r\n");
      out.write("\t let fileField = document.querySelector(\"input[type='file']\");\r\n");
      out.write("\r\n");
      out.write("\t let myMember = {\r\n");
      out.write("\t\t memberId: '',\r\n");
      out.write("\t\t memberEmail: '',\r\n");
      out.write("\t\t memberName: '',\r\n");
      out.write("\t\t memberTel: '',\r\n");
      out.write("\t\t memberPassword: '',\r\n");
      out.write("\t }\r\n");
      out.write("\r\n");
      out.write("\t const mailValue = mailInput.value;\r\n");
      out.write("\t const telValue = telInput.value;\r\n");
      out.write("\t let isEmail = true;\r\n");
      out.write("\t let isTel = true;\r\n");
      out.write("\t let isPassword = true;\r\n");
      out.write("\r\n");
      out.write("\t clo.addEventListener('click', () => {\r\n");
      out.write("\t\t pass.innerHTML = '';\r\n");
      out.write("\t\t passInput.value = '';\r\n");
      out.write("\t\t tel.innerHTML = '';\r\n");
      out.write("\t\t mail.innerHTML = '';\r\n");
      out.write("\t\t mailInput.value = mailValue;\r\n");
      out.write("\t\t console.log(\"mailInputvalue\", mailInput.value);\r\n");
      out.write("\t\t telInput.value = telValue;\r\n");
      out.write("\t })\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t mailInput.addEventListener('change', (e) => {\r\n");
      out.write("\t\t const {name, value} = e.target;\r\n");
      out.write("\t\t console.log(name, value);\r\n");
      out.write("\t\t add1(name, value);\r\n");
      out.write("\t })\r\n");
      out.write("\t telInput.addEventListener('change', (e) => {\r\n");
      out.write("\t\t const {name, value} = e.target;\r\n");
      out.write("\t\t console.log(name, value);\r\n");
      out.write("\t\t add1(name, value);\r\n");
      out.write("\t })\r\n");
      out.write("\t passInput.addEventListener('change', (e) => {\r\n");
      out.write("\t\t const {name, value} = e.target;\r\n");
      out.write("\t\t console.log(name, value);\r\n");
      out.write("\t\t add1(name, value);\r\n");
      out.write("\t })\r\n");
      out.write("\r\n");
      out.write("\t const add1 = (name, value) => {\r\n");
      out.write("\t\t myMember[name] = value;\r\n");
      out.write("\t\t myMember[\"memberId\"] = IdInput.value;\r\n");
      out.write("\t\t myMember[\"memberName\"] = nameInput.value;\r\n");
      out.write("\t\t console.log(myMember.memberId)\r\n");
      out.write("\t }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t sub.addEventListener('submit', (e) => {\r\n");
      out.write("\t\t console.log(\"e => \", e);\r\n");
      out.write("\t\t e.preventDefault();\r\n");
      out.write("\t\t console.log('여기까지오니')\r\n");
      out.write("\t\t e.preventDefault();\r\n");
      out.write("\r\n");
      out.write("\t\t if (mailInput.value === '') {\r\n");
      out.write("\t\t\t mail.innerHTML = '';\r\n");
      out.write("\t\t\t mail.innerHTML = '이메일을 입력해주세요';\r\n");
      out.write("\t\t\t mail.style.color = 'red';\r\n");
      out.write("\t\t\t isEmail = false;\r\n");
      out.write("\t\t } else {\r\n");
      out.write("\t\t\t isEmail = true;\r\n");
      out.write("\t\t\t mail.innerHTML = '';\r\n");
      out.write("\t\t }\r\n");
      out.write("\t\t if (telInput.value === '') {\r\n");
      out.write("\t\t\t tel.innerHTML = '';\r\n");
      out.write("\t\t\t tel.innerHTML = '전화번호를 입력해주세요';\r\n");
      out.write("\t\t\t tel.style.color = 'red';\r\n");
      out.write("\t\t\t isTel = false;\r\n");
      out.write("\t\t } else {\r\n");
      out.write("\t\t\t isTel = true;\r\n");
      out.write("\t\t\t tel.innerHTML = '';\r\n");
      out.write("\t\t }\r\n");
      out.write("\t\t if (passInput.value === '') {\r\n");
      out.write("\t\t\t pass.innerHTML = '';\r\n");
      out.write("\t\t\t pass.innerHTML = '비밀번호를 입력해주세요';\r\n");
      out.write("\t\t\t pass.style.color = 'red'\r\n");
      out.write("\t\t\t isPassword = false;\r\n");
      out.write("\t\t } else {\r\n");
      out.write("\t\t\t isPassword = true;\r\n");
      out.write("\t\t\t pass.innerHTML = '';\r\n");
      out.write("\t\t }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t if (isTel && isEmail && isPassword) {\r\n");
      out.write("\r\n");
      out.write("\t\t\t if (fileField.files[0] != undefined) {\r\n");
      out.write("\t\t\t\t formData.set(\"file\", fileField.files[0]);\r\n");
      out.write("\t\t\t }\r\n");
      out.write("\t\t\t formData.set(\"memberId\", IdInput.value);\r\n");
      out.write("\t\t\t formData.set(\"memberEmail\", mailInput.value);\r\n");
      out.write("\t\t\t formData.set(\"memberName\", nameInput.value);\r\n");
      out.write("\t\t\t formData.set(\"memberTel\", telInput.value);\r\n");
      out.write("\t\t\t formData.set(\"memberPassword\", passInput.value);\r\n");
      out.write("\t\t\t console.log(formData);\r\n");
      out.write("\t\t\t headers['accept'] = 'application/json';\r\n");
      out.write("\t\t\t headers['Content-Type'] = 'multipart/form-data';\r\n");
      out.write("\t\t\t let page = $('#myPage');\r\n");
      out.write("\r\n");
      out.write("\t\t\t e.preventDefault();\r\n");
      out.write("\t\t\t Swal.fire({\r\n");
      out.write("\t\t\t\t\ticon: 'success',\r\n");
      out.write("\t\t\t\t\ttitle:'수정완료',\r\n");
      out.write("\t\t\t\t\tshowConfirmButton: false,\r\n");
      out.write("\t\t\t\t\ttimer: 1000\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t \treturn axios.post('/ourmine/member/memberUpdate', formData, {headers: headers})\r\n");
      out.write("\t\t\t\t\t .then( (resp) => {\r\n");
      out.write("\t\t\t\t\t\t let data = resp.data;\r\n");
      out.write("\t\t\t\t\t\t if (data === -1) {\r\n");
      out.write("\t\t\t\t\t\t\t pass.innerHTML = '비밀번호가 일치하지 않습니다.';\r\n");
      out.write("\t\t\t\t\t\t\t pass.style.color = 'red';\r\n");
      out.write("\t\t\t\t\t\t\t return false;\r\n");
      out.write("\t\t\t\t\t\t } else {\r\n");
      out.write("\t\t\t\t\t\t\t pass.innerHTML = '';\r\n");
      out.write("\t\t\t\t\t\t\t passInput.value = '';\r\n");
      out.write("\t\t\t\t\t\t }\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t if (data > 0) {\r\n");
      out.write("\t\t\t\t\t\t\t console.log('성공:', data);\r\n");
      out.write("\t\t\t\t\t\t\t clo.click();\r\n");
      out.write("\t\t\t\t\t\t\t page.empty();\r\n");
      out.write("\t\t\t\t\t\t\t memberImageList();\r\n");
      out.write("\t\t\t\t\t\t\t  myPageLoad();\r\n");
      out.write("\t\t\t\t\t\t\t passInput.value = '';\r\n");
      out.write("\t\t\t\t\t\t } else {\r\n");
      out.write("\t\t\t\t\t\t\t pass.innerHTML = '';\r\n");
      out.write("\t\t\t\t\t\t\t passInput.value = '';\r\n");
      out.write("\t\t\t\t\t\t }\r\n");
      out.write("\t\t\t\t\t\t document.getElementById('modiMpModalbody').innerHTML=\"\";\r\n");
      out.write("\t\t \t\t\t\t modiMyPageLoad().then(MyPageJs);\r\n");
      out.write("\t\t\t\t\t })\r\n");
      out.write("\t\t\t\t\t .catch((error) => {\r\n");
      out.write("\t\t\t\t\t\t console.error(\"memberUpdate : \", error);\r\n");
      out.write("\t\t\t\t\t });\r\n");
      out.write("\t\t }\r\n");
      out.write("\t })\r\n");
      out.write(" }\r\n");
      out.write("myPageLoad()\r\n");
      out.write("modiMyPageLoad().then(MyPageJs)\r\n");
      out.write("\r\n");
      out.write("setTimeout(() => {\r\n");
      out.write("\talarmListMember();\r\n");
      out.write("}, 1000);\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    </script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_security_005fauthentication_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  security:authentication
    org.springframework.security.taglibs.authz.AuthenticationTag _jspx_th_security_005fauthentication_005f0 = (org.springframework.security.taglibs.authz.AuthenticationTag) _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fvar_005fproperty_005fnobody.get(org.springframework.security.taglibs.authz.AuthenticationTag.class);
    boolean _jspx_th_security_005fauthentication_005f0_reused = false;
    try {
      _jspx_th_security_005fauthentication_005f0.setPageContext(_jspx_page_context);
      _jspx_th_security_005fauthentication_005f0.setParent(null);
      // /includee/headerMenu.jsp(147,0) name = property type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_security_005fauthentication_005f0.setProperty("principal");
      // /includee/headerMenu.jsp(147,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_security_005fauthentication_005f0.setVar("principal");
      int _jspx_eval_security_005fauthentication_005f0 = _jspx_th_security_005fauthentication_005f0.doStartTag();
      if (_jspx_th_security_005fauthentication_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fvar_005fproperty_005fnobody.reuse(_jspx_th_security_005fauthentication_005f0);
      _jspx_th_security_005fauthentication_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_security_005fauthentication_005f0, _jsp_getInstanceManager(), _jspx_th_security_005fauthentication_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /includee/headerMenu.jsp(149,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("companyId");
      // /includee/headerMenu.jsp(149,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/includee/headerMenu.jsp(149,0) '${principal.realUser.companyId}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${principal.realUser.companyId}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent(null);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("   ");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("   ");
          if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write('\r');
          out.write('\n');
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /includee/headerMenu.jsp(151,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${companyId eq 0 }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("      <script>\r\n");
          out.write("          const companyId1 = undefined;\r\n");
          out.write("          console.log(\"companyId1 =\",companyId1)\r\n");
          out.write("       </script>\r\n");
          out.write("   ");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("      <script>\r\n");
          out.write("         const companyId1 = ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${companyId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write(";\r\n");
          out.write("         console.log(\"companyId1 =\",companyId1)\r\n");
          out.write("      </script>\r\n");
          out.write("   ");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_security_005fauthorize_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  security:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_security_005fauthorize_005f0 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsecurity_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_security_005fauthorize_005f0_reused = false;
    try {
      _jspx_th_security_005fauthorize_005f0.setPageContext(_jspx_page_context);
      _jspx_th_security_005fauthorize_005f0.setParent(null);
      // /includee/headerMenu.jsp(219,8) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_security_005fauthorize_005f0.setAccess("hasRole('MANAGER')");
      int _jspx_eval_security_005fauthorize_005f0 = _jspx_th_security_005fauthorize_005f0.doStartTag();
      if (_jspx_eval_security_005fauthorize_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\r\n");
        out.write("        ");
        if (_jspx_meth_security_005fauthentication_005f1(_jspx_th_security_005fauthorize_005f0, _jspx_page_context))
          return true;
        out.write("\r\n");
        out.write("        <div class=\"dropdown user-profile ml-2 ml-sm-3 d-flex align-items-center zindex-popover\">\r\n");
        out.write("            <div class=\"u-info me-2\">\r\n");
        out.write("                <p class=\"mb-0 text-end line-height-sm \"><span class=\"font-weight-bold\">");
        if (_jspx_meth_security_005fauthentication_005f2(_jspx_th_security_005fauthorize_005f0, _jspx_page_context))
          return true;
        out.write("</span></p>\r\n");
        out.write("\t");
        out.write("\r\n");
        out.write("\t\t\t\t\r\n");
        out.write("               <small style=\"color: orange;\">\r\n");
        out.write("                ");
        if (_jspx_meth_c_005fset_005f1(_jspx_th_security_005fauthorize_005f0, _jspx_page_context))
          return true;
        out.write("\r\n");
        out.write("               ");
        if (_jspx_meth_c_005fchoose_005f1(_jspx_th_security_005fauthorize_005f0, _jspx_page_context))
          return true;
        out.write("\r\n");
        out.write("                                ");
        if (_jspx_meth_security_005fauthentication_005f4(_jspx_th_security_005fauthorize_005f0, _jspx_page_context))
          return true;
        out.write("</small>\r\n");
        out.write("            </div>\r\n");
        out.write("            <a class=\"nav-link dropdown-toggle pulse p-0 memberImage\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" data-bs-display=\"static\">\r\n");
        out.write("\r\n");
        out.write("            </a>\r\n");
        out.write("\r\n");
        out.write("            <div class=\"dropdown-menu rounded-lg shadow border-0 dropdown-animation dropdown-menu-end p-0 m-0\">\r\n");
        out.write("                <div class=\"card border-0 w280\">\r\n");
        out.write("                    <div class=\"card-body pb-0\">\r\n");
        out.write("                        <div class=\"d-flex py-1\">\r\n");
        out.write("                        <span class=\"memberImage2\"></span>\r\n");
        out.write("                            ");
        out.write("\r\n");
        out.write("                            <div class=\"flex-fill ms-3\">\r\n");
        out.write("                                <p class=\"mb-0\"><span class=\"font-weight-bold\">");
        if (_jspx_meth_security_005fauthentication_005f5(_jspx_th_security_005fauthorize_005f0, _jspx_page_context))
          return true;
        out.write("</span></p>\r\n");
        out.write("                                <small class=\"\">");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${authMember.username}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("</small>\r\n");
        out.write("                                <!-- 구독 정보 -->\r\n");
        out.write("                                <br>\r\n");
        out.write("\t\t\t\t\t\t\t   ");
        if (_jspx_meth_security_005fauthorize_005f1(_jspx_th_security_005fauthorize_005f0, _jspx_page_context))
          return true;
        out.write("\r\n");
        out.write("                            </div>\r\n");
        out.write("                        </div>\r\n");
        out.write("\r\n");
        out.write("                        <div><hr class=\"dropdown-divider border-dark\"></div>\r\n");
        out.write("                    </div>\r\n");
        out.write("                     <div class=\"list-group m-2 \">\r\n");
        out.write("                    \t<ul id=\"hmList\">\r\n");
        out.write("\t                        <li><a href=\"/ourmine/project/projectList\" class=\"list-group-item list-group-item-action border-0 \"><i class=\"icofont-home fs-5 me-3\"></i>프로젝트</a></li>\r\n");
        out.write("\t                        <li><a href=\"/ourmine/member/memberList\" class=\"list-group-item list-group-item-action border-0 \"><i class=\"icofont-tasks fs-5 me-3\"></i>직원관리</a></li>\r\n");
        out.write("\t<!--                         <a href=\"/ourmine/member/memberView\" class=\"list-group-item list-group-item-action border-0 \"><i class=\"icofont-user-alt-3 fs-5 me-3\"></i>MyPage</a> -->\r\n");
        out.write("\t                        <li data-bs-toggle=\"modal\" data-bs-target=\"#detailProfile\"><a href=\"#\"  class=\"list-group-item list-group-item-action border-0 \"><i class=\"icofont-user-alt-3 fs-5 me-3\"></i>내 프로필</a></li>\r\n");
        out.write("\t                        <li><a href=\"\" class=\"list-group-item list-group-item-action border-0 \"><i class=\"icofont-users-alt-5 fs-5 me-3\"></i>회사 인원 추가하기</a></li>\r\n");
        out.write("\t\t                  \t\t<form id=\"logoutForm\" action=\"");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("/logout\" method=\"post\">\r\n");
        out.write("\t\t                        \t");
        if (_jspx_meth_security_005fcsrfInput_005f0(_jspx_th_security_005fauthorize_005f0, _jspx_page_context))
          return true;
        out.write("\r\n");
        out.write("\t\t                        </form>\r\n");
        out.write("\t                        <li><a href=\"javascript:$('#logoutForm').submit();\" class=\"list-group-item list-group-item-action border-0 \"><i class=\"icofont-logout fs-6 me-3\"></i>로그아웃</a></li>\r\n");
        out.write("                        </ul>\r\n");
        out.write("                    </div>\r\n");
        out.write("                </div>\r\n");
        out.write("            </div>\r\n");
        out.write("        </div>\r\n");
        out.write("        ");
      }
      if (_jspx_th_security_005fauthorize_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsecurity_005fauthorize_0026_005faccess.reuse(_jspx_th_security_005fauthorize_005f0);
      _jspx_th_security_005fauthorize_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_security_005fauthorize_005f0, _jsp_getInstanceManager(), _jspx_th_security_005fauthorize_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_security_005fauthentication_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_security_005fauthorize_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  security:authentication
    org.springframework.security.taglibs.authz.AuthenticationTag _jspx_th_security_005fauthentication_005f1 = (org.springframework.security.taglibs.authz.AuthenticationTag) _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fvar_005fproperty_005fnobody.get(org.springframework.security.taglibs.authz.AuthenticationTag.class);
    boolean _jspx_th_security_005fauthentication_005f1_reused = false;
    try {
      _jspx_th_security_005fauthentication_005f1.setPageContext(_jspx_page_context);
      _jspx_th_security_005fauthentication_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_security_005fauthorize_005f0);
      // /includee/headerMenu.jsp(220,8) name = property type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_security_005fauthentication_005f1.setProperty("principal");
      // /includee/headerMenu.jsp(220,8) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_security_005fauthentication_005f1.setVar("authMember");
      int _jspx_eval_security_005fauthentication_005f1 = _jspx_th_security_005fauthentication_005f1.doStartTag();
      if (_jspx_th_security_005fauthentication_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fvar_005fproperty_005fnobody.reuse(_jspx_th_security_005fauthentication_005f1);
      _jspx_th_security_005fauthentication_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_security_005fauthentication_005f1, _jsp_getInstanceManager(), _jspx_th_security_005fauthentication_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_security_005fauthentication_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_security_005fauthorize_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  security:authentication
    org.springframework.security.taglibs.authz.AuthenticationTag _jspx_th_security_005fauthentication_005f2 = (org.springframework.security.taglibs.authz.AuthenticationTag) _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fproperty_005fnobody.get(org.springframework.security.taglibs.authz.AuthenticationTag.class);
    boolean _jspx_th_security_005fauthentication_005f2_reused = false;
    try {
      _jspx_th_security_005fauthentication_005f2.setPageContext(_jspx_page_context);
      _jspx_th_security_005fauthentication_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_security_005fauthorize_005f0);
      // /includee/headerMenu.jsp(223,88) name = property type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_security_005fauthentication_005f2.setProperty("principal.realUser.memberName");
      int _jspx_eval_security_005fauthentication_005f2 = _jspx_th_security_005fauthentication_005f2.doStartTag();
      if (_jspx_th_security_005fauthentication_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fproperty_005fnobody.reuse(_jspx_th_security_005fauthentication_005f2);
      _jspx_th_security_005fauthentication_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_security_005fauthentication_005f2, _jsp_getInstanceManager(), _jspx_th_security_005fauthentication_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_security_005fauthorize_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f1 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f1_reused = false;
    try {
      _jspx_th_c_005fset_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_security_005fauthorize_005f0);
      // /includee/headerMenu.jsp(227,16) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f1.setVar("companyName");
      // /includee/headerMenu.jsp(227,16) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f1.setValue(new org.apache.jasper.el.JspValueExpression("/includee/headerMenu.jsp(227,16) '${principal.realUser.companyName }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${principal.realUser.companyName }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f1 = _jspx_th_c_005fset_005f1.doStartTag();
      if (_jspx_th_c_005fset_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f1);
      _jspx_th_c_005fset_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_security_005fauthorize_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f1 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f1_reused = false;
    try {
      _jspx_th_c_005fchoose_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_security_005fauthorize_005f0);
      int _jspx_eval_c_005fchoose_005f1 = _jspx_th_c_005fchoose_005f1.doStartTag();
      if (_jspx_eval_c_005fchoose_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t               ");
          if (_jspx_meth_c_005fwhen_005f1(_jspx_th_c_005fchoose_005f1, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("\t               ");
          if (_jspx_meth_c_005fotherwise_005f1(_jspx_th_c_005fchoose_005f1, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("               ");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f1);
      _jspx_th_c_005fchoose_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f1 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f1_reused = false;
    try {
      _jspx_th_c_005fwhen_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f1);
      // /includee/headerMenu.jsp(229,16) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty companyName}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f1 = _jspx_th_c_005fwhen_005f1.doStartTag();
      if (_jspx_eval_c_005fwhen_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t               ");
          if (_jspx_meth_security_005fauthentication_005f3(_jspx_th_c_005fwhen_005f1, _jspx_page_context))
            return true;
          out.write(",\r\n");
          out.write("\t               ");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f1);
      _jspx_th_c_005fwhen_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_security_005fauthentication_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fwhen_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  security:authentication
    org.springframework.security.taglibs.authz.AuthenticationTag _jspx_th_security_005fauthentication_005f3 = (org.springframework.security.taglibs.authz.AuthenticationTag) _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fproperty_005fnobody.get(org.springframework.security.taglibs.authz.AuthenticationTag.class);
    boolean _jspx_th_security_005fauthentication_005f3_reused = false;
    try {
      _jspx_th_security_005fauthentication_005f3.setPageContext(_jspx_page_context);
      _jspx_th_security_005fauthentication_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f1);
      // /includee/headerMenu.jsp(230,17) name = property type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_security_005fauthentication_005f3.setProperty("principal.realUser.companyName");
      int _jspx_eval_security_005fauthentication_005f3 = _jspx_th_security_005fauthentication_005f3.doStartTag();
      if (_jspx_th_security_005fauthentication_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fproperty_005fnobody.reuse(_jspx_th_security_005fauthentication_005f3);
      _jspx_th_security_005fauthentication_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_security_005fauthentication_005f3, _jsp_getInstanceManager(), _jspx_th_security_005fauthentication_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f1 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f1_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f1);
      int _jspx_eval_c_005fotherwise_005f1 = _jspx_th_c_005fotherwise_005f1.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t                  회사정보가 없습니다.\r\n");
          out.write("\t               ");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f1);
      _jspx_th_c_005fotherwise_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_security_005fauthentication_005f4(javax.servlet.jsp.tagext.JspTag _jspx_th_security_005fauthorize_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  security:authentication
    org.springframework.security.taglibs.authz.AuthenticationTag _jspx_th_security_005fauthentication_005f4 = (org.springframework.security.taglibs.authz.AuthenticationTag) _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fproperty_005fnobody.get(org.springframework.security.taglibs.authz.AuthenticationTag.class);
    boolean _jspx_th_security_005fauthentication_005f4_reused = false;
    try {
      _jspx_th_security_005fauthentication_005f4.setPageContext(_jspx_page_context);
      _jspx_th_security_005fauthentication_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_security_005fauthorize_005f0);
      // /includee/headerMenu.jsp(236,32) name = property type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_security_005fauthentication_005f4.setProperty("principal.realUser.memberGrade");
      int _jspx_eval_security_005fauthentication_005f4 = _jspx_th_security_005fauthentication_005f4.doStartTag();
      if (_jspx_th_security_005fauthentication_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fproperty_005fnobody.reuse(_jspx_th_security_005fauthentication_005f4);
      _jspx_th_security_005fauthentication_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_security_005fauthentication_005f4, _jsp_getInstanceManager(), _jspx_th_security_005fauthentication_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_security_005fauthentication_005f5(javax.servlet.jsp.tagext.JspTag _jspx_th_security_005fauthorize_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  security:authentication
    org.springframework.security.taglibs.authz.AuthenticationTag _jspx_th_security_005fauthentication_005f5 = (org.springframework.security.taglibs.authz.AuthenticationTag) _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fproperty_005fnobody.get(org.springframework.security.taglibs.authz.AuthenticationTag.class);
    boolean _jspx_th_security_005fauthentication_005f5_reused = false;
    try {
      _jspx_th_security_005fauthentication_005f5.setPageContext(_jspx_page_context);
      _jspx_th_security_005fauthentication_005f5.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_security_005fauthorize_005f0);
      // /includee/headerMenu.jsp(249,79) name = property type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_security_005fauthentication_005f5.setProperty("principal.realUser.memberName");
      int _jspx_eval_security_005fauthentication_005f5 = _jspx_th_security_005fauthentication_005f5.doStartTag();
      if (_jspx_th_security_005fauthentication_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fproperty_005fnobody.reuse(_jspx_th_security_005fauthentication_005f5);
      _jspx_th_security_005fauthentication_005f5_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_security_005fauthentication_005f5, _jsp_getInstanceManager(), _jspx_th_security_005fauthentication_005f5_reused);
    }
    return false;
  }

  private boolean _jspx_meth_security_005fauthorize_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_security_005fauthorize_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  security:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_security_005fauthorize_005f1 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsecurity_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_security_005fauthorize_005f1_reused = false;
    try {
      _jspx_th_security_005fauthorize_005f1.setPageContext(_jspx_page_context);
      _jspx_th_security_005fauthorize_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_security_005fauthorize_005f0);
      // /includee/headerMenu.jsp(253,10) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_security_005fauthorize_005f1.setAccess("hasRole('MANAGER')");
      int _jspx_eval_security_005fauthorize_005f1 = _jspx_th_security_005fauthorize_005f1.doStartTag();
      if (_jspx_eval_security_005fauthorize_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\r\n");
        out.write("\t\t\t\t\t\t\t\t   <small>\r\n");
        out.write("\t\t\t\t\t\t\t\t\t    남은 구독 일자 :\r\n");
        out.write("\t\t\t\t\t\t\t\t\t    ");
        if (_jspx_meth_security_005fauthentication_005f6(_jspx_th_security_005fauthorize_005f1, _jspx_page_context))
          return true;
        out.write("\r\n");
        out.write("\t\t\t\t\t\t\t\t\t    일\r\n");
        out.write("\r\n");
        out.write("\t\t\t\t\t\t\t\t\t    <a class=\"ms-link active\" href=\"/ourmine/subscribe/itemList.do\">\r\n");
        out.write("\t\t\t\t\t\t\t\t\t    <br>\r\n");
        out.write("\t\t\t\t\t\t\t\t\t    <i class=\"icofont-pay\"></i><span> 결제하기</span></a>\r\n");
        out.write("\t\t\t\t\t\t\t\t   </small>\r\n");
        out.write("\t\t\t\t\t\t\t    ");
      }
      if (_jspx_th_security_005fauthorize_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsecurity_005fauthorize_0026_005faccess.reuse(_jspx_th_security_005fauthorize_005f1);
      _jspx_th_security_005fauthorize_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_security_005fauthorize_005f1, _jsp_getInstanceManager(), _jspx_th_security_005fauthorize_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_security_005fauthentication_005f6(javax.servlet.jsp.tagext.JspTag _jspx_th_security_005fauthorize_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  security:authentication
    org.springframework.security.taglibs.authz.AuthenticationTag _jspx_th_security_005fauthentication_005f6 = (org.springframework.security.taglibs.authz.AuthenticationTag) _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fproperty_005fnobody.get(org.springframework.security.taglibs.authz.AuthenticationTag.class);
    boolean _jspx_th_security_005fauthentication_005f6_reused = false;
    try {
      _jspx_th_security_005fauthentication_005f6.setPageContext(_jspx_page_context);
      _jspx_th_security_005fauthentication_005f6.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_security_005fauthorize_005f1);
      // /includee/headerMenu.jsp(256,13) name = property type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_security_005fauthentication_005f6.setProperty("principal.realUser.subscribeDate");
      int _jspx_eval_security_005fauthentication_005f6 = _jspx_th_security_005fauthentication_005f6.doStartTag();
      if (_jspx_th_security_005fauthentication_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fproperty_005fnobody.reuse(_jspx_th_security_005fauthentication_005f6);
      _jspx_th_security_005fauthentication_005f6_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_security_005fauthentication_005f6, _jsp_getInstanceManager(), _jspx_th_security_005fauthentication_005f6_reused);
    }
    return false;
  }

  private boolean _jspx_meth_security_005fcsrfInput_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_security_005fauthorize_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  security:csrfInput
    org.springframework.security.taglibs.csrf.CsrfInputTag _jspx_th_security_005fcsrfInput_005f0 = (org.springframework.security.taglibs.csrf.CsrfInputTag) _005fjspx_005ftagPool_005fsecurity_005fcsrfInput_005fnobody.get(org.springframework.security.taglibs.csrf.CsrfInputTag.class);
    boolean _jspx_th_security_005fcsrfInput_005f0_reused = false;
    try {
      _jspx_th_security_005fcsrfInput_005f0.setPageContext(_jspx_page_context);
      _jspx_th_security_005fcsrfInput_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_security_005fauthorize_005f0);
      int _jspx_eval_security_005fcsrfInput_005f0 = _jspx_th_security_005fcsrfInput_005f0.doStartTag();
      if (_jspx_th_security_005fcsrfInput_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsecurity_005fcsrfInput_005fnobody.reuse(_jspx_th_security_005fcsrfInput_005f0);
      _jspx_th_security_005fcsrfInput_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_security_005fcsrfInput_005f0, _jsp_getInstanceManager(), _jspx_th_security_005fcsrfInput_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_security_005fauthorize_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  security:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_security_005fauthorize_005f2 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsecurity_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_security_005fauthorize_005f2_reused = false;
    try {
      _jspx_th_security_005fauthorize_005f2.setPageContext(_jspx_page_context);
      _jspx_th_security_005fauthorize_005f2.setParent(null);
      // /includee/headerMenu.jsp(288,8) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_security_005fauthorize_005f2.setAccess("hasRole('MEMBER')");
      int _jspx_eval_security_005fauthorize_005f2 = _jspx_th_security_005fauthorize_005f2.doStartTag();
      if (_jspx_eval_security_005fauthorize_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write('\r');
        out.write('\n');
        out.write('	');
        out.write("\r\n");
        out.write("        ");
        if (_jspx_meth_security_005fauthentication_005f7(_jspx_th_security_005fauthorize_005f2, _jspx_page_context))
          return true;
        out.write("\r\n");
        out.write("        <div class=\"dropdown user-profile ml-2 ml-sm-3 d-flex align-items-center zindex-popover\">\r\n");
        out.write("            <div class=\"u-info me-2\">\r\n");
        out.write("                <p class=\"mb-0 text-end line-height-sm \"><span class=\"font-weight-bold\">");
        if (_jspx_meth_security_005fauthentication_005f8(_jspx_th_security_005fauthorize_005f2, _jspx_page_context))
          return true;
        out.write("</span></p>\r\n");
        out.write("\t");
        out.write("\r\n");
        out.write("               <small style=\"color: orange;\">\r\n");
        out.write("\r\n");
        out.write("               <!-- 회사정보 유무 확인 후 메뉴 출력 -->\r\n");
        out.write("               ");
        if (_jspx_meth_c_005fset_005f2(_jspx_th_security_005fauthorize_005f2, _jspx_page_context))
          return true;
        out.write("\r\n");
        out.write("               ");
        if (_jspx_meth_c_005fchoose_005f2(_jspx_th_security_005fauthorize_005f2, _jspx_page_context))
          return true;
        out.write("\r\n");
        out.write("\t\t       ");
        if (_jspx_meth_security_005fauthentication_005f10(_jspx_th_security_005fauthorize_005f2, _jspx_page_context))
          return true;
        out.write("\r\n");
        out.write("               </small>\r\n");
        out.write("            </div>\r\n");
        out.write("            <a class=\"nav-link dropdown-toggle pulse p-0 memberImage\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" data-bs-display=\"static\">\r\n");
        out.write("\r\n");
        out.write("            </a>\r\n");
        out.write("\r\n");
        out.write("            <div class=\"dropdown-menu rounded-lg shadow border-0 dropdown-animation dropdown-menu-end p-0 m-0\">\r\n");
        out.write("                <div class=\"card border-0 w280\">\r\n");
        out.write("                    <div class=\"card-body pb-0\">\r\n");
        out.write("                        <div class=\"d-flex py-1\">\r\n");
        out.write("                            <span class=\"memberImage2\"></span>\r\n");
        out.write("                           ");
        out.write("\r\n");
        out.write("                            <div class=\"flex-fill ms-3\">\r\n");
        out.write("                                <p class=\"mb-0\"><span class=\"font-weight-bold\">");
        if (_jspx_meth_security_005fauthentication_005f11(_jspx_th_security_005fauthorize_005f2, _jspx_page_context))
          return true;
        out.write("</span></p>\r\n");
        out.write("                                <small class=\"\">");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${authMember.username}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("</small>\r\n");
        out.write("                            </div>\r\n");
        out.write("                        </div>\r\n");
        out.write("\r\n");
        out.write("                        <div><hr class=\"dropdown-divider border-dark\"></div>\r\n");
        out.write("                    </div>\r\n");
        out.write("                    <div class=\"list-group m-2 \">\r\n");
        out.write("                    \t<ul id=\"hmList\">\r\n");
        out.write("\t                        <li><a href=\"projects.html\" class=\"list-group-item list-group-item-action border-0 \"><i class=\"icofont-home fs-6 me-3\"></i>프로젝트</a></li>\r\n");
        out.write("\t                        <li><a href=\"/task.html\" class=\"list-group-item list-group-item-action border-0 \"><i class=\"icofont-tasks fs-5 me-3\"></i>작업</a></li>\r\n");
        out.write("\t                        <li data-bs-toggle=\"modal\" data-bs-target=\"#detailProfile\"><a href=\"#\" class=\"list-group-item list-group-item-action border-0 \"><i class=\"icofont-user-alt-3 fs-5 me-3\"></i>내 프로필</a></li>\r\n");
        out.write("\t                       <!--  <a href=\"/ourmine/member/memberView\" class=\"list-group-item list-group-item-action border-0 \"><i class=\"icofont-user-alt-3 fs-5 me-3\"></i>MyPage</a> -->\r\n");
        out.write("\t\t               \t\t\t");
        if (_jspx_meth_c_005fif_005f0(_jspx_th_security_005fauthorize_005f2, _jspx_page_context))
          return true;
        out.write("\r\n");
        out.write("\t                        <form id=\"logoutForm\" action=\"");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("/logout\" method=\"post\">\r\n");
        out.write("\t                        \t");
        if (_jspx_meth_security_005fcsrfInput_005f1(_jspx_th_security_005fauthorize_005f2, _jspx_page_context))
          return true;
        out.write("\r\n");
        out.write("\t                        </form>\r\n");
        out.write("\t                        <li><a href=\"javascript:$('#logoutForm').submit();\" class=\"list-group-item list-group-item-action border-0 \"><i class=\"icofont-logout fs-6 me-3\"></i>로그아웃</a></li>\r\n");
        out.write("\t<!--                         <a href=\"ui-elements/auth-signin.html\" class=\"list-group-item list-group-item-action border-0 \"><i class=\"icofont-logout fs-6 me-3\"></i>로그아웃</a> -->\r\n");
        out.write("\t\t\t\t\t\t</ul>\r\n");
        out.write("                    </div>\r\n");
        out.write("                </div>\r\n");
        out.write("            </div>\r\n");
        out.write("        </div>\r\n");
        out.write("\r\n");
        out.write("\r\n");
        out.write("        ");
      }
      if (_jspx_th_security_005fauthorize_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsecurity_005fauthorize_0026_005faccess.reuse(_jspx_th_security_005fauthorize_005f2);
      _jspx_th_security_005fauthorize_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_security_005fauthorize_005f2, _jsp_getInstanceManager(), _jspx_th_security_005fauthorize_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_security_005fauthentication_005f7(javax.servlet.jsp.tagext.JspTag _jspx_th_security_005fauthorize_005f2, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  security:authentication
    org.springframework.security.taglibs.authz.AuthenticationTag _jspx_th_security_005fauthentication_005f7 = (org.springframework.security.taglibs.authz.AuthenticationTag) _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fvar_005fproperty_005fnobody.get(org.springframework.security.taglibs.authz.AuthenticationTag.class);
    boolean _jspx_th_security_005fauthentication_005f7_reused = false;
    try {
      _jspx_th_security_005fauthentication_005f7.setPageContext(_jspx_page_context);
      _jspx_th_security_005fauthentication_005f7.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_security_005fauthorize_005f2);
      // /includee/headerMenu.jsp(290,8) name = property type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_security_005fauthentication_005f7.setProperty("principal");
      // /includee/headerMenu.jsp(290,8) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_security_005fauthentication_005f7.setVar("authMember");
      int _jspx_eval_security_005fauthentication_005f7 = _jspx_th_security_005fauthentication_005f7.doStartTag();
      if (_jspx_th_security_005fauthentication_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fvar_005fproperty_005fnobody.reuse(_jspx_th_security_005fauthentication_005f7);
      _jspx_th_security_005fauthentication_005f7_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_security_005fauthentication_005f7, _jsp_getInstanceManager(), _jspx_th_security_005fauthentication_005f7_reused);
    }
    return false;
  }

  private boolean _jspx_meth_security_005fauthentication_005f8(javax.servlet.jsp.tagext.JspTag _jspx_th_security_005fauthorize_005f2, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  security:authentication
    org.springframework.security.taglibs.authz.AuthenticationTag _jspx_th_security_005fauthentication_005f8 = (org.springframework.security.taglibs.authz.AuthenticationTag) _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fproperty_005fnobody.get(org.springframework.security.taglibs.authz.AuthenticationTag.class);
    boolean _jspx_th_security_005fauthentication_005f8_reused = false;
    try {
      _jspx_th_security_005fauthentication_005f8.setPageContext(_jspx_page_context);
      _jspx_th_security_005fauthentication_005f8.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_security_005fauthorize_005f2);
      // /includee/headerMenu.jsp(293,88) name = property type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_security_005fauthentication_005f8.setProperty("principal.realUser.memberName");
      int _jspx_eval_security_005fauthentication_005f8 = _jspx_th_security_005fauthentication_005f8.doStartTag();
      if (_jspx_th_security_005fauthentication_005f8.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fproperty_005fnobody.reuse(_jspx_th_security_005fauthentication_005f8);
      _jspx_th_security_005fauthentication_005f8_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_security_005fauthentication_005f8, _jsp_getInstanceManager(), _jspx_th_security_005fauthentication_005f8_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_security_005fauthorize_005f2, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f2 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f2_reused = false;
    try {
      _jspx_th_c_005fset_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_security_005fauthorize_005f2);
      // /includee/headerMenu.jsp(298,15) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f2.setVar("companyName");
      // /includee/headerMenu.jsp(298,15) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f2.setValue(new org.apache.jasper.el.JspValueExpression("/includee/headerMenu.jsp(298,15) '${principal.realUser.companyName }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${principal.realUser.companyName }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f2 = _jspx_th_c_005fset_005f2.doStartTag();
      if (_jspx_th_c_005fset_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f2);
      _jspx_th_c_005fset_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_security_005fauthorize_005f2, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f2 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f2_reused = false;
    try {
      _jspx_th_c_005fchoose_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_security_005fauthorize_005f2);
      int _jspx_eval_c_005fchoose_005f2 = _jspx_th_c_005fchoose_005f2.doStartTag();
      if (_jspx_eval_c_005fchoose_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t               ");
          if (_jspx_meth_c_005fwhen_005f2(_jspx_th_c_005fchoose_005f2, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("\t               ");
          if (_jspx_meth_c_005fotherwise_005f2(_jspx_th_c_005fchoose_005f2, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("               ");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f2);
      _jspx_th_c_005fchoose_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f2, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f2 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f2_reused = false;
    try {
      _jspx_th_c_005fwhen_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f2);
      // /includee/headerMenu.jsp(300,16) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty companyName}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f2 = _jspx_th_c_005fwhen_005f2.doStartTag();
      if (_jspx_eval_c_005fwhen_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t               ");
          if (_jspx_meth_security_005fauthentication_005f9(_jspx_th_c_005fwhen_005f2, _jspx_page_context))
            return true;
          out.write(",\r\n");
          out.write("\t               ");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f2);
      _jspx_th_c_005fwhen_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_security_005fauthentication_005f9(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fwhen_005f2, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  security:authentication
    org.springframework.security.taglibs.authz.AuthenticationTag _jspx_th_security_005fauthentication_005f9 = (org.springframework.security.taglibs.authz.AuthenticationTag) _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fproperty_005fnobody.get(org.springframework.security.taglibs.authz.AuthenticationTag.class);
    boolean _jspx_th_security_005fauthentication_005f9_reused = false;
    try {
      _jspx_th_security_005fauthentication_005f9.setPageContext(_jspx_page_context);
      _jspx_th_security_005fauthentication_005f9.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f2);
      // /includee/headerMenu.jsp(301,17) name = property type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_security_005fauthentication_005f9.setProperty("principal.realUser.companyName");
      int _jspx_eval_security_005fauthentication_005f9 = _jspx_th_security_005fauthentication_005f9.doStartTag();
      if (_jspx_th_security_005fauthentication_005f9.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fproperty_005fnobody.reuse(_jspx_th_security_005fauthentication_005f9);
      _jspx_th_security_005fauthentication_005f9_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_security_005fauthentication_005f9, _jsp_getInstanceManager(), _jspx_th_security_005fauthentication_005f9_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f2, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f2 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f2_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f2);
      int _jspx_eval_c_005fotherwise_005f2 = _jspx_th_c_005fotherwise_005f2.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t                  회사정보가 없습니다.\r\n");
          out.write("\t               ");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f2);
      _jspx_th_c_005fotherwise_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_security_005fauthentication_005f10(javax.servlet.jsp.tagext.JspTag _jspx_th_security_005fauthorize_005f2, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  security:authentication
    org.springframework.security.taglibs.authz.AuthenticationTag _jspx_th_security_005fauthentication_005f10 = (org.springframework.security.taglibs.authz.AuthenticationTag) _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fproperty_005fnobody.get(org.springframework.security.taglibs.authz.AuthenticationTag.class);
    boolean _jspx_th_security_005fauthentication_005f10_reused = false;
    try {
      _jspx_th_security_005fauthentication_005f10.setPageContext(_jspx_page_context);
      _jspx_th_security_005fauthentication_005f10.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_security_005fauthorize_005f2);
      // /includee/headerMenu.jsp(307,9) name = property type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_security_005fauthentication_005f10.setProperty("principal.realUser.memberGrade");
      int _jspx_eval_security_005fauthentication_005f10 = _jspx_th_security_005fauthentication_005f10.doStartTag();
      if (_jspx_th_security_005fauthentication_005f10.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fproperty_005fnobody.reuse(_jspx_th_security_005fauthentication_005f10);
      _jspx_th_security_005fauthentication_005f10_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_security_005fauthentication_005f10, _jsp_getInstanceManager(), _jspx_th_security_005fauthentication_005f10_reused);
    }
    return false;
  }

  private boolean _jspx_meth_security_005fauthentication_005f11(javax.servlet.jsp.tagext.JspTag _jspx_th_security_005fauthorize_005f2, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  security:authentication
    org.springframework.security.taglibs.authz.AuthenticationTag _jspx_th_security_005fauthentication_005f11 = (org.springframework.security.taglibs.authz.AuthenticationTag) _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fproperty_005fnobody.get(org.springframework.security.taglibs.authz.AuthenticationTag.class);
    boolean _jspx_th_security_005fauthentication_005f11_reused = false;
    try {
      _jspx_th_security_005fauthentication_005f11.setPageContext(_jspx_page_context);
      _jspx_th_security_005fauthentication_005f11.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_security_005fauthorize_005f2);
      // /includee/headerMenu.jsp(321,79) name = property type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_security_005fauthentication_005f11.setProperty("principal.realUser.memberName");
      int _jspx_eval_security_005fauthentication_005f11 = _jspx_th_security_005fauthentication_005f11.doStartTag();
      if (_jspx_th_security_005fauthentication_005f11.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsecurity_005fauthentication_0026_005fproperty_005fnobody.reuse(_jspx_th_security_005fauthentication_005f11);
      _jspx_th_security_005fauthentication_005f11_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_security_005fauthentication_005f11, _jsp_getInstanceManager(), _jspx_th_security_005fauthentication_005f11_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_security_005fauthorize_005f2, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_security_005fauthorize_005f2);
      // /includee/headerMenu.jsp(334,20) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty companyName}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t                        <li><a href=\"/ourmine/company/companyListJoin\" class=\"list-group-item list-group-item-action border-0 \"><i class=\"icofont-contact-add fs-5 me-3\"></i>회사 가입하기</a></li>\r\n");
          out.write("\t\t               \t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_security_005fcsrfInput_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_security_005fauthorize_005f2, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  security:csrfInput
    org.springframework.security.taglibs.csrf.CsrfInputTag _jspx_th_security_005fcsrfInput_005f1 = (org.springframework.security.taglibs.csrf.CsrfInputTag) _005fjspx_005ftagPool_005fsecurity_005fcsrfInput_005fnobody.get(org.springframework.security.taglibs.csrf.CsrfInputTag.class);
    boolean _jspx_th_security_005fcsrfInput_005f1_reused = false;
    try {
      _jspx_th_security_005fcsrfInput_005f1.setPageContext(_jspx_page_context);
      _jspx_th_security_005fcsrfInput_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_security_005fauthorize_005f2);
      int _jspx_eval_security_005fcsrfInput_005f1 = _jspx_th_security_005fcsrfInput_005f1.doStartTag();
      if (_jspx_th_security_005fcsrfInput_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsecurity_005fcsrfInput_005fnobody.reuse(_jspx_th_security_005fcsrfInput_005f1);
      _jspx_th_security_005fcsrfInput_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_security_005fcsrfInput_005f1, _jsp_getInstanceManager(), _jspx_th_security_005fcsrfInput_005f1_reused);
    }
    return false;
  }
}
