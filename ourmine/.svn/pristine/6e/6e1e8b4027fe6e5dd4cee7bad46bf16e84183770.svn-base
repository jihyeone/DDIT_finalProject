package kr.or.ddit.chatting.controller;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.inject.Inject;

import org.springframework.http.MediaType;
import org.springframework.messaging.simp.SimpMessagingTemplate;
import org.springframework.security.core.Authentication;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.chatting.service.ChattingService;
import kr.or.ddit.chatting.vo.ChatRoom;
import kr.or.ddit.chatting.vo.ChatVO;
import kr.or.ddit.member.vo.MemberVO;
import kr.or.ddit.member.vo.MemberVOWrapper;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

@Controller
@RequestMapping("/company/{companyId}/chat")
@RequiredArgsConstructor
@Slf4j
public class ChattingController {

	private final ChattingService service;

//	@Resource(name="chatRooms")
//	private Map<String, ChatRoom> chatRooms;
//	@Inject
//	private SimpMessagingTemplate msgTmpl;

	@GetMapping("chat") //
	public String chattingList(@PathVariable int companyId) {
		return "chat/chat";
	}

	@GetMapping(value ="chatJson",produces = "application/json;charset=utf-8") //
	@ResponseBody
	public List<ChatVO> chatGetList ( Authentication user,@PathVariable int companyId){
		MemberVOWrapper voWrapper = (MemberVOWrapper) user.getPrincipal();
		   int memId = voWrapper.getRealUser().getMemberId();
		   log.info("memId:{}",memId);
		   List<ChatVO> chat = service.selectChatList(memId);
		   log.info("chat:{}",chat);

		return chat;
	}
	@GetMapping(value ="coMemList",produces = "application/json;charset=utf-8") //
	@ResponseBody
	public List<MemberVO> coMemList (@PathVariable int companyId){

		List<MemberVO> list = service.selectChatCoMemList(companyId);
		log.info("listlistlist:{}",list);

		return list;
	}

//	@PostMapping(value="makeRoom", produces = MediaType.APPLICATION_JSON_VALUE)
//	@ResponseBody
//	public ChatRoom makeRoom(Authentication authentication, String roomTitle) {
//		ChatRoom newRoom = new ChatRoom(msgTmpl, authentication.getName(), roomTitle);
//		chatRooms.put(newRoom.getRoomId(), newRoom);
//		msgTmpl.convertAndSend("/chatting/roomList", newRoom);
//		return newRoom;
//	}
//
//	@GetMapping("enter/{roomId}")
//	public String enterRoom(@PathVariable String roomId, Model model) {
//		ChatRoom findedRoom = chatRooms.get(roomId);
//		model.addAttribute("room", findedRoom);
//		return "chatting/roomView";
//	}


}
