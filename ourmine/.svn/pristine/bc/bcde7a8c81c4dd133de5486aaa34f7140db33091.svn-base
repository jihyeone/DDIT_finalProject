<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jstl/core"  prefix="c"%>
<%@ taglib uri="http://www.springframework.org/security/tags" prefix="security" %>
<%@ taglib uri="http://www.springframework.org/tags" prefix="spring" %>

<style>
    #todoDiv {
        display: none;
    }
    #todoCon {
    	margin-left: 20px;
    }
    .btnMargin {
    	margin-right: 20px;
    }
    .modal {
    	display: none;
    }
    .btn-toolbar {
    	float: right;
    }
</style>

<div class="body d-flex py-lg-3 py-md-2">
    <div class="container-xxl">
	    <div class="border-0 mb-4">
	        <div class="card-header py-3 no-bg bg-transparent d-flex align-items-center px-0 justify-content-between border-bottom flex-wrap">
	            <h3 class="fw-bold mb-0">나의 일감</h3>
	        </div>
	    </div>
        
        <!-- TodoList 목록 -->
        <div class="row mb-3" id="todoDiv" >
            <div class="col-12">
                <div class="card my-todo">
					<div class="card-header py-3 d-flex justify-content-between bg-transparent border-bottom-0">
						<h4 class="mb-0 fw-bold">Todo List</h4>
						<div class="col-auto d-flex">
							<button type="button" class="btn-close" aria-label="Close" onclick="todoDivHidden()"></button>
						</div> 
					</div>
					<div class="card-body p-2">
						<div class="btn-toolbar" role="toolbar" aria-label="Toolbar with button groups">
							<div class="btn-group me-2" role="group" aria-label="First group">
								<button type="button" class="btn btn-secondary">전체선택</button>
							</div>
							<div class="btn-group me-2" role="group" aria-label="Second group">
								<button type="button" class="btn btn-dark" data-bs-toggle="modal" onclick="addModalOpen()">
									<i class="icofont-plus-circle me-2 fs-6"></i> 글등록
								</button>
							</div>
						</div>
                    </div>
                    <div class="card-body p-4">
                        <ul class="list-unstyled mb-0 todo-list" id="todoList" >
                        
                        </ul>
					</div>
                </div>
            </div>
        </div> 
        
	    <!-- todo 등록 모달-->
	    <form id="insertForm" method="post">
	        <div class="modal" id="todoAddModal" tabindex="-1" aria-hidden="true">
	            <div class="modal-dialog modal-dialog-centered modal-md modal-dialog-scrollable">
	                <div class="modal-content">
	                    <div class="modal-header">
	                        <h5 class="modal-title  fw-bold" id="leaveaddLabel"> 글등록 </h5>
	                    </div>
	                    <div class="modal-body">
	                        <div class="deadline-form">
                                <div class="row g-3 mb-3">
                                    <div class="col">
                                        <label class="form-label">제목</label>
                                        <input type="text" class="form-control" id="todoTitle" name="todoTitle" required>
                                    </div>
                                    <div class="col">
                                        <label class="form-label">작성자</label>
                                        <input type="text" class="form-control" id="todoWriter" name="todoWriter" value="" readonly>
                                    </div>
                                </div>
	                        </div>
	                        <div class="mb-3">
	                            <label for="todoContent" class="form-label">내용</label>
	                            <textarea rows="3" cols="50" class="form-control" id="todoContent" name="todoContent" required></textarea>
	                        </div>
	                        <div class="mb-3">
                            	<input type="hidden" class="form-control" id="projectWorkId" name="projectWorkId" value="">
                            	<input type="hidden" class="form-control" id="dotoId" name="dotoId" value="" >
                            </div>
	                    </div>
	                    <div class="modal-footer">
	                        <button type="button" class="btn btn-secondary" onclick="addModalClose()">취소</button>
	                        <button type="submit" class="btn btn-primary" id="addButton">등록</button>
	                    </div>
	                </div>
	            </div>
	        </div>
        </form>

		<!-- 나의 일감 리스트 -->
        <div class="row clearfix g-3">
            <div class="col-sm-12">
                <div class="card mb-3">
                    <div class="card-body">
                        <table id="myProjectTable" class="table table-hover align-middle mb-0" style="width:100%">
                            <thead>
                                <tr>
                                    <th>번호</th>
                                    <th>상태</th>
                                    <th>우선순위</th> 
                                    <th>제목</th> 
                                    <th>시작일</th>
                                    <th>마감일</th>  
                                </tr>
                                </thead>
                            <tbody id="pwList">
                            	<tr style="display: none;">
                                    <th>번호</th>
                                    <th>상태</th>
                                    <th>우선순위</th> 
                                    <th>제목</th> 
                                    <th>시작일</th>  
                                    <th>마감일</th>  
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div><!-- Row End -->

    </div>
</div>

<security:authentication property="principal" var="principal"/>

<input id="projectIdHidden" type="hidden" value="${projectId}">
<input id="companyIdHidden" type="hidden" value="${companyId}">

<!-- ================================================================================================= -->

<script type="text/javascript">
    let reset =  document.querySelector('.reset');
	let projectWorkId =  document.querySelector('#projectWorkId');
	let dotoId =  document.querySelector('#dotoId');
	let todoWriter =  document.querySelector('#todoWriter');

	const todo = {
	    projectWorkId : '',
        todoId : '',
	    memberName : '',
	}
	
	const add = (a,b) => a + b;
	
	let projectIdHidden = document.querySelector('#projectIdHidden');
	let projectIdHiddenValue = projectIdHidden.value;
	console.log("projectIdHiddenValue: ", projectIdHiddenValue);
    
	let companyIdHidden = document.querySelector('#companyIdHidden');
	let companyIdHiddenValue = companyIdHidden.value;
	console.log("companyIdHiddenValue: ", companyIdHiddenValue);
	
	
//<!-- ================================================================================================= -->	
	// 글작성 버튼 클릭 이벤트(모달)
    const addModal = document.querySelector("#todoAddModal");
	
	const addModalClose = () => {
		addModal.style.display = "none";    // 안보이게
    }
	const addModalOpen = () => {
		$('#insertForm')[0].reset();
		addModal.style.display = "block";    // 보이게
		
        projectWorkId.value = todo.projectWorkId;
        dotoId.value = todo.dotoId;
        todoWriter.value = todo.memberName;
    }
    
//<!-- ================================================================================================= -->	
	// 글등록
	$(function() {
	    $('#insertForm').submit(function(e){
	        console.log("todo 등록");
	        e.preventDefault();
	
	        let data = {
                dotoId: this.dotoId.value,
	            todoTitle: this.todoTitle.value,
	            todoContent: this.todoContent.value,
	            todoWriter: this.todoWriter.value,
                projectWorkId : this.projectWorkId.value
	        }
	        console.log("데이터 확인 : ", data);
	        
	        headers['accept'] = 'application/json';
	
	        $.ajax({
	            type: 'POST',
	            url: '/ourmine/company/${companyId}/project/${projectId}/projectTodoList/projectTodoListForm',
	            data: JSON.stringify(data),
	            contentType: 'application/json;charset=UTF-8',
	            headers: headers,
	            success: function(res) {
	                console.log("확인 : ", res);
	                
	                addModalClose();  // 모달 닫기
	                reload();
	            },
	            error: function(error) {
	                console.log("error : ", error);
	            }
	        })
	    })
	});

// <!-- ================================================================================================= -->	
    const todoDiv = document.querySelector("#todoDiv");
	
	// 일감 행(clickTr) 클릭 이벤트
	const todoDivOpen = () => {
		todoDiv.style.display = "block";    // todoDiv 보이게
	}

	// todoDiv 클릭 이벤트
	const todoDivHidden = () => {
		todoDiv.style.display = "none"; // todoDiv 안보이게
	}

//<!-- ================================================================================================= -->	
	// tr클릭 이벤트
	function clickTrEvent(trObj) {
		
		todoDivOpen();	// tododiv 열기
         
      	let projectTodoList = document.querySelector('#todoList');
         
        let workId = todo.projectWorkId;
		console.log("workId: ", workId);
     
		headers['accept'] = 'application/json';
         
		$.ajax({
			url: '/ourmine/company/${companyId}/project/${projectId}/projectTodoList/todoList',
            type: 'GET',
            dataType: 'json',
            data: {
                projectWorkId: workId
            },
            headers: headers,
            success: function(data) {
                projectTodoList.innerHTML = '';
                console.log("todoData : ", data);
                
                projectTodoList.innerHTML += data.map(item => 
	                 `
	                 <li class="d-flex justify-content-between delCont" data-todoid=\${item.todoId} >
	                 	<div class="todo-action content">
	                 		<div>
                       			<input type="checkbox" id="checkRow" class="btn checkBtn checkRow" data-todoid =\${item.todoId}>
                       		</div>
                       		<div>
                       			<span class="todoCon" id="todoCon">\${item.todoContent}</span>
                       		</div>
	                    </div>
	                    <div class="todo-action btnMargin">
	                    	<button type="button" class="btn checkBtn deleteRow" data-todoid =\${item.todoId} ><i class="icofont-ui-delete text-danger"></i></button>
	                    </div>
	                 </li>
	                 <hr>
	                 `
             	).reduce(add)
             	
            	let checkRow = document.querySelector('#checkRow');
			   	let check = document.getElementById('todoCon');
			    
			   	checkRow.addEventListener('change', (event) => {
				   	if(checkRow.checked){
					   	check.style.textDecorationLine = 'line-through';
				   	}else {
				   		check.style.textDecorationLine = 'none';
				   	}
			    })
			},
	        error: function (error) {
	            console.log("Error: ", error);
	        }
		});
	}

// <!-- ================================================================================================= -->	
    // todo 체크
    $(document).on("click", ".checkRow", function(e) {
        console.log("체크버튼 클릭");
        
        e.preventDefault();
        
        let projectTodoList = document.querySelector('#todoList');
        
        let todoId = $(this).data("todoid");
        console.log("todoId :" , todoId);
        
        headers['accept'] = 'application/json';

        axios.post(`/ourmine/company/\${companyIdHiddenValue}/project/\${projectIdHiddenValue}/projectTodoList/projecTodoListComplete`, todoId, {headers: headers})
            .then(resp => {
            	projectTodoList.innerHTML = ''; // todoList 목록 비우기
                reload();
            })
    });
    
// <!-- ================================================================================================= -->	
    // todo 삭제
    $(document).on("click", ".deleteRow", function(e) {
        console.log("삭제버튼 클릭");
        
        e.preventDefault();
        
        let projectTodoList = document.querySelector('#todoList');
        
        let todoId = $(this).data("todoid");
        console.log("todoId :" , todoId);
        
        headers['accept'] = 'application/json';

        axios.post(`/ourmine/company/\${companyIdHiddenValue}/project/\${projectIdHiddenValue}/projectTodoList/projectTodoListDelete`, todoId, {headers: headers})
            .then(resp => {
            	projectTodoList.innerHTML = ''; // todoList 목록 비우기
                reload();
            })
    });

// <!-- ================================================================================================= -->	
    // todo reload
    async function reload() {
        let projectTodoList = document.querySelector('#todoList');
        
        headers['accept'] = 'application/json';
        
        await axios.get(`/ourmine/company/\${companyIdHiddenValue}/project/\${projectIdHiddenValue}/projectTodoList/todoList`,{
                params : {
                    projectWorkId : todo.projectWorkId
                }
                },{headers:headers})
                .then(resp => {
	                projectTodoList.innerHTML = ''; // todoList 목록 비우기
					let data = resp.data
		            console.log("data : ", data);
		
		            projectTodoList.innerHTML += data.map(item => 
		                `
						<li class="d-flex justify-content-between delCont" data-todoid=\${item.todoId} >
							<div class="todo-action content">
								<input type="checkbox" id="checkRow" class="btn checkBtn checkRow" data-todoid =\${item.todoId}>
		                    	<span class="todoCon" id="todoCon">\${item.todoContent}</span>
		                    </div>
		                    <div class="todo-action btnMargin">
		                    	<button type="button" class="btn checkBtn deleteRow" data-todoid =\${item.todoId} ><i class="icofont-ui-delete text-danger"></i></button>
		                    </div>
						</li>
						<hr>
		                `
		            ).reduce(add)
	        	})
   	}

// <!-- ================================================================================================= -->	
	// 나의 일감 리스트
	let projectWorkList = document.querySelector('#pwList');

    headers['accept'] = 'application/json';

	async function pwList() {
		await axios.get(`/ourmine/company/\${companyIdHiddenValue}/project/\${projectIdHiddenValue}/projectTodoList/projectWorkList`, {headers: headers})
            .then(resp => {
                let pwdata = resp.data;
                console.log("pwdata: ", pwdata);

                todo.memberName = pwdata[0].projectWorkPic; // todo.memberName에 pwdata의 projectWorkPic넣어주기(글 등록 시 이름 넣어주기 위해서)

                projectWorkList.innerHTML += pwdata.map(item => 
                    `
					<tr onclick="clickTrEvent(this)" class="clickTr" 
							data-workid=\${item.projectWorkId} data-pwstatus=\${item.projectWorkStatus}
							data-ppname=\${item.projectPriorityName} data-pwtitle=\${item.projectWorkTitle} 
							data-pwsdate=\${item.projectWorkStartDate} data-pwedate=\${item.projectWorkEndDate}>
                        <td data-workid=\${item.projectWorkId}>
                            <span class="fw-bold text-secondary" id="projectWorkId">\${item.projectWorkId}</span>
                        </td>
                        <td data-workid=\${item.projectWorkId}>
                        	<span id="projectWorkStatus">\${item.projectWorkStatus}</span>
                        </td>
                        <td data-workid=\${item.projectWorkId}>
                        	<span class="badge bg-warning" id="projectPriorityName">\${item.projectPriorityName}</span>
                        </td>
                        <td data-workid=\${item.projectWorkId}>
                            \${item.projectWorkTitle}
                        </td>
                        <td data-workid=\${item.projectWorkId}>
                    		\${item.projectWorkStartDate}
	                    </td>
	                    <td data-workid=\${item.projectWorkId}>
	                    	\${item.projectWorkEndDate}
	                    </td>
					</tr>
                    `
                ).reduce(add)
            })
            
    }
	
// <!-- ================================================================================================= -->	
    // 일감 목록 조회 성공 시
    pwList().then((e) => {
        let click =  document.querySelectorAll('.clickTr');
        console.log("클릭클릭 = ", click);

        click.forEach(item => {
            item.addEventListener('click', (e) => {
                todo.projectWorkId = e.target.dataset.workid;
                console.log("todo.projectWorkId = ",todo.projectWorkId);
                console.log("todo.memberName = ",todo.memberName);
               
                clickTrEvent();  // tr태그 클릭이벤트 실행
            })
        })
	})
    
</script>