<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-5.7.xsd">


<!-- 	Authentication Manager -> AuthenticationProvider(신원 확인) -> UserDetailService(=MemberDAO,사용자조회) -->
	<bean id="passwordEncoder" class="org.springframework.security.crypto.factory.PasswordEncoderFactories"
		factory-method="createDelegatingPasswordEncoder"
	/>
	<security:authentication-manager id="authManager" erase-credentials="false">
		<security:authentication-provider user-service-ref="memberDAO">
			<security:password-encoder ref="passwordEncoder"/>
		</security:authentication-provider>
	</security:authentication-manager>



	<bean id="authenticationFailureHandler"  class="kr.or.ddit.security.handler.CustomAuthenticationFailureHandler"
		p:targetURL="/login"
	 />

	<bean id="customeLoginSuccessHandler" class="kr.or.ddit.commons.controller.CustomeLoginSuccessHandler">
    <property name="defaultUrl" value="/"/>
</bean>


	<!-- <security:http pattern="/homepage/**" security="none"/> -->

	<!-- 웹소켓 URI 스프링 시큐리티에서 제외 . -->
	<!-- <security:http pattern="/ws/**" security="none"/> -->

	<!-- 알림 웹소켓 URI 스프링 시큐리티에서 제외 . -->
	<security:http pattern="/aws/**" security="none"/>

	<security:http pattern="/member/memberJoin/**" security="none"/>
	<security:http pattern="/member/member/json/**" security="none"/>


	<security:http pattern="/resources/**" security="none"/>

	<security:http authentication-manager-ref="authManager">
		<security:form-login
			default-target-url="/" always-use-default-target="true"
			login-page="/login"
			username-parameter="memberEmail"
			password-parameter="memberPassword"
			authentication-failure-handler-ref="authenticationFailureHandler"
			authentication-success-handler-ref="customeLoginSuccessHandler"

		/>


		<!-- AuthorizationManger -->
		<security:logout logout-url="/logout"/>
		<security:intercept-url pattern="/login" access="permitAll"/>
		<security:intercept-url pattern="/index" access="permitAll"/>
		<security:intercept-url pattern="/homepage" access="permitAll"/>
		
		<!-- 조직도 접근제한 -->
<!-- 			<security:intercept-url pattern="/company/{companyId}/orgchart/**" access="hasRole('MANAGER')"/>  MANGER -->

		<!--  프로젝트 리스트 접근제한 -->
		<security:intercept-url pattern="/company/{companyId}/project/projectList" access="T(kr.or.ddit.commons.auth.AutorityUtils).inCompany(authentication, request)"/>  <!-- MANGER -->

		<security:intercept-url pattern="/company/{companyId}/project/projectList/projectView" access="T(kr.or.ddit.commons.auth.AutorityUtils).inCompanyRole(authentication, request, 'PM') or hasRole('MANAGER')"/>
		<security:intercept-url pattern="/company/{companyId}/project/projectList/projectDelete" access="T(kr.or.ddit.commons.auth.AutorityUtils).inCompanyRole(authentication, request, 'PM') or hasRole('MANAGER')"/>
		<security:intercept-url pattern="/company/{companyId}/project/projectList/projectInsertMember" access="T(kr.or.ddit.commons.auth.AutorityUtils).inCompanyRole(authentication, request, 'PM') or hasRole('MANAGER')"/>

		<!-- 프로젝트 일감 접근제한 -->
		<security:intercept-url pattern="/company/{companyId}/project/{projectId}/projectWork/projectWorkForm" access="T(kr.or.ddit.commons.auth.AutorityUtils).inCompanyProjectRole(authentication, request, 'PL') or T(kr.or.ddit.commons.auth.AutorityUtils).inCompanyProjectRole(authentication, request, 'PM')"/>
		<security:intercept-url pattern="/company/{companyId}/project/{projectId}/projectWork/projectWorkView" access="T(kr.or.ddit.commons.auth.AutorityUtils).inCompanyProjectRole(authentication, request, 'PL') or T(kr.or.ddit.commons.auth.AutorityUtils).inCompanyProjectRole(authentication, request, 'PM')"/>


		<security:intercept-url pattern="/noticeBoard/noticeBoardListJson" access="permitAll"/>
		<security:intercept-url pattern="/noticeBoard/fnqNoticeBoardListJson" access="permitAll"/>

		<security:intercept-url pattern="/includee/headerMenu.jsp" access="hasAnyRole('MEMBER', 'MANAGER')"/>
		<security:intercept-url pattern="/includee/headerMenuAdmin.jsp" access="hasRole('ADMIN')"/>

		<security:intercept-url pattern="/includee/leftMenu.jsp" access="hasRole('MEMBER')"/>
		<security:intercept-url pattern="/includee/leftMenuAdmin.jsp" access="hasRole('ADMIN')"/>
		<security:intercept-url pattern="/includee/leftMenuManager.jsp" access="hasRole('MANAGER')"/>

		<security:intercept-url pattern="/**" access="isAuthenticated()"/>

	</security:http>
</beans>
